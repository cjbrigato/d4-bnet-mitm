// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: bgs/low/pb/client/club_invitation.proto

package v1

import (
	_ "github.com/cjbrigato/logprox/bnet/bgs/protocol"
	v2 "github.com/cjbrigato/logprox/bnet/bgs/protocol/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClubSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role            *uint32 `protobuf:"varint,1,opt,name=role" json:"role,omitempty"`
	DefaultStreamId *uint64 `protobuf:"varint,2,opt,name=default_stream_id,json=defaultStreamId" json:"default_stream_id,omitempty"`
}

func (x *ClubSlot) Reset() {
	*x = ClubSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubSlot) ProtoMessage() {}

func (x *ClubSlot) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubSlot.ProtoReflect.Descriptor instead.
func (*ClubSlot) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_invitation_proto_rawDescGZIP(), []int{0}
}

func (x *ClubSlot) GetRole() uint32 {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return 0
}

func (x *ClubSlot) GetDefaultStreamId() uint64 {
	if x != nil && x.DefaultStreamId != nil {
		return *x.DefaultStreamId
	}
	return 0
}

type SendInvitationOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId  *MemberId       `protobuf:"bytes,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Slot      *ClubSlot       `protobuf:"bytes,2,opt,name=slot" json:"slot,omitempty"`
	Attribute []*v2.Attribute `protobuf:"bytes,3,rep,name=attribute" json:"attribute,omitempty"`
}

func (x *SendInvitationOptions) Reset() {
	*x = SendInvitationOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInvitationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInvitationOptions) ProtoMessage() {}

func (x *SendInvitationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInvitationOptions.ProtoReflect.Descriptor instead.
func (*SendInvitationOptions) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_invitation_proto_rawDescGZIP(), []int{1}
}

func (x *SendInvitationOptions) GetTargetId() *MemberId {
	if x != nil {
		return x.TargetId
	}
	return nil
}

func (x *SendInvitationOptions) GetSlot() *ClubSlot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *SendInvitationOptions) GetAttribute() []*v2.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

type ClubInvitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *uint64            `protobuf:"fixed64,1,opt,name=id" json:"id,omitempty"`
	Inviter        *MemberDescription `protobuf:"bytes,2,opt,name=inviter" json:"inviter,omitempty"`
	Invitee        *MemberDescription `protobuf:"bytes,3,opt,name=invitee" json:"invitee,omitempty"`
	Club           *ClubDescription   `protobuf:"bytes,4,opt,name=club" json:"club,omitempty"`
	Slot           *ClubSlot          `protobuf:"bytes,5,opt,name=slot" json:"slot,omitempty"`
	Attribute      []*v2.Attribute    `protobuf:"bytes,6,rep,name=attribute" json:"attribute,omitempty"`
	CreationTime   *uint64            `protobuf:"varint,7,opt,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	ExpirationTime *uint64            `protobuf:"varint,8,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
	Suggester      *MemberDescription `protobuf:"bytes,9,opt,name=suggester" json:"suggester,omitempty"`
}

func (x *ClubInvitation) Reset() {
	*x = ClubInvitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubInvitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubInvitation) ProtoMessage() {}

func (x *ClubInvitation) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubInvitation.ProtoReflect.Descriptor instead.
func (*ClubInvitation) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_invitation_proto_rawDescGZIP(), []int{2}
}

func (x *ClubInvitation) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ClubInvitation) GetInviter() *MemberDescription {
	if x != nil {
		return x.Inviter
	}
	return nil
}

func (x *ClubInvitation) GetInvitee() *MemberDescription {
	if x != nil {
		return x.Invitee
	}
	return nil
}

func (x *ClubInvitation) GetClub() *ClubDescription {
	if x != nil {
		return x.Club
	}
	return nil
}

func (x *ClubInvitation) GetSlot() *ClubSlot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *ClubInvitation) GetAttribute() []*v2.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *ClubInvitation) GetCreationTime() uint64 {
	if x != nil && x.CreationTime != nil {
		return *x.CreationTime
	}
	return 0
}

func (x *ClubInvitation) GetExpirationTime() uint64 {
	if x != nil && x.ExpirationTime != nil {
		return *x.ExpirationTime
	}
	return 0
}

func (x *ClubInvitation) GetSuggester() *MemberDescription {
	if x != nil {
		return x.Suggester
	}
	return nil
}

type SendSuggestionOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId       *MemberId       `protobuf:"bytes,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Slot           *ClubSlot       `protobuf:"bytes,2,opt,name=slot" json:"slot,omitempty"`
	Attribute      []*v2.Attribute `protobuf:"bytes,3,rep,name=attribute" json:"attribute,omitempty"`
	JoinClubSource *uint32         `protobuf:"varint,4,opt,name=join_club_source,json=joinClubSource" json:"join_club_source,omitempty"`
}

func (x *SendSuggestionOptions) Reset() {
	*x = SendSuggestionOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSuggestionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSuggestionOptions) ProtoMessage() {}

func (x *SendSuggestionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSuggestionOptions.ProtoReflect.Descriptor instead.
func (*SendSuggestionOptions) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_invitation_proto_rawDescGZIP(), []int{3}
}

func (x *SendSuggestionOptions) GetTargetId() *MemberId {
	if x != nil {
		return x.TargetId
	}
	return nil
}

func (x *SendSuggestionOptions) GetSlot() *ClubSlot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *SendSuggestionOptions) GetAttribute() []*v2.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *SendSuggestionOptions) GetJoinClubSource() uint32 {
	if x != nil && x.JoinClubSource != nil {
		return *x.JoinClubSource
	}
	return 0
}

type ClubSuggestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *uint64            `protobuf:"fixed64,1,opt,name=id" json:"id,omitempty"`
	ClubId         *uint64            `protobuf:"varint,2,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	Suggester      *MemberDescription `protobuf:"bytes,3,opt,name=suggester" json:"suggester,omitempty"`
	Suggestee      *MemberDescription `protobuf:"bytes,4,opt,name=suggestee" json:"suggestee,omitempty"`
	Slot           *ClubSlot          `protobuf:"bytes,5,opt,name=slot" json:"slot,omitempty"`
	Attribute      []*v2.Attribute    `protobuf:"bytes,6,rep,name=attribute" json:"attribute,omitempty"`
	CreationTime   *uint64            `protobuf:"varint,7,opt,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	ExpirationTime *uint64            `protobuf:"varint,8,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
}

func (x *ClubSuggestion) Reset() {
	*x = ClubSuggestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubSuggestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubSuggestion) ProtoMessage() {}

func (x *ClubSuggestion) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubSuggestion.ProtoReflect.Descriptor instead.
func (*ClubSuggestion) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_invitation_proto_rawDescGZIP(), []int{4}
}

func (x *ClubSuggestion) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ClubSuggestion) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *ClubSuggestion) GetSuggester() *MemberDescription {
	if x != nil {
		return x.Suggester
	}
	return nil
}

func (x *ClubSuggestion) GetSuggestee() *MemberDescription {
	if x != nil {
		return x.Suggestee
	}
	return nil
}

func (x *ClubSuggestion) GetSlot() *ClubSlot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *ClubSuggestion) GetAttribute() []*v2.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *ClubSuggestion) GetCreationTime() uint64 {
	if x != nil && x.CreationTime != nil {
		return *x.CreationTime
	}
	return 0
}

func (x *ClubSuggestion) GetExpirationTime() uint64 {
	if x != nil && x.ExpirationTime != nil {
		return *x.ExpirationTime
	}
	return 0
}

type CreateTicketOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot               *ClubSlot       `protobuf:"bytes,1,opt,name=slot" json:"slot,omitempty"`
	Attribute          []*v2.Attribute `protobuf:"bytes,2,rep,name=attribute" json:"attribute,omitempty"`
	AllowedRedeemCount *uint32         `protobuf:"varint,3,opt,name=allowed_redeem_count,json=allowedRedeemCount" json:"allowed_redeem_count,omitempty"`
	ExpirationTime     *uint64         `protobuf:"varint,4,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
	JoinClubSource     *uint32         `protobuf:"varint,5,opt,name=join_club_source,json=joinClubSource" json:"join_club_source,omitempty"`
}

func (x *CreateTicketOptions) Reset() {
	*x = CreateTicketOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketOptions) ProtoMessage() {}

func (x *CreateTicketOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketOptions.ProtoReflect.Descriptor instead.
func (*CreateTicketOptions) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_invitation_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTicketOptions) GetSlot() *ClubSlot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *CreateTicketOptions) GetAttribute() []*v2.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *CreateTicketOptions) GetAllowedRedeemCount() uint32 {
	if x != nil && x.AllowedRedeemCount != nil {
		return *x.AllowedRedeemCount
	}
	return 0
}

func (x *CreateTicketOptions) GetExpirationTime() uint64 {
	if x != nil && x.ExpirationTime != nil {
		return *x.ExpirationTime
	}
	return 0
}

func (x *CreateTicketOptions) GetJoinClubSource() uint32 {
	if x != nil && x.JoinClubSource != nil {
		return *x.JoinClubSource
	}
	return 0
}

type ClubTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Creator            *MemberDescription `protobuf:"bytes,2,opt,name=creator" json:"creator,omitempty"`
	Club               *ClubDescription   `protobuf:"bytes,3,opt,name=club" json:"club,omitempty"`
	Slot               *ClubSlot          `protobuf:"bytes,4,opt,name=slot" json:"slot,omitempty"`
	Attribute          []*v2.Attribute    `protobuf:"bytes,5,rep,name=attribute" json:"attribute,omitempty"`
	CurrentRedeemCount *uint32            `protobuf:"varint,6,opt,name=current_redeem_count,json=currentRedeemCount" json:"current_redeem_count,omitempty"`
	AllowedRedeemCount *uint32            `protobuf:"varint,7,opt,name=allowed_redeem_count,json=allowedRedeemCount" json:"allowed_redeem_count,omitempty"`
	CreationTime       *uint64            `protobuf:"varint,8,opt,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	ExpirationTime     *uint64            `protobuf:"varint,9,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
}

func (x *ClubTicket) Reset() {
	*x = ClubTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubTicket) ProtoMessage() {}

func (x *ClubTicket) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_invitation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubTicket.ProtoReflect.Descriptor instead.
func (*ClubTicket) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_invitation_proto_rawDescGZIP(), []int{6}
}

func (x *ClubTicket) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ClubTicket) GetCreator() *MemberDescription {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *ClubTicket) GetClub() *ClubDescription {
	if x != nil {
		return x.Club
	}
	return nil
}

func (x *ClubTicket) GetSlot() *ClubSlot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *ClubTicket) GetAttribute() []*v2.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *ClubTicket) GetCurrentRedeemCount() uint32 {
	if x != nil && x.CurrentRedeemCount != nil {
		return *x.CurrentRedeemCount
	}
	return 0
}

func (x *ClubTicket) GetAllowedRedeemCount() uint32 {
	if x != nil && x.AllowedRedeemCount != nil {
		return *x.AllowedRedeemCount
	}
	return 0
}

func (x *ClubTicket) GetCreationTime() uint64 {
	if x != nil && x.CreationTime != nil {
		return *x.CreationTime
	}
	return 0
}

func (x *ClubTicket) GetExpirationTime() uint64 {
	if x != nil && x.ExpirationTime != nil {
		return *x.ExpirationTime
	}
	return 0
}

var File_bgs_low_pb_client_club_invitation_proto protoreflect.FileDescriptor

var file_bgs_low_pb_client_club_invitation_proto_rawDesc = []byte{
	0x0a, 0x27, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x1a,
	0x37, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f,
	0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x62,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x62, 0x67, 0x73,
	0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63,
	0x6c, 0x75, 0x62, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x26, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f,
	0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x4a, 0x0a, 0x08, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x15,
	0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x22, 0xe4, 0x03, 0x0a, 0x0e, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x63, 0x6c, 0x75,
	0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x75, 0x62, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x63, 0x6c, 0x75, 0x62, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x6c,
	0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x45, 0x0a, 0x09, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x22, 0xec, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x3b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75, 0x62,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x83, 0x03, 0x0a, 0x0e, 0x43, 0x6c, 0x75, 0x62, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62,
	0x49, 0x64, 0x12, 0x45, 0x0a, 0x09, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x09, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x65,
	0x12, 0x32, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x88, 0x02, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x6c,
	0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x72, 0x65,
	0x64, 0x65, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75,
	0x62, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xba, 0x03, 0x0a, 0x0a, 0x43, 0x6c, 0x75, 0x62,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x04, 0x63, 0x6c, 0x75,
	0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x75, 0x62, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x63, 0x6c, 0x75, 0x62, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x6c,
	0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x64, 0x65, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f,
	0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6a, 0x62, 0x72, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x6c, 0x6f, 0x67,
	0x70, 0x72, 0x6f, 0x78, 0x2f, 0x62, 0x6e, 0x65, 0x74, 0x2f, 0x62, 0x67, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x2f, 0x76, 0x31,
}

var (
	file_bgs_low_pb_client_club_invitation_proto_rawDescOnce sync.Once
	file_bgs_low_pb_client_club_invitation_proto_rawDescData = file_bgs_low_pb_client_club_invitation_proto_rawDesc
)

func file_bgs_low_pb_client_club_invitation_proto_rawDescGZIP() []byte {
	file_bgs_low_pb_client_club_invitation_proto_rawDescOnce.Do(func() {
		file_bgs_low_pb_client_club_invitation_proto_rawDescData = protoimpl.X.CompressGZIP(file_bgs_low_pb_client_club_invitation_proto_rawDescData)
	})
	return file_bgs_low_pb_client_club_invitation_proto_rawDescData
}

var file_bgs_low_pb_client_club_invitation_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_bgs_low_pb_client_club_invitation_proto_goTypes = []interface{}{
	(*ClubSlot)(nil),              // 0: bgs.protocol.club.v1.ClubSlot
	(*SendInvitationOptions)(nil), // 1: bgs.protocol.club.v1.SendInvitationOptions
	(*ClubInvitation)(nil),        // 2: bgs.protocol.club.v1.ClubInvitation
	(*SendSuggestionOptions)(nil), // 3: bgs.protocol.club.v1.SendSuggestionOptions
	(*ClubSuggestion)(nil),        // 4: bgs.protocol.club.v1.ClubSuggestion
	(*CreateTicketOptions)(nil),   // 5: bgs.protocol.club.v1.CreateTicketOptions
	(*ClubTicket)(nil),            // 6: bgs.protocol.club.v1.ClubTicket
	(*MemberId)(nil),              // 7: bgs.protocol.club.v1.MemberId
	(*v2.Attribute)(nil),          // 8: bgs.protocol.v2.Attribute
	(*MemberDescription)(nil),     // 9: bgs.protocol.club.v1.MemberDescription
	(*ClubDescription)(nil),       // 10: bgs.protocol.club.v1.ClubDescription
}
var file_bgs_low_pb_client_club_invitation_proto_depIdxs = []int32{
	7,  // 0: bgs.protocol.club.v1.SendInvitationOptions.target_id:type_name -> bgs.protocol.club.v1.MemberId
	0,  // 1: bgs.protocol.club.v1.SendInvitationOptions.slot:type_name -> bgs.protocol.club.v1.ClubSlot
	8,  // 2: bgs.protocol.club.v1.SendInvitationOptions.attribute:type_name -> bgs.protocol.v2.Attribute
	9,  // 3: bgs.protocol.club.v1.ClubInvitation.inviter:type_name -> bgs.protocol.club.v1.MemberDescription
	9,  // 4: bgs.protocol.club.v1.ClubInvitation.invitee:type_name -> bgs.protocol.club.v1.MemberDescription
	10, // 5: bgs.protocol.club.v1.ClubInvitation.club:type_name -> bgs.protocol.club.v1.ClubDescription
	0,  // 6: bgs.protocol.club.v1.ClubInvitation.slot:type_name -> bgs.protocol.club.v1.ClubSlot
	8,  // 7: bgs.protocol.club.v1.ClubInvitation.attribute:type_name -> bgs.protocol.v2.Attribute
	9,  // 8: bgs.protocol.club.v1.ClubInvitation.suggester:type_name -> bgs.protocol.club.v1.MemberDescription
	7,  // 9: bgs.protocol.club.v1.SendSuggestionOptions.target_id:type_name -> bgs.protocol.club.v1.MemberId
	0,  // 10: bgs.protocol.club.v1.SendSuggestionOptions.slot:type_name -> bgs.protocol.club.v1.ClubSlot
	8,  // 11: bgs.protocol.club.v1.SendSuggestionOptions.attribute:type_name -> bgs.protocol.v2.Attribute
	9,  // 12: bgs.protocol.club.v1.ClubSuggestion.suggester:type_name -> bgs.protocol.club.v1.MemberDescription
	9,  // 13: bgs.protocol.club.v1.ClubSuggestion.suggestee:type_name -> bgs.protocol.club.v1.MemberDescription
	0,  // 14: bgs.protocol.club.v1.ClubSuggestion.slot:type_name -> bgs.protocol.club.v1.ClubSlot
	8,  // 15: bgs.protocol.club.v1.ClubSuggestion.attribute:type_name -> bgs.protocol.v2.Attribute
	0,  // 16: bgs.protocol.club.v1.CreateTicketOptions.slot:type_name -> bgs.protocol.club.v1.ClubSlot
	8,  // 17: bgs.protocol.club.v1.CreateTicketOptions.attribute:type_name -> bgs.protocol.v2.Attribute
	9,  // 18: bgs.protocol.club.v1.ClubTicket.creator:type_name -> bgs.protocol.club.v1.MemberDescription
	10, // 19: bgs.protocol.club.v1.ClubTicket.club:type_name -> bgs.protocol.club.v1.ClubDescription
	0,  // 20: bgs.protocol.club.v1.ClubTicket.slot:type_name -> bgs.protocol.club.v1.ClubSlot
	8,  // 21: bgs.protocol.club.v1.ClubTicket.attribute:type_name -> bgs.protocol.v2.Attribute
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_bgs_low_pb_client_club_invitation_proto_init() }
func file_bgs_low_pb_client_club_invitation_proto_init() {
	if File_bgs_low_pb_client_club_invitation_proto != nil {
		return
	}
	file_bgs_low_pb_client_club_core_proto_init()
	file_bgs_low_pb_client_club_member_proto_init()
	file_bgs_low_pb_client_club_member_id_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bgs_low_pb_client_club_invitation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_invitation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInvitationOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_invitation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubInvitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_invitation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSuggestionOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_invitation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubSuggestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_invitation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_invitation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bgs_low_pb_client_club_invitation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bgs_low_pb_client_club_invitation_proto_goTypes,
		DependencyIndexes: file_bgs_low_pb_client_club_invitation_proto_depIdxs,
		MessageInfos:      file_bgs_low_pb_client_club_invitation_proto_msgTypes,
	}.Build()
	File_bgs_low_pb_client_club_invitation_proto = out.File
	file_bgs_low_pb_client_club_invitation_proto_rawDesc = nil
	file_bgs_low_pb_client_club_invitation_proto_goTypes = nil
	file_bgs_low_pb_client_club_invitation_proto_depIdxs = nil
}
