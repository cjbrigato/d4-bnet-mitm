// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: bgs/low/pb/client/club_member.proto

package v1

import (
	_ "github.com/cjbrigato/logprox/bnet/bgs/protocol"
	v2 "github.com/cjbrigato/logprox/bnet/bgs/protocol/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *MemberId         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	BattleTag     *string           `protobuf:"bytes,2,opt,name=battle_tag,json=battleTag" json:"battle_tag,omitempty"`
	Role          []uint32          `protobuf:"varint,3,rep,name=role" json:"role,omitempty"`
	Attribute     []*v2.Attribute   `protobuf:"bytes,4,rep,name=attribute" json:"attribute,omitempty"`
	JoinTime      *uint64           `protobuf:"varint,5,opt,name=join_time,json=joinTime" json:"join_time,omitempty"`
	PresenceLevel *PresenceLevel    `protobuf:"varint,6,opt,name=presence_level,json=presenceLevel,enum=bgs.protocol.club.v1.PresenceLevel" json:"presence_level,omitempty"`
	ModeratorMute *bool             `protobuf:"varint,7,opt,name=moderator_mute,json=moderatorMute" json:"moderator_mute,omitempty"`
	WhisperLevel  *WhisperLevel     `protobuf:"varint,8,opt,name=whisper_level,json=whisperLevel,enum=bgs.protocol.club.v1.WhisperLevel" json:"whisper_level,omitempty"`
	Note          *string           `protobuf:"bytes,9,opt,name=note" json:"note,omitempty"`
	Active        *bool             `protobuf:"varint,50,opt,name=active" json:"active,omitempty"`
	Voice         *MemberVoiceState `protobuf:"bytes,51,opt,name=voice" json:"voice,omitempty"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{0}
}

func (x *Member) GetId() *MemberId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Member) GetBattleTag() string {
	if x != nil && x.BattleTag != nil {
		return *x.BattleTag
	}
	return ""
}

func (x *Member) GetRole() []uint32 {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *Member) GetAttribute() []*v2.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *Member) GetJoinTime() uint64 {
	if x != nil && x.JoinTime != nil {
		return *x.JoinTime
	}
	return 0
}

func (x *Member) GetPresenceLevel() PresenceLevel {
	if x != nil && x.PresenceLevel != nil {
		return *x.PresenceLevel
	}
	return PresenceLevel_PRESENCE_LEVEL_NONE
}

func (x *Member) GetModeratorMute() bool {
	if x != nil && x.ModeratorMute != nil {
		return *x.ModeratorMute
	}
	return false
}

func (x *Member) GetWhisperLevel() WhisperLevel {
	if x != nil && x.WhisperLevel != nil {
		return *x.WhisperLevel
	}
	return WhisperLevel_WHISPER_LEVEL_OPEN
}

func (x *Member) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

func (x *Member) GetActive() bool {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return false
}

func (x *Member) GetVoice() *MemberVoiceState {
	if x != nil {
		return x.Voice
	}
	return nil
}

type MemberResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId *MemberId `protobuf:"bytes,1,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	Status   *uint32   `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
}

func (x *MemberResult) Reset() {
	*x = MemberResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberResult) ProtoMessage() {}

func (x *MemberResult) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberResult.ProtoReflect.Descriptor instead.
func (*MemberResult) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{1}
}

func (x *MemberResult) GetMemberId() *MemberId {
	if x != nil {
		return x.MemberId
	}
	return nil
}

func (x *MemberResult) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type RemoveMemberOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *MemberId          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Reason *ClubRemovedReason `protobuf:"varint,2,opt,name=reason,enum=bgs.protocol.club.v1.ClubRemovedReason" json:"reason,omitempty"`
}

func (x *RemoveMemberOptions) Reset() {
	*x = RemoveMemberOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMemberOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMemberOptions) ProtoMessage() {}

func (x *RemoveMemberOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMemberOptions.ProtoReflect.Descriptor instead.
func (*RemoveMemberOptions) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveMemberOptions) GetId() *MemberId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RemoveMemberOptions) GetReason() ClubRemovedReason {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ClubRemovedReason_CLUB_REMOVED_REASON_NONE
}

type MemberRemovedAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *MemberId          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Reason *ClubRemovedReason `protobuf:"varint,2,opt,name=reason,enum=bgs.protocol.club.v1.ClubRemovedReason" json:"reason,omitempty"`
}

func (x *MemberRemovedAssignment) Reset() {
	*x = MemberRemovedAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRemovedAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRemovedAssignment) ProtoMessage() {}

func (x *MemberRemovedAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRemovedAssignment.ProtoReflect.Descriptor instead.
func (*MemberRemovedAssignment) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{3}
}

func (x *MemberRemovedAssignment) GetId() *MemberId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MemberRemovedAssignment) GetReason() ClubRemovedReason {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ClubRemovedReason_CLUB_REMOVED_REASON_NONE
}

type MemberVoiceOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId   *uint64               `protobuf:"varint,1,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	Joined     *bool                 `protobuf:"varint,2,opt,name=joined" json:"joined,omitempty"`
	Microphone *VoiceMicrophoneState `protobuf:"varint,3,opt,name=microphone,enum=bgs.protocol.club.v1.VoiceMicrophoneState" json:"microphone,omitempty"`
	Active     *bool                 `protobuf:"varint,4,opt,name=active" json:"active,omitempty"`
}

func (x *MemberVoiceOptions) Reset() {
	*x = MemberVoiceOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberVoiceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberVoiceOptions) ProtoMessage() {}

func (x *MemberVoiceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberVoiceOptions.ProtoReflect.Descriptor instead.
func (*MemberVoiceOptions) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{4}
}

func (x *MemberVoiceOptions) GetStreamId() uint64 {
	if x != nil && x.StreamId != nil {
		return *x.StreamId
	}
	return 0
}

func (x *MemberVoiceOptions) GetJoined() bool {
	if x != nil && x.Joined != nil {
		return *x.Joined
	}
	return false
}

func (x *MemberVoiceOptions) GetMicrophone() VoiceMicrophoneState {
	if x != nil && x.Microphone != nil {
		return *x.Microphone
	}
	return VoiceMicrophoneState_MICROPHONE_STATE_NORMAL
}

func (x *MemberVoiceOptions) GetActive() bool {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return false
}

type MemberVoiceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	StreamId   *uint64               `protobuf:"varint,2,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	Joined     *bool                 `protobuf:"varint,3,opt,name=joined" json:"joined,omitempty"`
	Microphone *VoiceMicrophoneState `protobuf:"varint,4,opt,name=microphone,enum=bgs.protocol.club.v1.VoiceMicrophoneState" json:"microphone,omitempty"`
	Active     *bool                 `protobuf:"varint,5,opt,name=active" json:"active,omitempty"`
}

func (x *MemberVoiceState) Reset() {
	*x = MemberVoiceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberVoiceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberVoiceState) ProtoMessage() {}

func (x *MemberVoiceState) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberVoiceState.ProtoReflect.Descriptor instead.
func (*MemberVoiceState) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{5}
}

func (x *MemberVoiceState) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *MemberVoiceState) GetStreamId() uint64 {
	if x != nil && x.StreamId != nil {
		return *x.StreamId
	}
	return 0
}

func (x *MemberVoiceState) GetJoined() bool {
	if x != nil && x.Joined != nil {
		return *x.Joined
	}
	return false
}

func (x *MemberVoiceState) GetMicrophone() VoiceMicrophoneState {
	if x != nil && x.Microphone != nil {
		return *x.Microphone
	}
	return VoiceMicrophoneState_MICROPHONE_STATE_NORMAL
}

func (x *MemberVoiceState) GetActive() bool {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return false
}

type CreateMemberOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *MemberId       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Attribute      []*v2.Attribute `protobuf:"bytes,2,rep,name=attribute" json:"attribute,omitempty"`
	JoinClubSource *uint32         `protobuf:"varint,3,opt,name=join_club_source,json=joinClubSource" json:"join_club_source,omitempty"`
}

func (x *CreateMemberOptions) Reset() {
	*x = CreateMemberOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMemberOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMemberOptions) ProtoMessage() {}

func (x *CreateMemberOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMemberOptions.ProtoReflect.Descriptor instead.
func (*CreateMemberOptions) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{6}
}

func (x *CreateMemberOptions) GetId() *MemberId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CreateMemberOptions) GetAttribute() []*v2.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *CreateMemberOptions) GetJoinClubSource() uint32 {
	if x != nil && x.JoinClubSource != nil {
		return *x.JoinClubSource
	}
	return 0
}

type MemberDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *MemberId `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	BattleTag *string   `protobuf:"bytes,2,opt,name=battle_tag,json=battleTag" json:"battle_tag,omitempty"`
}

func (x *MemberDescription) Reset() {
	*x = MemberDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberDescription) ProtoMessage() {}

func (x *MemberDescription) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberDescription.ProtoReflect.Descriptor instead.
func (*MemberDescription) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{7}
}

func (x *MemberDescription) GetId() *MemberId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MemberDescription) GetBattleTag() string {
	if x != nil && x.BattleTag != nil {
		return *x.BattleTag
	}
	return ""
}

type RoleOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId *MemberId `protobuf:"bytes,1,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	Role     []uint32  `protobuf:"varint,2,rep,name=role" json:"role,omitempty"`
}

func (x *RoleOptions) Reset() {
	*x = RoleOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleOptions) ProtoMessage() {}

func (x *RoleOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleOptions.ProtoReflect.Descriptor instead.
func (*RoleOptions) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{8}
}

func (x *RoleOptions) GetMemberId() *MemberId {
	if x != nil {
		return x.MemberId
	}
	return nil
}

func (x *RoleOptions) GetRole() []uint32 {
	if x != nil {
		return x.Role
	}
	return nil
}

type RoleAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId *MemberId `protobuf:"bytes,1,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	Role     []uint32  `protobuf:"varint,2,rep,name=role" json:"role,omitempty"`
}

func (x *RoleAssignment) Reset() {
	*x = RoleAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAssignment) ProtoMessage() {}

func (x *RoleAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAssignment.ProtoReflect.Descriptor instead.
func (*RoleAssignment) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{9}
}

func (x *RoleAssignment) GetMemberId() *MemberId {
	if x != nil {
		return x.MemberId
	}
	return nil
}

func (x *RoleAssignment) GetRole() []uint32 {
	if x != nil {
		return x.Role
	}
	return nil
}

type MemberAttributeAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId  *MemberId       `protobuf:"bytes,1,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	Attribute []*v2.Attribute `protobuf:"bytes,2,rep,name=attribute" json:"attribute,omitempty"`
}

func (x *MemberAttributeAssignment) Reset() {
	*x = MemberAttributeAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberAttributeAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberAttributeAssignment) ProtoMessage() {}

func (x *MemberAttributeAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberAttributeAssignment.ProtoReflect.Descriptor instead.
func (*MemberAttributeAssignment) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{10}
}

func (x *MemberAttributeAssignment) GetMemberId() *MemberId {
	if x != nil {
		return x.MemberId
	}
	return nil
}

func (x *MemberAttributeAssignment) GetAttribute() []*v2.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

type SubscriberStateOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voice *MemberVoiceOptions `protobuf:"bytes,1,opt,name=voice" json:"voice,omitempty"`
}

func (x *SubscriberStateOptions) Reset() {
	*x = SubscriberStateOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriberStateOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriberStateOptions) ProtoMessage() {}

func (x *SubscriberStateOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriberStateOptions.ProtoReflect.Descriptor instead.
func (*SubscriberStateOptions) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{11}
}

func (x *SubscriberStateOptions) GetVoice() *MemberVoiceOptions {
	if x != nil {
		return x.Voice
	}
	return nil
}

type SubscriberStateAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId *MemberId         `protobuf:"bytes,1,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	Active   *bool             `protobuf:"varint,2,opt,name=active" json:"active,omitempty"`
	Voice    *MemberVoiceState `protobuf:"bytes,3,opt,name=voice" json:"voice,omitempty"`
}

func (x *SubscriberStateAssignment) Reset() {
	*x = SubscriberStateAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriberStateAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriberStateAssignment) ProtoMessage() {}

func (x *SubscriberStateAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriberStateAssignment.ProtoReflect.Descriptor instead.
func (*SubscriberStateAssignment) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{12}
}

func (x *SubscriberStateAssignment) GetMemberId() *MemberId {
	if x != nil {
		return x.MemberId
	}
	return nil
}

func (x *SubscriberStateAssignment) GetActive() bool {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return false
}

func (x *SubscriberStateAssignment) GetVoice() *MemberVoiceState {
	if x != nil {
		return x.Voice
	}
	return nil
}

type MemberStateOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute     []*v2.Attribute `protobuf:"bytes,1,rep,name=attribute" json:"attribute,omitempty"`
	PresenceLevel *PresenceLevel  `protobuf:"varint,2,opt,name=presence_level,json=presenceLevel,enum=bgs.protocol.club.v1.PresenceLevel" json:"presence_level,omitempty"`
	ModeratorMute *bool           `protobuf:"varint,3,opt,name=moderator_mute,json=moderatorMute" json:"moderator_mute,omitempty"`
	WhisperLevel  *WhisperLevel   `protobuf:"varint,4,opt,name=whisper_level,json=whisperLevel,enum=bgs.protocol.club.v1.WhisperLevel" json:"whisper_level,omitempty"`
	Note          *string         `protobuf:"bytes,5,opt,name=note" json:"note,omitempty"`
}

func (x *MemberStateOptions) Reset() {
	*x = MemberStateOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberStateOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberStateOptions) ProtoMessage() {}

func (x *MemberStateOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberStateOptions.ProtoReflect.Descriptor instead.
func (*MemberStateOptions) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{13}
}

func (x *MemberStateOptions) GetAttribute() []*v2.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *MemberStateOptions) GetPresenceLevel() PresenceLevel {
	if x != nil && x.PresenceLevel != nil {
		return *x.PresenceLevel
	}
	return PresenceLevel_PRESENCE_LEVEL_NONE
}

func (x *MemberStateOptions) GetModeratorMute() bool {
	if x != nil && x.ModeratorMute != nil {
		return *x.ModeratorMute
	}
	return false
}

func (x *MemberStateOptions) GetWhisperLevel() WhisperLevel {
	if x != nil && x.WhisperLevel != nil {
		return *x.WhisperLevel
	}
	return WhisperLevel_WHISPER_LEVEL_OPEN
}

func (x *MemberStateOptions) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

type MemberStateAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId      *MemberId       `protobuf:"bytes,1,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	Attribute     []*v2.Attribute `protobuf:"bytes,2,rep,name=attribute" json:"attribute,omitempty"`
	PresenceLevel *PresenceLevel  `protobuf:"varint,3,opt,name=presence_level,json=presenceLevel,enum=bgs.protocol.club.v1.PresenceLevel" json:"presence_level,omitempty"`
	ModeratorMute *bool           `protobuf:"varint,4,opt,name=moderator_mute,json=moderatorMute" json:"moderator_mute,omitempty"`
	WhisperLevel  *WhisperLevel   `protobuf:"varint,5,opt,name=whisper_level,json=whisperLevel,enum=bgs.protocol.club.v1.WhisperLevel" json:"whisper_level,omitempty"`
	Note          *string         `protobuf:"bytes,6,opt,name=note" json:"note,omitempty"`
}

func (x *MemberStateAssignment) Reset() {
	*x = MemberStateAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberStateAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberStateAssignment) ProtoMessage() {}

func (x *MemberStateAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_member_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberStateAssignment.ProtoReflect.Descriptor instead.
func (*MemberStateAssignment) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_member_proto_rawDescGZIP(), []int{14}
}

func (x *MemberStateAssignment) GetMemberId() *MemberId {
	if x != nil {
		return x.MemberId
	}
	return nil
}

func (x *MemberStateAssignment) GetAttribute() []*v2.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *MemberStateAssignment) GetPresenceLevel() PresenceLevel {
	if x != nil && x.PresenceLevel != nil {
		return *x.PresenceLevel
	}
	return PresenceLevel_PRESENCE_LEVEL_NONE
}

func (x *MemberStateAssignment) GetModeratorMute() bool {
	if x != nil && x.ModeratorMute != nil {
		return *x.ModeratorMute
	}
	return false
}

func (x *MemberStateAssignment) GetWhisperLevel() WhisperLevel {
	if x != nil && x.WhisperLevel != nil {
		return *x.WhisperLevel
	}
	return WhisperLevel_WHISPER_LEVEL_OPEN
}

func (x *MemberStateAssignment) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

var File_bgs_low_pb_client_club_member_proto protoreflect.FileDescriptor

var file_bgs_low_pb_client_club_member_proto_rawDesc = []byte{
	0x0a, 0x23, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x26, 0x62, 0x67, 0x73,
	0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63,
	0x6c, 0x75, 0x62, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x62, 0x67, 0x73, 0x2f,
	0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c,
	0x75, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x62,
	0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe8, 0x03, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x32, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6a, 0x6f, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6d,
	0x75, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x77, 0x68, 0x69, 0x73,
	0x70, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x0c, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3c, 0x0a,
	0x05, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x63, 0x0a, 0x0c, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x86, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75,
	0x62, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xad, 0x01, 0x0a, 0x12, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x4a, 0x0a, 0x0a, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0a, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x4a, 0x0a, 0x0a, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x0a, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x63,
	0x6c, 0x75, 0x62, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x6a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x62, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f,
	0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x54, 0x61, 0x67, 0x22, 0x5e, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x22, 0x61, 0x0a, 0x0e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x19, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x58, 0x0a, 0x16,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x05, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x12, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38,
	0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x32, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x77,
	0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0c, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0xde, 0x02, 0x0a, 0x15, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x38, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d,
	0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0d,
	0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x69, 0x73, 0x70,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0c, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6a, 0x62, 0x72, 0x69, 0x67, 0x61, 0x74,
	0x6f, 0x2f, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x78, 0x2f, 0x62, 0x6e, 0x65, 0x74, 0x2f, 0x62,
	0x67, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6c, 0x75, 0x62,
	0x2f, 0x76, 0x31,
}

var (
	file_bgs_low_pb_client_club_member_proto_rawDescOnce sync.Once
	file_bgs_low_pb_client_club_member_proto_rawDescData = file_bgs_low_pb_client_club_member_proto_rawDesc
)

func file_bgs_low_pb_client_club_member_proto_rawDescGZIP() []byte {
	file_bgs_low_pb_client_club_member_proto_rawDescOnce.Do(func() {
		file_bgs_low_pb_client_club_member_proto_rawDescData = protoimpl.X.CompressGZIP(file_bgs_low_pb_client_club_member_proto_rawDescData)
	})
	return file_bgs_low_pb_client_club_member_proto_rawDescData
}

var file_bgs_low_pb_client_club_member_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_bgs_low_pb_client_club_member_proto_goTypes = []interface{}{
	(*Member)(nil),                    // 0: bgs.protocol.club.v1.Member
	(*MemberResult)(nil),              // 1: bgs.protocol.club.v1.MemberResult
	(*RemoveMemberOptions)(nil),       // 2: bgs.protocol.club.v1.RemoveMemberOptions
	(*MemberRemovedAssignment)(nil),   // 3: bgs.protocol.club.v1.MemberRemovedAssignment
	(*MemberVoiceOptions)(nil),        // 4: bgs.protocol.club.v1.MemberVoiceOptions
	(*MemberVoiceState)(nil),          // 5: bgs.protocol.club.v1.MemberVoiceState
	(*CreateMemberOptions)(nil),       // 6: bgs.protocol.club.v1.CreateMemberOptions
	(*MemberDescription)(nil),         // 7: bgs.protocol.club.v1.MemberDescription
	(*RoleOptions)(nil),               // 8: bgs.protocol.club.v1.RoleOptions
	(*RoleAssignment)(nil),            // 9: bgs.protocol.club.v1.RoleAssignment
	(*MemberAttributeAssignment)(nil), // 10: bgs.protocol.club.v1.MemberAttributeAssignment
	(*SubscriberStateOptions)(nil),    // 11: bgs.protocol.club.v1.SubscriberStateOptions
	(*SubscriberStateAssignment)(nil), // 12: bgs.protocol.club.v1.SubscriberStateAssignment
	(*MemberStateOptions)(nil),        // 13: bgs.protocol.club.v1.MemberStateOptions
	(*MemberStateAssignment)(nil),     // 14: bgs.protocol.club.v1.MemberStateAssignment
	(*MemberId)(nil),                  // 15: bgs.protocol.club.v1.MemberId
	(*v2.Attribute)(nil),              // 16: bgs.protocol.v2.Attribute
	(PresenceLevel)(0),                // 17: bgs.protocol.club.v1.PresenceLevel
	(WhisperLevel)(0),                 // 18: bgs.protocol.club.v1.WhisperLevel
	(ClubRemovedReason)(0),            // 19: bgs.protocol.club.v1.ClubRemovedReason
	(VoiceMicrophoneState)(0),         // 20: bgs.protocol.club.v1.VoiceMicrophoneState
}
var file_bgs_low_pb_client_club_member_proto_depIdxs = []int32{
	15, // 0: bgs.protocol.club.v1.Member.id:type_name -> bgs.protocol.club.v1.MemberId
	16, // 1: bgs.protocol.club.v1.Member.attribute:type_name -> bgs.protocol.v2.Attribute
	17, // 2: bgs.protocol.club.v1.Member.presence_level:type_name -> bgs.protocol.club.v1.PresenceLevel
	18, // 3: bgs.protocol.club.v1.Member.whisper_level:type_name -> bgs.protocol.club.v1.WhisperLevel
	5,  // 4: bgs.protocol.club.v1.Member.voice:type_name -> bgs.protocol.club.v1.MemberVoiceState
	15, // 5: bgs.protocol.club.v1.MemberResult.member_id:type_name -> bgs.protocol.club.v1.MemberId
	15, // 6: bgs.protocol.club.v1.RemoveMemberOptions.id:type_name -> bgs.protocol.club.v1.MemberId
	19, // 7: bgs.protocol.club.v1.RemoveMemberOptions.reason:type_name -> bgs.protocol.club.v1.ClubRemovedReason
	15, // 8: bgs.protocol.club.v1.MemberRemovedAssignment.id:type_name -> bgs.protocol.club.v1.MemberId
	19, // 9: bgs.protocol.club.v1.MemberRemovedAssignment.reason:type_name -> bgs.protocol.club.v1.ClubRemovedReason
	20, // 10: bgs.protocol.club.v1.MemberVoiceOptions.microphone:type_name -> bgs.protocol.club.v1.VoiceMicrophoneState
	20, // 11: bgs.protocol.club.v1.MemberVoiceState.microphone:type_name -> bgs.protocol.club.v1.VoiceMicrophoneState
	15, // 12: bgs.protocol.club.v1.CreateMemberOptions.id:type_name -> bgs.protocol.club.v1.MemberId
	16, // 13: bgs.protocol.club.v1.CreateMemberOptions.attribute:type_name -> bgs.protocol.v2.Attribute
	15, // 14: bgs.protocol.club.v1.MemberDescription.id:type_name -> bgs.protocol.club.v1.MemberId
	15, // 15: bgs.protocol.club.v1.RoleOptions.member_id:type_name -> bgs.protocol.club.v1.MemberId
	15, // 16: bgs.protocol.club.v1.RoleAssignment.member_id:type_name -> bgs.protocol.club.v1.MemberId
	15, // 17: bgs.protocol.club.v1.MemberAttributeAssignment.member_id:type_name -> bgs.protocol.club.v1.MemberId
	16, // 18: bgs.protocol.club.v1.MemberAttributeAssignment.attribute:type_name -> bgs.protocol.v2.Attribute
	4,  // 19: bgs.protocol.club.v1.SubscriberStateOptions.voice:type_name -> bgs.protocol.club.v1.MemberVoiceOptions
	15, // 20: bgs.protocol.club.v1.SubscriberStateAssignment.member_id:type_name -> bgs.protocol.club.v1.MemberId
	5,  // 21: bgs.protocol.club.v1.SubscriberStateAssignment.voice:type_name -> bgs.protocol.club.v1.MemberVoiceState
	16, // 22: bgs.protocol.club.v1.MemberStateOptions.attribute:type_name -> bgs.protocol.v2.Attribute
	17, // 23: bgs.protocol.club.v1.MemberStateOptions.presence_level:type_name -> bgs.protocol.club.v1.PresenceLevel
	18, // 24: bgs.protocol.club.v1.MemberStateOptions.whisper_level:type_name -> bgs.protocol.club.v1.WhisperLevel
	15, // 25: bgs.protocol.club.v1.MemberStateAssignment.member_id:type_name -> bgs.protocol.club.v1.MemberId
	16, // 26: bgs.protocol.club.v1.MemberStateAssignment.attribute:type_name -> bgs.protocol.v2.Attribute
	17, // 27: bgs.protocol.club.v1.MemberStateAssignment.presence_level:type_name -> bgs.protocol.club.v1.PresenceLevel
	18, // 28: bgs.protocol.club.v1.MemberStateAssignment.whisper_level:type_name -> bgs.protocol.club.v1.WhisperLevel
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_bgs_low_pb_client_club_member_proto_init() }
func file_bgs_low_pb_client_club_member_proto_init() {
	if File_bgs_low_pb_client_club_member_proto != nil {
		return
	}
	file_bgs_low_pb_client_club_member_id_proto_init()
	file_bgs_low_pb_client_club_enum_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bgs_low_pb_client_club_member_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMemberOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRemovedAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberVoiceOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberVoiceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMemberOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberAttributeAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriberStateOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriberStateAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberStateOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_member_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberStateAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bgs_low_pb_client_club_member_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bgs_low_pb_client_club_member_proto_goTypes,
		DependencyIndexes: file_bgs_low_pb_client_club_member_proto_depIdxs,
		MessageInfos:      file_bgs_low_pb_client_club_member_proto_msgTypes,
	}.Build()
	File_bgs_low_pb_client_club_member_proto = out.File
	file_bgs_low_pb_client_club_member_proto_rawDesc = nil
	file_bgs_low_pb_client_club_member_proto_goTypes = nil
	file_bgs_low_pb_client_club_member_proto_depIdxs = nil
}
