// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: bgs/low/pb/client/account_types.proto

package v1

import (
	protocol "github.com/cjbrigato/logprox/bnet/bgs/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IdentityVerificationStatus int32

const (
	IdentityVerificationStatus_IDENT_NO_DATA  IdentityVerificationStatus = 0
	IdentityVerificationStatus_IDENT_PENDING  IdentityVerificationStatus = 1
	IdentityVerificationStatus_IDENT_OVER_18  IdentityVerificationStatus = 2
	IdentityVerificationStatus_IDENT_UNDER_18 IdentityVerificationStatus = 3
	IdentityVerificationStatus_IDENT_FAILED   IdentityVerificationStatus = 4
	IdentityVerificationStatus_IDENT_SUCCESS  IdentityVerificationStatus = 5
	IdentityVerificationStatus_IDENT_SUCC_MNL IdentityVerificationStatus = 6
	IdentityVerificationStatus_IDENT_UNKNOWN  IdentityVerificationStatus = 7
)

// Enum value maps for IdentityVerificationStatus.
var (
	IdentityVerificationStatus_name = map[int32]string{
		0: "IDENT_NO_DATA",
		1: "IDENT_PENDING",
		2: "IDENT_OVER_18",
		3: "IDENT_UNDER_18",
		4: "IDENT_FAILED",
		5: "IDENT_SUCCESS",
		6: "IDENT_SUCC_MNL",
		7: "IDENT_UNKNOWN",
	}
	IdentityVerificationStatus_value = map[string]int32{
		"IDENT_NO_DATA":  0,
		"IDENT_PENDING":  1,
		"IDENT_OVER_18":  2,
		"IDENT_UNDER_18": 3,
		"IDENT_FAILED":   4,
		"IDENT_SUCCESS":  5,
		"IDENT_SUCC_MNL": 6,
		"IDENT_UNKNOWN":  7,
	}
)

func (x IdentityVerificationStatus) Enum() *IdentityVerificationStatus {
	p := new(IdentityVerificationStatus)
	*p = x
	return p
}

func (x IdentityVerificationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdentityVerificationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bgs_low_pb_client_account_types_proto_enumTypes[0].Descriptor()
}

func (IdentityVerificationStatus) Type() protoreflect.EnumType {
	return &file_bgs_low_pb_client_account_types_proto_enumTypes[0]
}

func (x IdentityVerificationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *IdentityVerificationStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = IdentityVerificationStatus(num)
	return nil
}

// Deprecated: Use IdentityVerificationStatus.Descriptor instead.
func (IdentityVerificationStatus) EnumDescriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{0}
}

type PrivacyInfo_GameInfoPrivacy int32

const (
	PrivacyInfo_PRIVACY_ME       PrivacyInfo_GameInfoPrivacy = 0
	PrivacyInfo_PRIVACY_FRIENDS  PrivacyInfo_GameInfoPrivacy = 1
	PrivacyInfo_PRIVACY_EVERYONE PrivacyInfo_GameInfoPrivacy = 2
)

// Enum value maps for PrivacyInfo_GameInfoPrivacy.
var (
	PrivacyInfo_GameInfoPrivacy_name = map[int32]string{
		0: "PRIVACY_ME",
		1: "PRIVACY_FRIENDS",
		2: "PRIVACY_EVERYONE",
	}
	PrivacyInfo_GameInfoPrivacy_value = map[string]int32{
		"PRIVACY_ME":       0,
		"PRIVACY_FRIENDS":  1,
		"PRIVACY_EVERYONE": 2,
	}
)

func (x PrivacyInfo_GameInfoPrivacy) Enum() *PrivacyInfo_GameInfoPrivacy {
	p := new(PrivacyInfo_GameInfoPrivacy)
	*p = x
	return p
}

func (x PrivacyInfo_GameInfoPrivacy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrivacyInfo_GameInfoPrivacy) Descriptor() protoreflect.EnumDescriptor {
	return file_bgs_low_pb_client_account_types_proto_enumTypes[1].Descriptor()
}

func (PrivacyInfo_GameInfoPrivacy) Type() protoreflect.EnumType {
	return &file_bgs_low_pb_client_account_types_proto_enumTypes[1]
}

func (x PrivacyInfo_GameInfoPrivacy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PrivacyInfo_GameInfoPrivacy) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PrivacyInfo_GameInfoPrivacy(num)
	return nil
}

// Deprecated: Use PrivacyInfo_GameInfoPrivacy.Descriptor instead.
func (PrivacyInfo_GameInfoPrivacy) EnumDescriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{14, 0}
}

type AccountId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *uint32 `protobuf:"fixed32,1,req,name=id" json:"id,omitempty"`
}

func (x *AccountId) Reset() {
	*x = AccountId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountId) ProtoMessage() {}

func (x *AccountId) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountId.ProtoReflect.Descriptor instead.
func (*AccountId) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{0}
}

func (x *AccountId) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type AccountLicense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Expires *uint64 `protobuf:"varint,2,opt,name=expires" json:"expires,omitempty"`
}

func (x *AccountLicense) Reset() {
	*x = AccountLicense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountLicense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLicense) ProtoMessage() {}

func (x *AccountLicense) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLicense.ProtoReflect.Descriptor instead.
func (*AccountLicense) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{1}
}

func (x *AccountLicense) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *AccountLicense) GetExpires() uint64 {
	if x != nil && x.Expires != nil {
		return *x.Expires
	}
	return 0
}

type GameAccountHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *uint32 `protobuf:"fixed32,1,req,name=id" json:"id,omitempty"`
	Program *uint32 `protobuf:"fixed32,2,req,name=program" json:"program,omitempty"`
	Region  *uint32 `protobuf:"varint,3,req,name=region" json:"region,omitempty"`
}

func (x *GameAccountHandle) Reset() {
	*x = GameAccountHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAccountHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAccountHandle) ProtoMessage() {}

func (x *GameAccountHandle) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAccountHandle.ProtoReflect.Descriptor instead.
func (*GameAccountHandle) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{2}
}

func (x *GameAccountHandle) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GameAccountHandle) GetProgram() uint32 {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return 0
}

func (x *GameAccountHandle) GetRegion() uint32 {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return 0
}

type AccountReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *uint32            `protobuf:"fixed32,1,opt,name=id" json:"id,omitempty"`
	Email       *string            `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Handle      *GameAccountHandle `protobuf:"bytes,3,opt,name=handle" json:"handle,omitempty"`
	BattleTag   *string            `protobuf:"bytes,4,opt,name=battle_tag,json=battleTag" json:"battle_tag,omitempty"`
	PhoneNumber *string            `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`
	Region      *uint32            `protobuf:"varint,10,opt,name=region,def=0" json:"region,omitempty"`
}

// Default values for AccountReference fields.
const (
	Default_AccountReference_Region = uint32(0)
)

func (x *AccountReference) Reset() {
	*x = AccountReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountReference) ProtoMessage() {}

func (x *AccountReference) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountReference.ProtoReflect.Descriptor instead.
func (*AccountReference) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{3}
}

func (x *AccountReference) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *AccountReference) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *AccountReference) GetHandle() *GameAccountHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

func (x *AccountReference) GetBattleTag() string {
	if x != nil && x.BattleTag != nil {
		return *x.BattleTag
	}
	return ""
}

func (x *AccountReference) GetPhoneNumber() string {
	if x != nil && x.PhoneNumber != nil {
		return *x.PhoneNumber
	}
	return ""
}

func (x *AccountReference) GetRegion() uint32 {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return Default_AccountReference_Region
}

type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account     *AccountId         `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	GameAccount *GameAccountHandle `protobuf:"bytes,2,opt,name=game_account,json=gameAccount" json:"game_account,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{4}
}

func (x *Identity) GetAccount() *AccountId {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *Identity) GetGameAccount() *GameAccountHandle {
	if x != nil {
		return x.GameAccount
	}
	return nil
}

type ProgramTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Program *uint32 `protobuf:"fixed32,1,opt,name=program" json:"program,omitempty"`
	Tag     *uint32 `protobuf:"fixed32,2,opt,name=tag" json:"tag,omitempty"`
}

func (x *ProgramTag) Reset() {
	*x = ProgramTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramTag) ProtoMessage() {}

func (x *ProgramTag) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramTag.ProtoReflect.Descriptor instead.
func (*ProgramTag) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{5}
}

func (x *ProgramTag) GetProgram() uint32 {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return 0
}

func (x *ProgramTag) GetTag() uint32 {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return 0
}

type RegionTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region *uint32 `protobuf:"fixed32,1,opt,name=region" json:"region,omitempty"`
	Tag    *uint32 `protobuf:"fixed32,2,opt,name=tag" json:"tag,omitempty"`
}

func (x *RegionTag) Reset() {
	*x = RegionTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionTag) ProtoMessage() {}

func (x *RegionTag) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionTag.ProtoReflect.Descriptor instead.
func (*RegionTag) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{6}
}

func (x *RegionTag) GetRegion() uint32 {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return 0
}

func (x *RegionTag) GetTag() uint32 {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return 0
}

type AccountFieldTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountLevelInfoTag    *uint32       `protobuf:"fixed32,2,opt,name=account_level_info_tag,json=accountLevelInfoTag" json:"account_level_info_tag,omitempty"`
	PrivacyInfoTag         *uint32       `protobuf:"fixed32,3,opt,name=privacy_info_tag,json=privacyInfoTag" json:"privacy_info_tag,omitempty"`
	ParentalControlInfoTag *uint32       `protobuf:"fixed32,4,opt,name=parental_control_info_tag,json=parentalControlInfoTag" json:"parental_control_info_tag,omitempty"`
	GameLevelInfoTags      []*ProgramTag `protobuf:"bytes,7,rep,name=game_level_info_tags,json=gameLevelInfoTags" json:"game_level_info_tags,omitempty"`
	GameStatusTags         []*ProgramTag `protobuf:"bytes,9,rep,name=game_status_tags,json=gameStatusTags" json:"game_status_tags,omitempty"`
	GameAccountTags        []*RegionTag  `protobuf:"bytes,11,rep,name=game_account_tags,json=gameAccountTags" json:"game_account_tags,omitempty"`
	SecurityStatusTag      *uint32       `protobuf:"fixed32,12,opt,name=security_status_tag,json=securityStatusTag" json:"security_status_tag,omitempty"`
}

func (x *AccountFieldTags) Reset() {
	*x = AccountFieldTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountFieldTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountFieldTags) ProtoMessage() {}

func (x *AccountFieldTags) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountFieldTags.ProtoReflect.Descriptor instead.
func (*AccountFieldTags) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{7}
}

func (x *AccountFieldTags) GetAccountLevelInfoTag() uint32 {
	if x != nil && x.AccountLevelInfoTag != nil {
		return *x.AccountLevelInfoTag
	}
	return 0
}

func (x *AccountFieldTags) GetPrivacyInfoTag() uint32 {
	if x != nil && x.PrivacyInfoTag != nil {
		return *x.PrivacyInfoTag
	}
	return 0
}

func (x *AccountFieldTags) GetParentalControlInfoTag() uint32 {
	if x != nil && x.ParentalControlInfoTag != nil {
		return *x.ParentalControlInfoTag
	}
	return 0
}

func (x *AccountFieldTags) GetGameLevelInfoTags() []*ProgramTag {
	if x != nil {
		return x.GameLevelInfoTags
	}
	return nil
}

func (x *AccountFieldTags) GetGameStatusTags() []*ProgramTag {
	if x != nil {
		return x.GameStatusTags
	}
	return nil
}

func (x *AccountFieldTags) GetGameAccountTags() []*RegionTag {
	if x != nil {
		return x.GameAccountTags
	}
	return nil
}

func (x *AccountFieldTags) GetSecurityStatusTag() uint32 {
	if x != nil && x.SecurityStatusTag != nil {
		return *x.SecurityStatusTag
	}
	return 0
}

type GameAccountFieldTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameLevelInfoTag *uint32 `protobuf:"fixed32,2,opt,name=game_level_info_tag,json=gameLevelInfoTag" json:"game_level_info_tag,omitempty"`
	GameTimeInfoTag  *uint32 `protobuf:"fixed32,3,opt,name=game_time_info_tag,json=gameTimeInfoTag" json:"game_time_info_tag,omitempty"`
	GameStatusTag    *uint32 `protobuf:"fixed32,4,opt,name=game_status_tag,json=gameStatusTag" json:"game_status_tag,omitempty"`
	RafInfoTag       *uint32 `protobuf:"fixed32,5,opt,name=raf_info_tag,json=rafInfoTag" json:"raf_info_tag,omitempty"`
}

func (x *GameAccountFieldTags) Reset() {
	*x = GameAccountFieldTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAccountFieldTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAccountFieldTags) ProtoMessage() {}

func (x *GameAccountFieldTags) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAccountFieldTags.ProtoReflect.Descriptor instead.
func (*GameAccountFieldTags) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{8}
}

func (x *GameAccountFieldTags) GetGameLevelInfoTag() uint32 {
	if x != nil && x.GameLevelInfoTag != nil {
		return *x.GameLevelInfoTag
	}
	return 0
}

func (x *GameAccountFieldTags) GetGameTimeInfoTag() uint32 {
	if x != nil && x.GameTimeInfoTag != nil {
		return *x.GameTimeInfoTag
	}
	return 0
}

func (x *GameAccountFieldTags) GetGameStatusTag() uint32 {
	if x != nil && x.GameStatusTag != nil {
		return *x.GameStatusTag
	}
	return 0
}

func (x *GameAccountFieldTags) GetRafInfoTag() uint32 {
	if x != nil && x.RafInfoTag != nil {
		return *x.RafInfoTag
	}
	return 0
}

type AccountFieldOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllFields                *bool `protobuf:"varint,1,opt,name=all_fields,json=allFields" json:"all_fields,omitempty"`
	FieldAccountLevelInfo    *bool `protobuf:"varint,2,opt,name=field_account_level_info,json=fieldAccountLevelInfo" json:"field_account_level_info,omitempty"`
	FieldPrivacyInfo         *bool `protobuf:"varint,3,opt,name=field_privacy_info,json=fieldPrivacyInfo" json:"field_privacy_info,omitempty"`
	FieldParentalControlInfo *bool `protobuf:"varint,4,opt,name=field_parental_control_info,json=fieldParentalControlInfo" json:"field_parental_control_info,omitempty"`
	FieldGameLevelInfo       *bool `protobuf:"varint,6,opt,name=field_game_level_info,json=fieldGameLevelInfo" json:"field_game_level_info,omitempty"`
	FieldGameStatus          *bool `protobuf:"varint,7,opt,name=field_game_status,json=fieldGameStatus" json:"field_game_status,omitempty"`
	FieldGameAccounts        *bool `protobuf:"varint,8,opt,name=field_game_accounts,json=fieldGameAccounts" json:"field_game_accounts,omitempty"`
	FieldSecurityStatus      *bool `protobuf:"varint,9,opt,name=field_security_status,json=fieldSecurityStatus" json:"field_security_status,omitempty"`
}

func (x *AccountFieldOptions) Reset() {
	*x = AccountFieldOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountFieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountFieldOptions) ProtoMessage() {}

func (x *AccountFieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountFieldOptions.ProtoReflect.Descriptor instead.
func (*AccountFieldOptions) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{9}
}

func (x *AccountFieldOptions) GetAllFields() bool {
	if x != nil && x.AllFields != nil {
		return *x.AllFields
	}
	return false
}

func (x *AccountFieldOptions) GetFieldAccountLevelInfo() bool {
	if x != nil && x.FieldAccountLevelInfo != nil {
		return *x.FieldAccountLevelInfo
	}
	return false
}

func (x *AccountFieldOptions) GetFieldPrivacyInfo() bool {
	if x != nil && x.FieldPrivacyInfo != nil {
		return *x.FieldPrivacyInfo
	}
	return false
}

func (x *AccountFieldOptions) GetFieldParentalControlInfo() bool {
	if x != nil && x.FieldParentalControlInfo != nil {
		return *x.FieldParentalControlInfo
	}
	return false
}

func (x *AccountFieldOptions) GetFieldGameLevelInfo() bool {
	if x != nil && x.FieldGameLevelInfo != nil {
		return *x.FieldGameLevelInfo
	}
	return false
}

func (x *AccountFieldOptions) GetFieldGameStatus() bool {
	if x != nil && x.FieldGameStatus != nil {
		return *x.FieldGameStatus
	}
	return false
}

func (x *AccountFieldOptions) GetFieldGameAccounts() bool {
	if x != nil && x.FieldGameAccounts != nil {
		return *x.FieldGameAccounts
	}
	return false
}

func (x *AccountFieldOptions) GetFieldSecurityStatus() bool {
	if x != nil && x.FieldSecurityStatus != nil {
		return *x.FieldSecurityStatus
	}
	return false
}

type GameAccountFieldOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllFields          *bool `protobuf:"varint,1,opt,name=all_fields,json=allFields" json:"all_fields,omitempty"`
	FieldGameLevelInfo *bool `protobuf:"varint,2,opt,name=field_game_level_info,json=fieldGameLevelInfo" json:"field_game_level_info,omitempty"`
	FieldGameTimeInfo  *bool `protobuf:"varint,3,opt,name=field_game_time_info,json=fieldGameTimeInfo" json:"field_game_time_info,omitempty"`
	FieldGameStatus    *bool `protobuf:"varint,4,opt,name=field_game_status,json=fieldGameStatus" json:"field_game_status,omitempty"`
	FieldRafInfo       *bool `protobuf:"varint,5,opt,name=field_raf_info,json=fieldRafInfo" json:"field_raf_info,omitempty"`
}

func (x *GameAccountFieldOptions) Reset() {
	*x = GameAccountFieldOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAccountFieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAccountFieldOptions) ProtoMessage() {}

func (x *GameAccountFieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAccountFieldOptions.ProtoReflect.Descriptor instead.
func (*GameAccountFieldOptions) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{10}
}

func (x *GameAccountFieldOptions) GetAllFields() bool {
	if x != nil && x.AllFields != nil {
		return *x.AllFields
	}
	return false
}

func (x *GameAccountFieldOptions) GetFieldGameLevelInfo() bool {
	if x != nil && x.FieldGameLevelInfo != nil {
		return *x.FieldGameLevelInfo
	}
	return false
}

func (x *GameAccountFieldOptions) GetFieldGameTimeInfo() bool {
	if x != nil && x.FieldGameTimeInfo != nil {
		return *x.FieldGameTimeInfo
	}
	return false
}

func (x *GameAccountFieldOptions) GetFieldGameStatus() bool {
	if x != nil && x.FieldGameStatus != nil {
		return *x.FieldGameStatus
	}
	return false
}

func (x *GameAccountFieldOptions) GetFieldRafInfo() bool {
	if x != nil && x.FieldRafInfo != nil {
		return *x.FieldRafInfo
	}
	return false
}

type SubscriberReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId           *uint64                  `protobuf:"varint,1,opt,name=object_id,json=objectId,def=0" json:"object_id,omitempty"`
	EntityId           *protocol.EntityId       `protobuf:"bytes,2,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	AccountOptions     *AccountFieldOptions     `protobuf:"bytes,3,opt,name=account_options,json=accountOptions" json:"account_options,omitempty"`
	AccountTags        *AccountFieldTags        `protobuf:"bytes,4,opt,name=account_tags,json=accountTags" json:"account_tags,omitempty"`
	GameAccountOptions *GameAccountFieldOptions `protobuf:"bytes,5,opt,name=game_account_options,json=gameAccountOptions" json:"game_account_options,omitempty"`
	GameAccountTags    *GameAccountFieldTags    `protobuf:"bytes,6,opt,name=game_account_tags,json=gameAccountTags" json:"game_account_tags,omitempty"`
	SubscriberId       *uint64                  `protobuf:"varint,7,opt,name=subscriber_id,json=subscriberId,def=0" json:"subscriber_id,omitempty"`
}

// Default values for SubscriberReference fields.
const (
	Default_SubscriberReference_ObjectId     = uint64(0)
	Default_SubscriberReference_SubscriberId = uint64(0)
)

func (x *SubscriberReference) Reset() {
	*x = SubscriberReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriberReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriberReference) ProtoMessage() {}

func (x *SubscriberReference) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriberReference.ProtoReflect.Descriptor instead.
func (*SubscriberReference) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{11}
}

func (x *SubscriberReference) GetObjectId() uint64 {
	if x != nil && x.ObjectId != nil {
		return *x.ObjectId
	}
	return Default_SubscriberReference_ObjectId
}

func (x *SubscriberReference) GetEntityId() *protocol.EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *SubscriberReference) GetAccountOptions() *AccountFieldOptions {
	if x != nil {
		return x.AccountOptions
	}
	return nil
}

func (x *SubscriberReference) GetAccountTags() *AccountFieldTags {
	if x != nil {
		return x.AccountTags
	}
	return nil
}

func (x *SubscriberReference) GetGameAccountOptions() *GameAccountFieldOptions {
	if x != nil {
		return x.GameAccountOptions
	}
	return nil
}

func (x *SubscriberReference) GetGameAccountTags() *GameAccountFieldTags {
	if x != nil {
		return x.GameAccountTags
	}
	return nil
}

func (x *SubscriberReference) GetSubscriberId() uint64 {
	if x != nil && x.SubscriberId != nil {
		return *x.SubscriberId
	}
	return Default_SubscriberReference_SubscriberId
}

type OptIns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,name=ids" json:"ids,omitempty"`
}

func (x *OptIns) Reset() {
	*x = OptIns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptIns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptIns) ProtoMessage() {}

func (x *OptIns) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptIns.ProtoReflect.Descriptor instead.
func (*OptIns) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{12}
}

func (x *OptIns) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type AccountLevelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Licenses                               []*AccountLicense           `protobuf:"bytes,3,rep,name=licenses" json:"licenses,omitempty"`
	DefaultCurrency                        *uint32                     `protobuf:"fixed32,4,opt,name=default_currency,json=defaultCurrency" json:"default_currency,omitempty"`
	Country                                *string                     `protobuf:"bytes,5,opt,name=country" json:"country,omitempty"`
	PreferredRegion                        *uint32                     `protobuf:"varint,6,opt,name=preferred_region,json=preferredRegion" json:"preferred_region,omitempty"`
	FullName                               *string                     `protobuf:"bytes,7,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	BattleTag                              *string                     `protobuf:"bytes,8,opt,name=battle_tag,json=battleTag" json:"battle_tag,omitempty"`
	Muted                                  *bool                       `protobuf:"varint,9,opt,name=muted" json:"muted,omitempty"`
	ManualReview                           *bool                       `protobuf:"varint,10,opt,name=manual_review,json=manualReview" json:"manual_review,omitempty"`
	AccountPaidAny                         *bool                       `protobuf:"varint,11,opt,name=account_paid_any,json=accountPaidAny" json:"account_paid_any,omitempty"`
	IdentityCheckStatus                    *IdentityVerificationStatus `protobuf:"varint,12,opt,name=identity_check_status,json=identityCheckStatus,enum=bgs.protocol.account.v1.IdentityVerificationStatus" json:"identity_check_status,omitempty"`
	Email                                  *string                     `protobuf:"bytes,13,opt,name=email" json:"email,omitempty"`
	HeadlessAccount                        *bool                       `protobuf:"varint,14,opt,name=headless_account,json=headlessAccount" json:"headless_account,omitempty"`
	TestAccount                            *bool                       `protobuf:"varint,15,opt,name=test_account,json=testAccount" json:"test_account,omitempty"`
	IsSmsProtected                         *bool                       `protobuf:"varint,17,opt,name=is_sms_protected,json=isSmsProtected" json:"is_sms_protected,omitempty"`
	RatingsBoardMinimumAge                 *uint32                     `protobuf:"varint,18,opt,name=ratings_board_minimum_age,json=ratingsBoardMinimumAge" json:"ratings_board_minimum_age,omitempty"`
	PhoneNumber                            *string                     `protobuf:"bytes,19,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`
	Birthdate                              *string                     `protobuf:"bytes,20,opt,name=birthdate" json:"birthdate,omitempty"`
	LegalCountryFeatureRestrictionsApplied *bool                       `protobuf:"varint,21,opt,name=legal_country_feature_restrictions_applied,json=legalCountryFeatureRestrictionsApplied" json:"legal_country_feature_restrictions_applied,omitempty"`
	OptIns                                 *OptIns                     `protobuf:"bytes,22,opt,name=opt_ins,json=optIns" json:"opt_ins,omitempty"`
}

func (x *AccountLevelInfo) Reset() {
	*x = AccountLevelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountLevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLevelInfo) ProtoMessage() {}

func (x *AccountLevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLevelInfo.ProtoReflect.Descriptor instead.
func (*AccountLevelInfo) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{13}
}

func (x *AccountLevelInfo) GetLicenses() []*AccountLicense {
	if x != nil {
		return x.Licenses
	}
	return nil
}

func (x *AccountLevelInfo) GetDefaultCurrency() uint32 {
	if x != nil && x.DefaultCurrency != nil {
		return *x.DefaultCurrency
	}
	return 0
}

func (x *AccountLevelInfo) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *AccountLevelInfo) GetPreferredRegion() uint32 {
	if x != nil && x.PreferredRegion != nil {
		return *x.PreferredRegion
	}
	return 0
}

func (x *AccountLevelInfo) GetFullName() string {
	if x != nil && x.FullName != nil {
		return *x.FullName
	}
	return ""
}

func (x *AccountLevelInfo) GetBattleTag() string {
	if x != nil && x.BattleTag != nil {
		return *x.BattleTag
	}
	return ""
}

func (x *AccountLevelInfo) GetMuted() bool {
	if x != nil && x.Muted != nil {
		return *x.Muted
	}
	return false
}

func (x *AccountLevelInfo) GetManualReview() bool {
	if x != nil && x.ManualReview != nil {
		return *x.ManualReview
	}
	return false
}

func (x *AccountLevelInfo) GetAccountPaidAny() bool {
	if x != nil && x.AccountPaidAny != nil {
		return *x.AccountPaidAny
	}
	return false
}

func (x *AccountLevelInfo) GetIdentityCheckStatus() IdentityVerificationStatus {
	if x != nil && x.IdentityCheckStatus != nil {
		return *x.IdentityCheckStatus
	}
	return IdentityVerificationStatus_IDENT_NO_DATA
}

func (x *AccountLevelInfo) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *AccountLevelInfo) GetHeadlessAccount() bool {
	if x != nil && x.HeadlessAccount != nil {
		return *x.HeadlessAccount
	}
	return false
}

func (x *AccountLevelInfo) GetTestAccount() bool {
	if x != nil && x.TestAccount != nil {
		return *x.TestAccount
	}
	return false
}

func (x *AccountLevelInfo) GetIsSmsProtected() bool {
	if x != nil && x.IsSmsProtected != nil {
		return *x.IsSmsProtected
	}
	return false
}

func (x *AccountLevelInfo) GetRatingsBoardMinimumAge() uint32 {
	if x != nil && x.RatingsBoardMinimumAge != nil {
		return *x.RatingsBoardMinimumAge
	}
	return 0
}

func (x *AccountLevelInfo) GetPhoneNumber() string {
	if x != nil && x.PhoneNumber != nil {
		return *x.PhoneNumber
	}
	return ""
}

func (x *AccountLevelInfo) GetBirthdate() string {
	if x != nil && x.Birthdate != nil {
		return *x.Birthdate
	}
	return ""
}

func (x *AccountLevelInfo) GetLegalCountryFeatureRestrictionsApplied() bool {
	if x != nil && x.LegalCountryFeatureRestrictionsApplied != nil {
		return *x.LegalCountryFeatureRestrictionsApplied
	}
	return false
}

func (x *AccountLevelInfo) GetOptIns() *OptIns {
	if x != nil {
		return x.OptIns
	}
	return nil
}

type PrivacyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUsingRid               *bool                        `protobuf:"varint,3,opt,name=is_using_rid,json=isUsingRid" json:"is_using_rid,omitempty"`
	IsVisibleForViewFriends  *bool                        `protobuf:"varint,4,opt,name=is_visible_for_view_friends,json=isVisibleForViewFriends" json:"is_visible_for_view_friends,omitempty"`
	IsHiddenFromFriendFinder *bool                        `protobuf:"varint,5,opt,name=is_hidden_from_friend_finder,json=isHiddenFromFriendFinder" json:"is_hidden_from_friend_finder,omitempty"`
	GameInfoPrivacy          *PrivacyInfo_GameInfoPrivacy `protobuf:"varint,6,opt,name=game_info_privacy,json=gameInfoPrivacy,enum=bgs.protocol.account.v1.PrivacyInfo_GameInfoPrivacy,def=1" json:"game_info_privacy,omitempty"`
	OnlyAllowFriendWhispers  *bool                        `protobuf:"varint,7,opt,name=only_allow_friend_whispers,json=onlyAllowFriendWhispers" json:"only_allow_friend_whispers,omitempty"`
}

// Default values for PrivacyInfo fields.
const (
	Default_PrivacyInfo_GameInfoPrivacy = PrivacyInfo_PRIVACY_FRIENDS
)

func (x *PrivacyInfo) Reset() {
	*x = PrivacyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivacyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivacyInfo) ProtoMessage() {}

func (x *PrivacyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivacyInfo.ProtoReflect.Descriptor instead.
func (*PrivacyInfo) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{14}
}

func (x *PrivacyInfo) GetIsUsingRid() bool {
	if x != nil && x.IsUsingRid != nil {
		return *x.IsUsingRid
	}
	return false
}

func (x *PrivacyInfo) GetIsVisibleForViewFriends() bool {
	if x != nil && x.IsVisibleForViewFriends != nil {
		return *x.IsVisibleForViewFriends
	}
	return false
}

func (x *PrivacyInfo) GetIsHiddenFromFriendFinder() bool {
	if x != nil && x.IsHiddenFromFriendFinder != nil {
		return *x.IsHiddenFromFriendFinder
	}
	return false
}

func (x *PrivacyInfo) GetGameInfoPrivacy() PrivacyInfo_GameInfoPrivacy {
	if x != nil && x.GameInfoPrivacy != nil {
		return *x.GameInfoPrivacy
	}
	return Default_PrivacyInfo_GameInfoPrivacy
}

func (x *PrivacyInfo) GetOnlyAllowFriendWhispers() bool {
	if x != nil && x.OnlyAllowFriendWhispers != nil {
		return *x.OnlyAllowFriendWhispers
	}
	return false
}

type ParentalControlInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timezone        *string `protobuf:"bytes,3,opt,name=timezone" json:"timezone,omitempty"`
	MinutesPerDay   *uint32 `protobuf:"varint,4,opt,name=minutes_per_day,json=minutesPerDay" json:"minutes_per_day,omitempty"`
	MinutesPerWeek  *uint32 `protobuf:"varint,5,opt,name=minutes_per_week,json=minutesPerWeek" json:"minutes_per_week,omitempty"`
	CanReceiveVoice *bool   `protobuf:"varint,6,opt,name=can_receive_voice,json=canReceiveVoice" json:"can_receive_voice,omitempty"`
	CanSendVoice    *bool   `protobuf:"varint,7,opt,name=can_send_voice,json=canSendVoice" json:"can_send_voice,omitempty"`
	PlaySchedule    []bool  `protobuf:"varint,8,rep,name=play_schedule,json=playSchedule" json:"play_schedule,omitempty"`
	CanJoinGroup    *bool   `protobuf:"varint,9,opt,name=can_join_group,json=canJoinGroup" json:"can_join_group,omitempty"`
	CanUseProfile   *bool   `protobuf:"varint,10,opt,name=can_use_profile,json=canUseProfile" json:"can_use_profile,omitempty"`
}

func (x *ParentalControlInfo) Reset() {
	*x = ParentalControlInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParentalControlInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParentalControlInfo) ProtoMessage() {}

func (x *ParentalControlInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParentalControlInfo.ProtoReflect.Descriptor instead.
func (*ParentalControlInfo) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{15}
}

func (x *ParentalControlInfo) GetTimezone() string {
	if x != nil && x.Timezone != nil {
		return *x.Timezone
	}
	return ""
}

func (x *ParentalControlInfo) GetMinutesPerDay() uint32 {
	if x != nil && x.MinutesPerDay != nil {
		return *x.MinutesPerDay
	}
	return 0
}

func (x *ParentalControlInfo) GetMinutesPerWeek() uint32 {
	if x != nil && x.MinutesPerWeek != nil {
		return *x.MinutesPerWeek
	}
	return 0
}

func (x *ParentalControlInfo) GetCanReceiveVoice() bool {
	if x != nil && x.CanReceiveVoice != nil {
		return *x.CanReceiveVoice
	}
	return false
}

func (x *ParentalControlInfo) GetCanSendVoice() bool {
	if x != nil && x.CanSendVoice != nil {
		return *x.CanSendVoice
	}
	return false
}

func (x *ParentalControlInfo) GetPlaySchedule() []bool {
	if x != nil {
		return x.PlaySchedule
	}
	return nil
}

func (x *ParentalControlInfo) GetCanJoinGroup() bool {
	if x != nil && x.CanJoinGroup != nil {
		return *x.CanJoinGroup
	}
	return false
}

func (x *ParentalControlInfo) GetCanUseProfile() bool {
	if x != nil && x.CanUseProfile != nil {
		return *x.CanUseProfile
	}
	return false
}

type PlayScheduleRestriction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaySchedule []bool  `protobuf:"varint,1,rep,name=play_schedule,json=playSchedule" json:"play_schedule,omitempty"`
	Timezone     *string `protobuf:"bytes,2,opt,name=timezone" json:"timezone,omitempty"`
}

func (x *PlayScheduleRestriction) Reset() {
	*x = PlayScheduleRestriction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayScheduleRestriction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayScheduleRestriction) ProtoMessage() {}

func (x *PlayScheduleRestriction) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayScheduleRestriction.ProtoReflect.Descriptor instead.
func (*PlayScheduleRestriction) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{16}
}

func (x *PlayScheduleRestriction) GetPlaySchedule() []bool {
	if x != nil {
		return x.PlaySchedule
	}
	return nil
}

func (x *PlayScheduleRestriction) GetTimezone() string {
	if x != nil && x.Timezone != nil {
		return *x.Timezone
	}
	return ""
}

type GameLevelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTrial          *bool             `protobuf:"varint,4,opt,name=is_trial,json=isTrial" json:"is_trial,omitempty"`
	IsLifetime       *bool             `protobuf:"varint,5,opt,name=is_lifetime,json=isLifetime" json:"is_lifetime,omitempty"`
	IsRestricted     *bool             `protobuf:"varint,6,opt,name=is_restricted,json=isRestricted" json:"is_restricted,omitempty"`
	IsBeta           *bool             `protobuf:"varint,7,opt,name=is_beta,json=isBeta" json:"is_beta,omitempty"`
	Name             *string           `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	Program          *uint32           `protobuf:"fixed32,9,opt,name=program" json:"program,omitempty"`
	Licenses         []*AccountLicense `protobuf:"bytes,10,rep,name=licenses" json:"licenses,omitempty"`
	RealmPermissions *uint32           `protobuf:"varint,11,opt,name=realm_permissions,json=realmPermissions" json:"realm_permissions,omitempty"`
	LastLogoutTimeMs *uint64           `protobuf:"varint,12,opt,name=last_logout_time_ms,json=lastLogoutTimeMs" json:"last_logout_time_ms,omitempty"`
}

func (x *GameLevelInfo) Reset() {
	*x = GameLevelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameLevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameLevelInfo) ProtoMessage() {}

func (x *GameLevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameLevelInfo.ProtoReflect.Descriptor instead.
func (*GameLevelInfo) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{17}
}

func (x *GameLevelInfo) GetIsTrial() bool {
	if x != nil && x.IsTrial != nil {
		return *x.IsTrial
	}
	return false
}

func (x *GameLevelInfo) GetIsLifetime() bool {
	if x != nil && x.IsLifetime != nil {
		return *x.IsLifetime
	}
	return false
}

func (x *GameLevelInfo) GetIsRestricted() bool {
	if x != nil && x.IsRestricted != nil {
		return *x.IsRestricted
	}
	return false
}

func (x *GameLevelInfo) GetIsBeta() bool {
	if x != nil && x.IsBeta != nil {
		return *x.IsBeta
	}
	return false
}

func (x *GameLevelInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GameLevelInfo) GetProgram() uint32 {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return 0
}

func (x *GameLevelInfo) GetLicenses() []*AccountLicense {
	if x != nil {
		return x.Licenses
	}
	return nil
}

func (x *GameLevelInfo) GetRealmPermissions() uint32 {
	if x != nil && x.RealmPermissions != nil {
		return *x.RealmPermissions
	}
	return 0
}

func (x *GameLevelInfo) GetLastLogoutTimeMs() uint64 {
	if x != nil && x.LastLogoutTimeMs != nil {
		return *x.LastLogoutTimeMs
	}
	return 0
}

type GameTimeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUnlimitedPlayTime     *bool   `protobuf:"varint,3,opt,name=is_unlimited_play_time,json=isUnlimitedPlayTime" json:"is_unlimited_play_time,omitempty"`
	PlayTimeExpires         *uint64 `protobuf:"varint,5,opt,name=play_time_expires,json=playTimeExpires" json:"play_time_expires,omitempty"`
	IsSubscription          *bool   `protobuf:"varint,6,opt,name=is_subscription,json=isSubscription" json:"is_subscription,omitempty"`
	IsRecurringSubscription *bool   `protobuf:"varint,7,opt,name=is_recurring_subscription,json=isRecurringSubscription" json:"is_recurring_subscription,omitempty"`
}

func (x *GameTimeInfo) Reset() {
	*x = GameTimeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameTimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameTimeInfo) ProtoMessage() {}

func (x *GameTimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameTimeInfo.ProtoReflect.Descriptor instead.
func (*GameTimeInfo) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{18}
}

func (x *GameTimeInfo) GetIsUnlimitedPlayTime() bool {
	if x != nil && x.IsUnlimitedPlayTime != nil {
		return *x.IsUnlimitedPlayTime
	}
	return false
}

func (x *GameTimeInfo) GetPlayTimeExpires() uint64 {
	if x != nil && x.PlayTimeExpires != nil {
		return *x.PlayTimeExpires
	}
	return 0
}

func (x *GameTimeInfo) GetIsSubscription() bool {
	if x != nil && x.IsSubscription != nil {
		return *x.IsSubscription
	}
	return false
}

func (x *GameTimeInfo) GetIsRecurringSubscription() bool {
	if x != nil && x.IsRecurringSubscription != nil {
		return *x.IsRecurringSubscription
	}
	return false
}

type GameTimeRemainingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinutesRemaining               *uint32 `protobuf:"varint,1,opt,name=minutes_remaining,json=minutesRemaining" json:"minutes_remaining,omitempty"`
	ParentalDailyMinutesRemaining  *uint32 `protobuf:"varint,2,opt,name=parental_daily_minutes_remaining,json=parentalDailyMinutesRemaining" json:"parental_daily_minutes_remaining,omitempty"`
	ParentalWeeklyMinutesRemaining *uint32 `protobuf:"varint,3,opt,name=parental_weekly_minutes_remaining,json=parentalWeeklyMinutesRemaining" json:"parental_weekly_minutes_remaining,omitempty"`
	SecondsRemainingUntilKick      *uint32 `protobuf:"varint,4,opt,name=seconds_remaining_until_kick,json=secondsRemainingUntilKick" json:"seconds_remaining_until_kick,omitempty"`
}

func (x *GameTimeRemainingInfo) Reset() {
	*x = GameTimeRemainingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameTimeRemainingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameTimeRemainingInfo) ProtoMessage() {}

func (x *GameTimeRemainingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameTimeRemainingInfo.ProtoReflect.Descriptor instead.
func (*GameTimeRemainingInfo) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{19}
}

func (x *GameTimeRemainingInfo) GetMinutesRemaining() uint32 {
	if x != nil && x.MinutesRemaining != nil {
		return *x.MinutesRemaining
	}
	return 0
}

func (x *GameTimeRemainingInfo) GetParentalDailyMinutesRemaining() uint32 {
	if x != nil && x.ParentalDailyMinutesRemaining != nil {
		return *x.ParentalDailyMinutesRemaining
	}
	return 0
}

func (x *GameTimeRemainingInfo) GetParentalWeeklyMinutesRemaining() uint32 {
	if x != nil && x.ParentalWeeklyMinutesRemaining != nil {
		return *x.ParentalWeeklyMinutesRemaining
	}
	return 0
}

func (x *GameTimeRemainingInfo) GetSecondsRemainingUntilKick() uint32 {
	if x != nil && x.SecondsRemainingUntilKick != nil {
		return *x.SecondsRemainingUntilKick
	}
	return 0
}

type GameStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuspended       *bool   `protobuf:"varint,4,opt,name=is_suspended,json=isSuspended" json:"is_suspended,omitempty"`
	IsBanned          *bool   `protobuf:"varint,5,opt,name=is_banned,json=isBanned" json:"is_banned,omitempty"`
	SuspensionExpires *uint64 `protobuf:"varint,6,opt,name=suspension_expires,json=suspensionExpires" json:"suspension_expires,omitempty"`
	Program           *uint32 `protobuf:"fixed32,7,opt,name=program" json:"program,omitempty"`
	IsLocked          *bool   `protobuf:"varint,8,opt,name=is_locked,json=isLocked" json:"is_locked,omitempty"`
	IsBamUnlockable   *bool   `protobuf:"varint,9,opt,name=is_bam_unlockable,json=isBamUnlockable" json:"is_bam_unlockable,omitempty"`
}

func (x *GameStatus) Reset() {
	*x = GameStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStatus) ProtoMessage() {}

func (x *GameStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStatus.ProtoReflect.Descriptor instead.
func (*GameStatus) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{20}
}

func (x *GameStatus) GetIsSuspended() bool {
	if x != nil && x.IsSuspended != nil {
		return *x.IsSuspended
	}
	return false
}

func (x *GameStatus) GetIsBanned() bool {
	if x != nil && x.IsBanned != nil {
		return *x.IsBanned
	}
	return false
}

func (x *GameStatus) GetSuspensionExpires() uint64 {
	if x != nil && x.SuspensionExpires != nil {
		return *x.SuspensionExpires
	}
	return 0
}

func (x *GameStatus) GetProgram() uint32 {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return 0
}

func (x *GameStatus) GetIsLocked() bool {
	if x != nil && x.IsLocked != nil {
		return *x.IsLocked
	}
	return false
}

func (x *GameStatus) GetIsBamUnlockable() bool {
	if x != nil && x.IsBamUnlockable != nil {
		return *x.IsBamUnlockable
	}
	return false
}

type RAFInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RafInfo []byte `protobuf:"bytes,1,opt,name=raf_info,json=rafInfo" json:"raf_info,omitempty"`
}

func (x *RAFInfo) Reset() {
	*x = RAFInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RAFInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RAFInfo) ProtoMessage() {}

func (x *RAFInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RAFInfo.ProtoReflect.Descriptor instead.
func (*RAFInfo) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{21}
}

func (x *RAFInfo) GetRafInfo() []byte {
	if x != nil {
		return x.RafInfo
	}
	return nil
}

type GameSessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime              *uint32              `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Location               *GameSessionLocation `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	HasBenefactor          *bool                `protobuf:"varint,5,opt,name=has_benefactor,json=hasBenefactor" json:"has_benefactor,omitempty"`
	IsUsingIgr             *bool                `protobuf:"varint,6,opt,name=is_using_igr,json=isUsingIgr" json:"is_using_igr,omitempty"`
	ParentalControlsActive *bool                `protobuf:"varint,7,opt,name=parental_controls_active,json=parentalControlsActive" json:"parental_controls_active,omitempty"`
	StartTimeSec           *uint64              `protobuf:"varint,8,opt,name=start_time_sec,json=startTimeSec" json:"start_time_sec,omitempty"`
	IgrId                  *IgrId               `protobuf:"bytes,9,opt,name=igr_id,json=igrId" json:"igr_id,omitempty"`
	PlatformId             *uint32              `protobuf:"fixed32,10,opt,name=platform_id,json=platformId" json:"platform_id,omitempty"`
	IgrPaid                *bool                `protobuf:"varint,11,opt,name=igr_paid,json=igrPaid" json:"igr_paid,omitempty"`
}

func (x *GameSessionInfo) Reset() {
	*x = GameSessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSessionInfo) ProtoMessage() {}

func (x *GameSessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSessionInfo.ProtoReflect.Descriptor instead.
func (*GameSessionInfo) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{22}
}

func (x *GameSessionInfo) GetStartTime() uint32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *GameSessionInfo) GetLocation() *GameSessionLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *GameSessionInfo) GetHasBenefactor() bool {
	if x != nil && x.HasBenefactor != nil {
		return *x.HasBenefactor
	}
	return false
}

func (x *GameSessionInfo) GetIsUsingIgr() bool {
	if x != nil && x.IsUsingIgr != nil {
		return *x.IsUsingIgr
	}
	return false
}

func (x *GameSessionInfo) GetParentalControlsActive() bool {
	if x != nil && x.ParentalControlsActive != nil {
		return *x.ParentalControlsActive
	}
	return false
}

func (x *GameSessionInfo) GetStartTimeSec() uint64 {
	if x != nil && x.StartTimeSec != nil {
		return *x.StartTimeSec
	}
	return 0
}

func (x *GameSessionInfo) GetIgrId() *IgrId {
	if x != nil {
		return x.IgrId
	}
	return nil
}

func (x *GameSessionInfo) GetPlatformId() uint32 {
	if x != nil && x.PlatformId != nil {
		return *x.PlatformId
	}
	return 0
}

func (x *GameSessionInfo) GetIgrPaid() bool {
	if x != nil && x.IgrPaid != nil {
		return *x.IgrPaid
	}
	return false
}

type GameSessionUpdateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cais *CAIS `protobuf:"bytes,8,opt,name=cais" json:"cais,omitempty"`
}

func (x *GameSessionUpdateInfo) Reset() {
	*x = GameSessionUpdateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSessionUpdateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSessionUpdateInfo) ProtoMessage() {}

func (x *GameSessionUpdateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSessionUpdateInfo.ProtoReflect.Descriptor instead.
func (*GameSessionUpdateInfo) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{23}
}

func (x *GameSessionUpdateInfo) GetCais() *CAIS {
	if x != nil {
		return x.Cais
	}
	return nil
}

type GameSessionLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress *string `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	Country   *uint32 `protobuf:"varint,2,opt,name=country" json:"country,omitempty"`
	City      *string `protobuf:"bytes,3,opt,name=city" json:"city,omitempty"`
}

func (x *GameSessionLocation) Reset() {
	*x = GameSessionLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSessionLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSessionLocation) ProtoMessage() {}

func (x *GameSessionLocation) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSessionLocation.ProtoReflect.Descriptor instead.
func (*GameSessionLocation) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{24}
}

func (x *GameSessionLocation) GetIpAddress() string {
	if x != nil && x.IpAddress != nil {
		return *x.IpAddress
	}
	return ""
}

func (x *GameSessionLocation) GetCountry() uint32 {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return 0
}

func (x *GameSessionLocation) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

type CAIS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayedMinutes *uint32 `protobuf:"varint,1,opt,name=played_minutes,json=playedMinutes" json:"played_minutes,omitempty"`
	RestedMinutes *uint32 `protobuf:"varint,2,opt,name=rested_minutes,json=restedMinutes" json:"rested_minutes,omitempty"`
	LastHeardTime *uint64 `protobuf:"varint,3,opt,name=last_heard_time,json=lastHeardTime" json:"last_heard_time,omitempty"`
}

func (x *CAIS) Reset() {
	*x = CAIS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAIS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAIS) ProtoMessage() {}

func (x *CAIS) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAIS.ProtoReflect.Descriptor instead.
func (*CAIS) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{25}
}

func (x *CAIS) GetPlayedMinutes() uint32 {
	if x != nil && x.PlayedMinutes != nil {
		return *x.PlayedMinutes
	}
	return 0
}

func (x *CAIS) GetRestedMinutes() uint32 {
	if x != nil && x.RestedMinutes != nil {
		return *x.RestedMinutes
	}
	return 0
}

func (x *CAIS) GetLastHeardTime() uint64 {
	if x != nil && x.LastHeardTime != nil {
		return *x.LastHeardTime
	}
	return 0
}

type GameAccountList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region *uint32              `protobuf:"varint,3,opt,name=region" json:"region,omitempty"`
	Handle []*GameAccountHandle `protobuf:"bytes,4,rep,name=handle" json:"handle,omitempty"`
}

func (x *GameAccountList) Reset() {
	*x = GameAccountList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAccountList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAccountList) ProtoMessage() {}

func (x *GameAccountList) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAccountList.ProtoReflect.Descriptor instead.
func (*GameAccountList) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{26}
}

func (x *GameAccountList) GetRegion() uint32 {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return 0
}

func (x *GameAccountList) GetHandle() []*GameAccountHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

type SecurityStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmsProtectEnabled     *bool `protobuf:"varint,1,opt,name=sms_protect_enabled,json=smsProtectEnabled" json:"sms_protect_enabled,omitempty"`
	EmailVerified         *bool `protobuf:"varint,2,opt,name=email_verified,json=emailVerified" json:"email_verified,omitempty"`
	AuthenticatorEnabled  *bool `protobuf:"varint,3,opt,name=authenticator_enabled,json=authenticatorEnabled" json:"authenticator_enabled,omitempty"`
	SqaEnabled            *bool `protobuf:"varint,4,opt,name=sqa_enabled,json=sqaEnabled" json:"sqa_enabled,omitempty"`
	AuthenticatorRequired *bool `protobuf:"varint,5,opt,name=authenticator_required,json=authenticatorRequired" json:"authenticator_required,omitempty"`
}

func (x *SecurityStatus) Reset() {
	*x = SecurityStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityStatus) ProtoMessage() {}

func (x *SecurityStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityStatus.ProtoReflect.Descriptor instead.
func (*SecurityStatus) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{27}
}

func (x *SecurityStatus) GetSmsProtectEnabled() bool {
	if x != nil && x.SmsProtectEnabled != nil {
		return *x.SmsProtectEnabled
	}
	return false
}

func (x *SecurityStatus) GetEmailVerified() bool {
	if x != nil && x.EmailVerified != nil {
		return *x.EmailVerified
	}
	return false
}

func (x *SecurityStatus) GetAuthenticatorEnabled() bool {
	if x != nil && x.AuthenticatorEnabled != nil {
		return *x.AuthenticatorEnabled
	}
	return false
}

func (x *SecurityStatus) GetSqaEnabled() bool {
	if x != nil && x.SqaEnabled != nil {
		return *x.SqaEnabled
	}
	return false
}

func (x *SecurityStatus) GetAuthenticatorRequired() bool {
	if x != nil && x.AuthenticatorRequired != nil {
		return *x.AuthenticatorRequired
	}
	return false
}

type AccountState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountLevelInfo    *AccountLevelInfo        `protobuf:"bytes,1,opt,name=account_level_info,json=accountLevelInfo" json:"account_level_info,omitempty"`
	PrivacyInfo         *PrivacyInfo             `protobuf:"bytes,2,opt,name=privacy_info,json=privacyInfo" json:"privacy_info,omitempty"`
	ParentalControlInfo *ParentalControlInfo     `protobuf:"bytes,3,opt,name=parental_control_info,json=parentalControlInfo" json:"parental_control_info,omitempty"`
	GameLevelInfo       []*GameLevelInfo         `protobuf:"bytes,5,rep,name=game_level_info,json=gameLevelInfo" json:"game_level_info,omitempty"`
	GameStatus          []*GameStatus            `protobuf:"bytes,6,rep,name=game_status,json=gameStatus" json:"game_status,omitempty"`
	GameAccounts        []*GameAccountList       `protobuf:"bytes,7,rep,name=game_accounts,json=gameAccounts" json:"game_accounts,omitempty"`
	SecurityStatus      *SecurityStatus          `protobuf:"bytes,8,opt,name=security_status,json=securityStatus" json:"security_status,omitempty"`
	GovernmentCurfew    *PlayScheduleRestriction `protobuf:"bytes,9,opt,name=government_curfew,json=governmentCurfew" json:"government_curfew,omitempty"`
}

func (x *AccountState) Reset() {
	*x = AccountState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountState) ProtoMessage() {}

func (x *AccountState) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountState.ProtoReflect.Descriptor instead.
func (*AccountState) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{28}
}

func (x *AccountState) GetAccountLevelInfo() *AccountLevelInfo {
	if x != nil {
		return x.AccountLevelInfo
	}
	return nil
}

func (x *AccountState) GetPrivacyInfo() *PrivacyInfo {
	if x != nil {
		return x.PrivacyInfo
	}
	return nil
}

func (x *AccountState) GetParentalControlInfo() *ParentalControlInfo {
	if x != nil {
		return x.ParentalControlInfo
	}
	return nil
}

func (x *AccountState) GetGameLevelInfo() []*GameLevelInfo {
	if x != nil {
		return x.GameLevelInfo
	}
	return nil
}

func (x *AccountState) GetGameStatus() []*GameStatus {
	if x != nil {
		return x.GameStatus
	}
	return nil
}

func (x *AccountState) GetGameAccounts() []*GameAccountList {
	if x != nil {
		return x.GameAccounts
	}
	return nil
}

func (x *AccountState) GetSecurityStatus() *SecurityStatus {
	if x != nil {
		return x.SecurityStatus
	}
	return nil
}

func (x *AccountState) GetGovernmentCurfew() *PlayScheduleRestriction {
	if x != nil {
		return x.GovernmentCurfew
	}
	return nil
}

type AccountStateTagged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountState *AccountState     `protobuf:"bytes,1,opt,name=account_state,json=accountState" json:"account_state,omitempty"`
	AccountTags  *AccountFieldTags `protobuf:"bytes,2,opt,name=account_tags,json=accountTags" json:"account_tags,omitempty"`
}

func (x *AccountStateTagged) Reset() {
	*x = AccountStateTagged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountStateTagged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountStateTagged) ProtoMessage() {}

func (x *AccountStateTagged) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountStateTagged.ProtoReflect.Descriptor instead.
func (*AccountStateTagged) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{29}
}

func (x *AccountStateTagged) GetAccountState() *AccountState {
	if x != nil {
		return x.AccountState
	}
	return nil
}

func (x *AccountStateTagged) GetAccountTags() *AccountFieldTags {
	if x != nil {
		return x.AccountTags
	}
	return nil
}

type GameAccountState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameLevelInfo *GameLevelInfo `protobuf:"bytes,1,opt,name=game_level_info,json=gameLevelInfo" json:"game_level_info,omitempty"`
	GameTimeInfo  *GameTimeInfo  `protobuf:"bytes,2,opt,name=game_time_info,json=gameTimeInfo" json:"game_time_info,omitempty"`
	GameStatus    *GameStatus    `protobuf:"bytes,3,opt,name=game_status,json=gameStatus" json:"game_status,omitempty"`
	RafInfo       *RAFInfo       `protobuf:"bytes,4,opt,name=raf_info,json=rafInfo" json:"raf_info,omitempty"`
}

func (x *GameAccountState) Reset() {
	*x = GameAccountState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAccountState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAccountState) ProtoMessage() {}

func (x *GameAccountState) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAccountState.ProtoReflect.Descriptor instead.
func (*GameAccountState) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{30}
}

func (x *GameAccountState) GetGameLevelInfo() *GameLevelInfo {
	if x != nil {
		return x.GameLevelInfo
	}
	return nil
}

func (x *GameAccountState) GetGameTimeInfo() *GameTimeInfo {
	if x != nil {
		return x.GameTimeInfo
	}
	return nil
}

func (x *GameAccountState) GetGameStatus() *GameStatus {
	if x != nil {
		return x.GameStatus
	}
	return nil
}

func (x *GameAccountState) GetRafInfo() *RAFInfo {
	if x != nil {
		return x.RafInfo
	}
	return nil
}

type GameAccountStateTagged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameAccountState *GameAccountState     `protobuf:"bytes,1,opt,name=game_account_state,json=gameAccountState" json:"game_account_state,omitempty"`
	GameAccountTags  *GameAccountFieldTags `protobuf:"bytes,2,opt,name=game_account_tags,json=gameAccountTags" json:"game_account_tags,omitempty"`
}

func (x *GameAccountStateTagged) Reset() {
	*x = GameAccountStateTagged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAccountStateTagged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAccountStateTagged) ProtoMessage() {}

func (x *GameAccountStateTagged) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAccountStateTagged.ProtoReflect.Descriptor instead.
func (*GameAccountStateTagged) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{31}
}

func (x *GameAccountStateTagged) GetGameAccountState() *GameAccountState {
	if x != nil {
		return x.GameAccountState
	}
	return nil
}

func (x *GameAccountStateTagged) GetGameAccountTags() *GameAccountFieldTags {
	if x != nil {
		return x.GameAccountTags
	}
	return nil
}

type AuthorizedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *string  `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	License []uint32 `protobuf:"varint,2,rep,name=license" json:"license,omitempty"`
}

func (x *AuthorizedData) Reset() {
	*x = AuthorizedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedData) ProtoMessage() {}

func (x *AuthorizedData) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedData.ProtoReflect.Descriptor instead.
func (*AuthorizedData) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{32}
}

func (x *AuthorizedData) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

func (x *AuthorizedData) GetLicense() []uint32 {
	if x != nil {
		return x.License
	}
	return nil
}

type IgrId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameAccount *GameAccountHandle `protobuf:"bytes,1,opt,name=game_account,json=gameAccount" json:"game_account,omitempty"`
	ExternalId  *uint32            `protobuf:"fixed32,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
	Uuid        *string            `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
}

func (x *IgrId) Reset() {
	*x = IgrId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IgrId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IgrId) ProtoMessage() {}

func (x *IgrId) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IgrId.ProtoReflect.Descriptor instead.
func (*IgrId) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{33}
}

func (x *IgrId) GetGameAccount() *GameAccountHandle {
	if x != nil {
		return x.GameAccount
	}
	return nil
}

func (x *IgrId) GetExternalId() uint32 {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return 0
}

func (x *IgrId) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

type IgrAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientAddress *string `protobuf:"bytes,1,opt,name=client_address,json=clientAddress" json:"client_address,omitempty"`
	Region        *uint32 `protobuf:"varint,2,opt,name=region" json:"region,omitempty"`
}

func (x *IgrAddress) Reset() {
	*x = IgrAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IgrAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IgrAddress) ProtoMessage() {}

func (x *IgrAddress) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IgrAddress.ProtoReflect.Descriptor instead.
func (*IgrAddress) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{34}
}

func (x *IgrAddress) GetClientAddress() string {
	if x != nil && x.ClientAddress != nil {
		return *x.ClientAddress
	}
	return ""
}

func (x *IgrAddress) GetRegion() uint32 {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return 0
}

type AccountPrivacySetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUsingRid               *bool `protobuf:"varint,1,opt,name=is_using_rid,json=isUsingRid" json:"is_using_rid,omitempty"`
	IsVisibleForViewFriends  *bool `protobuf:"varint,2,opt,name=is_visible_for_view_friends,json=isVisibleForViewFriends" json:"is_visible_for_view_friends,omitempty"`
	IsHiddenFromFriendFinder *bool `protobuf:"varint,3,opt,name=is_hidden_from_friend_finder,json=isHiddenFromFriendFinder" json:"is_hidden_from_friend_finder,omitempty"`
	OnlyAllowFriendWhispers  *bool `protobuf:"varint,4,opt,name=only_allow_friend_whispers,json=onlyAllowFriendWhispers" json:"only_allow_friend_whispers,omitempty"`
}

func (x *AccountPrivacySetting) Reset() {
	*x = AccountPrivacySetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountPrivacySetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountPrivacySetting) ProtoMessage() {}

func (x *AccountPrivacySetting) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountPrivacySetting.ProtoReflect.Descriptor instead.
func (*AccountPrivacySetting) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{35}
}

func (x *AccountPrivacySetting) GetIsUsingRid() bool {
	if x != nil && x.IsUsingRid != nil {
		return *x.IsUsingRid
	}
	return false
}

func (x *AccountPrivacySetting) GetIsVisibleForViewFriends() bool {
	if x != nil && x.IsVisibleForViewFriends != nil {
		return *x.IsVisibleForViewFriends
	}
	return false
}

func (x *AccountPrivacySetting) GetIsHiddenFromFriendFinder() bool {
	if x != nil && x.IsHiddenFromFriendFinder != nil {
		return *x.IsHiddenFromFriendFinder
	}
	return false
}

func (x *AccountPrivacySetting) GetOnlyAllowFriendWhispers() bool {
	if x != nil && x.OnlyAllowFriendWhispers != nil {
		return *x.OnlyAllowFriendWhispers
	}
	return false
}

type AccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleTag              *string                `protobuf:"bytes,1,opt,name=battle_tag,json=battleTag" json:"battle_tag,omitempty"`
	Email                  *string                `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	PhoneNumber            *string                `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`
	FullName               *string                `protobuf:"bytes,4,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	Birthdate              *string                `protobuf:"bytes,5,opt,name=birthdate" json:"birthdate,omitempty"`
	Country                *string                `protobuf:"bytes,6,opt,name=country" json:"country,omitempty"`
	DefaultCurrency        *string                `protobuf:"bytes,7,opt,name=default_currency,json=defaultCurrency" json:"default_currency,omitempty"`
	PreferredRegion        *uint32                `protobuf:"varint,8,opt,name=preferred_region,json=preferredRegion" json:"preferred_region,omitempty"`
	RatingsBoardMinimumAge *uint32                `protobuf:"varint,9,opt,name=ratings_board_minimum_age,json=ratingsBoardMinimumAge" json:"ratings_board_minimum_age,omitempty"`
	HasParentalControl     *bool                  `protobuf:"varint,10,opt,name=has_parental_control,json=hasParentalControl" json:"has_parental_control,omitempty"`
	IsEmailVerified        *bool                  `protobuf:"varint,11,opt,name=is_email_verified,json=isEmailVerified" json:"is_email_verified,omitempty"`
	IsSmsProtected         *bool                  `protobuf:"varint,12,opt,name=is_sms_protected,json=isSmsProtected" json:"is_sms_protected,omitempty"`
	IsHeadlessAccount      *bool                  `protobuf:"varint,13,opt,name=is_headless_account,json=isHeadlessAccount" json:"is_headless_account,omitempty"`
	IsEmployee             *bool                  `protobuf:"varint,14,opt,name=is_employee,json=isEmployee" json:"is_employee,omitempty"`
	IsTestAccount          *bool                  `protobuf:"varint,15,opt,name=is_test_account,json=isTestAccount" json:"is_test_account,omitempty"`
	PrivacySetting         *AccountPrivacySetting `protobuf:"bytes,16,opt,name=privacy_setting,json=privacySetting" json:"privacy_setting,omitempty"`
}

func (x *AccountInfo) Reset() {
	*x = AccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInfo) ProtoMessage() {}

func (x *AccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInfo.ProtoReflect.Descriptor instead.
func (*AccountInfo) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{36}
}

func (x *AccountInfo) GetBattleTag() string {
	if x != nil && x.BattleTag != nil {
		return *x.BattleTag
	}
	return ""
}

func (x *AccountInfo) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *AccountInfo) GetPhoneNumber() string {
	if x != nil && x.PhoneNumber != nil {
		return *x.PhoneNumber
	}
	return ""
}

func (x *AccountInfo) GetFullName() string {
	if x != nil && x.FullName != nil {
		return *x.FullName
	}
	return ""
}

func (x *AccountInfo) GetBirthdate() string {
	if x != nil && x.Birthdate != nil {
		return *x.Birthdate
	}
	return ""
}

func (x *AccountInfo) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *AccountInfo) GetDefaultCurrency() string {
	if x != nil && x.DefaultCurrency != nil {
		return *x.DefaultCurrency
	}
	return ""
}

func (x *AccountInfo) GetPreferredRegion() uint32 {
	if x != nil && x.PreferredRegion != nil {
		return *x.PreferredRegion
	}
	return 0
}

func (x *AccountInfo) GetRatingsBoardMinimumAge() uint32 {
	if x != nil && x.RatingsBoardMinimumAge != nil {
		return *x.RatingsBoardMinimumAge
	}
	return 0
}

func (x *AccountInfo) GetHasParentalControl() bool {
	if x != nil && x.HasParentalControl != nil {
		return *x.HasParentalControl
	}
	return false
}

func (x *AccountInfo) GetIsEmailVerified() bool {
	if x != nil && x.IsEmailVerified != nil {
		return *x.IsEmailVerified
	}
	return false
}

func (x *AccountInfo) GetIsSmsProtected() bool {
	if x != nil && x.IsSmsProtected != nil {
		return *x.IsSmsProtected
	}
	return false
}

func (x *AccountInfo) GetIsHeadlessAccount() bool {
	if x != nil && x.IsHeadlessAccount != nil {
		return *x.IsHeadlessAccount
	}
	return false
}

func (x *AccountInfo) GetIsEmployee() bool {
	if x != nil && x.IsEmployee != nil {
		return *x.IsEmployee
	}
	return false
}

func (x *AccountInfo) GetIsTestAccount() bool {
	if x != nil && x.IsTestAccount != nil {
		return *x.IsTestAccount
	}
	return false
}

func (x *AccountInfo) GetPrivacySetting() *AccountPrivacySetting {
	if x != nil {
		return x.PrivacySetting
	}
	return nil
}

type RestrictionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active       *bool   `protobuf:"varint,1,opt,name=active" json:"active,omitempty"`
	ExpirationUs *uint64 `protobuf:"varint,2,opt,name=expiration_us,json=expirationUs" json:"expiration_us,omitempty"`
}

func (x *RestrictionStatus) Reset() {
	*x = RestrictionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestrictionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestrictionStatus) ProtoMessage() {}

func (x *RestrictionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestrictionStatus.ProtoReflect.Descriptor instead.
func (*RestrictionStatus) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{37}
}

func (x *RestrictionStatus) GetActive() bool {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return false
}

func (x *RestrictionStatus) GetExpirationUs() uint64 {
	if x != nil && x.ExpirationUs != nil {
		return *x.ExpirationUs
	}
	return 0
}

type AccountPlatformRestrictionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Squelched                              *RestrictionStatus `protobuf:"bytes,2,opt,name=squelched" json:"squelched,omitempty"`
	LegalCountryFeatureRestrictionsApplied *RestrictionStatus `protobuf:"bytes,3,opt,name=legal_country_feature_restrictions_applied,json=legalCountryFeatureRestrictionsApplied" json:"legal_country_feature_restrictions_applied,omitempty"`
}

func (x *AccountPlatformRestrictionInfo) Reset() {
	*x = AccountPlatformRestrictionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountPlatformRestrictionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountPlatformRestrictionInfo) ProtoMessage() {}

func (x *AccountPlatformRestrictionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_types_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountPlatformRestrictionInfo.ProtoReflect.Descriptor instead.
func (*AccountPlatformRestrictionInfo) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_types_proto_rawDescGZIP(), []int{38}
}

func (x *AccountPlatformRestrictionInfo) GetSquelched() *RestrictionStatus {
	if x != nil {
		return x.Squelched
	}
	return nil
}

func (x *AccountPlatformRestrictionInfo) GetLegalCountryFeatureRestrictionsApplied() *RestrictionStatus {
	if x != nil {
		return x.LegalCountryFeatureRestrictionsApplied
	}
	return nil
}

var File_bgs_low_pb_client_account_types_proto protoreflect.FileDescriptor

var file_bgs_low_pb_client_account_types_proto_rawDesc = []byte{
	0x0a, 0x25, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x1a, 0x24, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f,
	0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x37, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x07, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x07, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x07, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0xd9, 0x01, 0x0a, 0x10, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x42, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x01, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x4d, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x38, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x54, 0x61, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x35, 0x0a, 0x09, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x22, 0xd1, 0x03, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x61, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x61, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x54, 0x61, 0x67, 0x12, 0x39, 0x0a, 0x19, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x07, 0x52, 0x16, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x61, 0x67,
	0x12, 0x54, 0x0a, 0x14, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x54, 0x61, 0x67, 0x52, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x54, 0x61, 0x67, 0x73, 0x12, 0x4d, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x54, 0x61, 0x67, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x61, 0x67, 0x73, 0x12, 0x4e, 0x0a, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x54, 0x61, 0x67, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x07, 0x52, 0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x54, 0x61, 0x67, 0x22, 0xbc, 0x01, 0x0a, 0x14, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x12, 0x2d,
	0x0a, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x10, 0x67, 0x61, 0x6d,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x61, 0x67, 0x12, 0x2b, 0x0a,
	0x12, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x61, 0x67, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x61, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0a, 0x72, 0x61, 0x66, 0x49, 0x6e, 0x66,
	0x6f, 0x54, 0x61, 0x67, 0x22, 0x9d, 0x03, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x1b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x31, 0x0a, 0x15, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x32, 0x0a, 0x15, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xee, 0x01, 0x0a, 0x17, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x31, 0x0a, 0x15, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x24, 0x0a, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x72, 0x61, 0x66, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x61,
	0x66, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xf6, 0x03, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x3a, 0x01, 0x30, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x55, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x62, 0x0a, 0x14, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x59, 0x0a, 0x11, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30,
	0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1a,
	0x0a, 0x06, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xf1, 0x06, 0x0a, 0x10, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x43, 0x0a, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x61, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x28, 0x0a, 0x10, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x6e, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61,
	0x69, 0x64, 0x41, 0x6e, 0x79, 0x12, 0x67, 0x0a, 0x15, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x13, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73,
	0x53, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x19,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x16, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x41, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x12, 0x5a, 0x0a, 0x2a, 0x6c, 0x65, 0x67, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x26, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x74, 0x49, 0x6e, 0x73, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x49, 0x6e, 0x73, 0x22, 0xab,
	0x03, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x55, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x69, 0x64,
	0x12, 0x3c, 0x0a, 0x1b, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x66,
	0x6f, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x46, 0x6f, 0x72, 0x56, 0x69, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x3e,
	0x0a, 0x1c, 0x69, 0x73, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x46, 0x72,
	0x6f, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x71,
	0x0a, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x3a,
	0x0f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x43, 0x59, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x53,
	0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x12, 0x3b, 0x0a, 0x1a, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x22, 0x4c,
	0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x49, 0x56, 0x41, 0x43, 0x59, 0x5f, 0x4d, 0x45, 0x10,
	0x00, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x43, 0x59, 0x5f, 0x46, 0x52, 0x49,
	0x45, 0x4e, 0x44, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x52, 0x49, 0x56, 0x41, 0x43,
	0x59, 0x5f, 0x45, 0x56, 0x45, 0x52, 0x59, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x22, 0xc8, 0x02, 0x0a,
	0x13, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x73, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72, 0x57, 0x65,
	0x65, 0x6b, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63,
	0x61, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0c, 0x70, 0x6c, 0x61,
	0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x6e,
	0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x55, 0x73, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x5a, 0x0a, 0x17, 0x50, 0x6c, 0x61, 0x79, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a,
	0x6f, 0x6e, 0x65, 0x22, 0xd8, 0x02, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x54, 0x72, 0x69, 0x61, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x62, 0x65, 0x74,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x42, 0x65, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x07, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x43, 0x0a,
	0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72,
	0x65, 0x61, 0x6c, 0x6d, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x2d, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x61,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x22, 0xd4,
	0x01, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x33, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x69, 0x73, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x19, 0x69, 0x73, 0x5f,
	0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x69, 0x73,
	0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x02, 0x0a, 0x15, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2b, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x47, 0x0a, 0x20,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x6d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x49, 0x0a, 0x21, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73,
	0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x1e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x3f, 0x0a, 0x1c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x6b, 0x69, 0x63, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x4b, 0x69, 0x63,
	0x6b, 0x22, 0xde, 0x01, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x12, 0x2d, 0x0a, 0x12, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x73, 0x75,
	0x73, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x07,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x6d,
	0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x69, 0x73, 0x42, 0x61, 0x6d, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0x24, 0x0a, 0x07, 0x52, 0x41, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x61, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x72, 0x61, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x96, 0x03, 0x0a, 0x0f, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x5f, 0x62, 0x65, 0x6e,
	0x65, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68,
	0x61, 0x73, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x67, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x55, 0x73, 0x69, 0x6e, 0x67, 0x49, 0x67, 0x72, 0x12, 0x38,
	0x0a, 0x18, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x16, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x35,
	0x0a, 0x06, 0x69, 0x67, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x67, 0x72, 0x49, 0x64, 0x52, 0x05,
	0x69, 0x67, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x67, 0x72, 0x5f, 0x70, 0x61,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x67, 0x72, 0x50, 0x61, 0x69,
	0x64, 0x22, 0x4a, 0x0a, 0x15, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x04, 0x63, 0x61,
	0x69, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x41, 0x49, 0x53, 0x52, 0x04, 0x63, 0x61, 0x69, 0x73, 0x22, 0x62, 0x0a,
	0x13, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x22, 0x7c, 0x0a, 0x04, 0x43, 0x41, 0x49, 0x53, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x68, 0x65, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x6d, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x06, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0xf4,
	0x01, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6d, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x73, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x71, 0x61, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x73, 0x71, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x35,
	0x0a, 0x16, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0xa8, 0x05, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x47, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x60, 0x0a, 0x15, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x0f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x67, 0x61, 0x6d,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x0b, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x4d, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x50, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x5d, 0x0a, 0x11, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x75, 0x72, 0x66, 0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10,
	0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x66, 0x65, 0x77,
	0x22, 0xae, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x67, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x67,
	0x73, 0x22, 0xb2, 0x02, 0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x67,
	0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x72, 0x61, 0x66,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x41, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72,
	0x61, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xcc, 0x01, 0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x67, 0x65,
	0x64, 0x12, 0x57, 0x0a, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x59, 0x0a, 0x11, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x61, 0x67, 0x73, 0x22, 0x3e, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x05, 0x49, 0x67, 0x72, 0x49, 0x64, 0x12,
	0x4d, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x0a, 0x49, 0x67, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x22, 0xf4, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73,
	0x5f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x55, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x1b,
	0x69, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x17, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x56,
	0x69, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x3e, 0x0a, 0x1c, 0x69, 0x73,
	0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x18, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x1a, 0x6f, 0x6e,
	0x6c, 0x79, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f,
	0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17,
	0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x57,
	0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x22, 0xa5, 0x05, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x19, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x41, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69,
	0x73, 0x53, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a,
	0x13, 0x69, 0x73, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x48, 0x65,
	0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x54, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22,
	0x50, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x73, 0x22, 0xf3, 0x01, 0x0a, 0x1e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x48, 0x0a, 0x09, 0x73, 0x71, 0x75, 0x65, 0x6c, 0x63, 0x68, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x09, 0x73, 0x71, 0x75, 0x65, 0x6c, 0x63, 0x68, 0x65, 0x64, 0x12, 0x86,
	0x01, 0x0a, 0x2a, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x26, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x2a, 0xb5, 0x01, 0x0a, 0x1a, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f,
	0x4e, 0x4f, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x44, 0x45,
	0x4e, 0x54, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x31, 0x38, 0x10, 0x02, 0x12,
	0x12, 0x0a, 0x0e, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x31,
	0x38, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x44, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x5f, 0x4d, 0x4e, 0x4c, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d,
	0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x07, 0x42,
	0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6a,
	0x62, 0x72, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x78, 0x2f,
	0x62, 0x6e, 0x65, 0x74, 0x2f, 0x62, 0x67, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76, 0x31,
}

var (
	file_bgs_low_pb_client_account_types_proto_rawDescOnce sync.Once
	file_bgs_low_pb_client_account_types_proto_rawDescData = file_bgs_low_pb_client_account_types_proto_rawDesc
)

func file_bgs_low_pb_client_account_types_proto_rawDescGZIP() []byte {
	file_bgs_low_pb_client_account_types_proto_rawDescOnce.Do(func() {
		file_bgs_low_pb_client_account_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_bgs_low_pb_client_account_types_proto_rawDescData)
	})
	return file_bgs_low_pb_client_account_types_proto_rawDescData
}

var file_bgs_low_pb_client_account_types_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_bgs_low_pb_client_account_types_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_bgs_low_pb_client_account_types_proto_goTypes = []interface{}{
	(IdentityVerificationStatus)(0),        // 0: bgs.protocol.account.v1.IdentityVerificationStatus
	(PrivacyInfo_GameInfoPrivacy)(0),       // 1: bgs.protocol.account.v1.PrivacyInfo.GameInfoPrivacy
	(*AccountId)(nil),                      // 2: bgs.protocol.account.v1.AccountId
	(*AccountLicense)(nil),                 // 3: bgs.protocol.account.v1.AccountLicense
	(*GameAccountHandle)(nil),              // 4: bgs.protocol.account.v1.GameAccountHandle
	(*AccountReference)(nil),               // 5: bgs.protocol.account.v1.AccountReference
	(*Identity)(nil),                       // 6: bgs.protocol.account.v1.Identity
	(*ProgramTag)(nil),                     // 7: bgs.protocol.account.v1.ProgramTag
	(*RegionTag)(nil),                      // 8: bgs.protocol.account.v1.RegionTag
	(*AccountFieldTags)(nil),               // 9: bgs.protocol.account.v1.AccountFieldTags
	(*GameAccountFieldTags)(nil),           // 10: bgs.protocol.account.v1.GameAccountFieldTags
	(*AccountFieldOptions)(nil),            // 11: bgs.protocol.account.v1.AccountFieldOptions
	(*GameAccountFieldOptions)(nil),        // 12: bgs.protocol.account.v1.GameAccountFieldOptions
	(*SubscriberReference)(nil),            // 13: bgs.protocol.account.v1.SubscriberReference
	(*OptIns)(nil),                         // 14: bgs.protocol.account.v1.OptIns
	(*AccountLevelInfo)(nil),               // 15: bgs.protocol.account.v1.AccountLevelInfo
	(*PrivacyInfo)(nil),                    // 16: bgs.protocol.account.v1.PrivacyInfo
	(*ParentalControlInfo)(nil),            // 17: bgs.protocol.account.v1.ParentalControlInfo
	(*PlayScheduleRestriction)(nil),        // 18: bgs.protocol.account.v1.PlayScheduleRestriction
	(*GameLevelInfo)(nil),                  // 19: bgs.protocol.account.v1.GameLevelInfo
	(*GameTimeInfo)(nil),                   // 20: bgs.protocol.account.v1.GameTimeInfo
	(*GameTimeRemainingInfo)(nil),          // 21: bgs.protocol.account.v1.GameTimeRemainingInfo
	(*GameStatus)(nil),                     // 22: bgs.protocol.account.v1.GameStatus
	(*RAFInfo)(nil),                        // 23: bgs.protocol.account.v1.RAFInfo
	(*GameSessionInfo)(nil),                // 24: bgs.protocol.account.v1.GameSessionInfo
	(*GameSessionUpdateInfo)(nil),          // 25: bgs.protocol.account.v1.GameSessionUpdateInfo
	(*GameSessionLocation)(nil),            // 26: bgs.protocol.account.v1.GameSessionLocation
	(*CAIS)(nil),                           // 27: bgs.protocol.account.v1.CAIS
	(*GameAccountList)(nil),                // 28: bgs.protocol.account.v1.GameAccountList
	(*SecurityStatus)(nil),                 // 29: bgs.protocol.account.v1.SecurityStatus
	(*AccountState)(nil),                   // 30: bgs.protocol.account.v1.AccountState
	(*AccountStateTagged)(nil),             // 31: bgs.protocol.account.v1.AccountStateTagged
	(*GameAccountState)(nil),               // 32: bgs.protocol.account.v1.GameAccountState
	(*GameAccountStateTagged)(nil),         // 33: bgs.protocol.account.v1.GameAccountStateTagged
	(*AuthorizedData)(nil),                 // 34: bgs.protocol.account.v1.AuthorizedData
	(*IgrId)(nil),                          // 35: bgs.protocol.account.v1.IgrId
	(*IgrAddress)(nil),                     // 36: bgs.protocol.account.v1.IgrAddress
	(*AccountPrivacySetting)(nil),          // 37: bgs.protocol.account.v1.AccountPrivacySetting
	(*AccountInfo)(nil),                    // 38: bgs.protocol.account.v1.AccountInfo
	(*RestrictionStatus)(nil),              // 39: bgs.protocol.account.v1.RestrictionStatus
	(*AccountPlatformRestrictionInfo)(nil), // 40: bgs.protocol.account.v1.AccountPlatformRestrictionInfo
	(*protocol.EntityId)(nil),              // 41: bgs.protocol.EntityId
}
var file_bgs_low_pb_client_account_types_proto_depIdxs = []int32{
	4,  // 0: bgs.protocol.account.v1.AccountReference.handle:type_name -> bgs.protocol.account.v1.GameAccountHandle
	2,  // 1: bgs.protocol.account.v1.Identity.account:type_name -> bgs.protocol.account.v1.AccountId
	4,  // 2: bgs.protocol.account.v1.Identity.game_account:type_name -> bgs.protocol.account.v1.GameAccountHandle
	7,  // 3: bgs.protocol.account.v1.AccountFieldTags.game_level_info_tags:type_name -> bgs.protocol.account.v1.ProgramTag
	7,  // 4: bgs.protocol.account.v1.AccountFieldTags.game_status_tags:type_name -> bgs.protocol.account.v1.ProgramTag
	8,  // 5: bgs.protocol.account.v1.AccountFieldTags.game_account_tags:type_name -> bgs.protocol.account.v1.RegionTag
	41, // 6: bgs.protocol.account.v1.SubscriberReference.entity_id:type_name -> bgs.protocol.EntityId
	11, // 7: bgs.protocol.account.v1.SubscriberReference.account_options:type_name -> bgs.protocol.account.v1.AccountFieldOptions
	9,  // 8: bgs.protocol.account.v1.SubscriberReference.account_tags:type_name -> bgs.protocol.account.v1.AccountFieldTags
	12, // 9: bgs.protocol.account.v1.SubscriberReference.game_account_options:type_name -> bgs.protocol.account.v1.GameAccountFieldOptions
	10, // 10: bgs.protocol.account.v1.SubscriberReference.game_account_tags:type_name -> bgs.protocol.account.v1.GameAccountFieldTags
	3,  // 11: bgs.protocol.account.v1.AccountLevelInfo.licenses:type_name -> bgs.protocol.account.v1.AccountLicense
	0,  // 12: bgs.protocol.account.v1.AccountLevelInfo.identity_check_status:type_name -> bgs.protocol.account.v1.IdentityVerificationStatus
	14, // 13: bgs.protocol.account.v1.AccountLevelInfo.opt_ins:type_name -> bgs.protocol.account.v1.OptIns
	1,  // 14: bgs.protocol.account.v1.PrivacyInfo.game_info_privacy:type_name -> bgs.protocol.account.v1.PrivacyInfo.GameInfoPrivacy
	3,  // 15: bgs.protocol.account.v1.GameLevelInfo.licenses:type_name -> bgs.protocol.account.v1.AccountLicense
	26, // 16: bgs.protocol.account.v1.GameSessionInfo.location:type_name -> bgs.protocol.account.v1.GameSessionLocation
	35, // 17: bgs.protocol.account.v1.GameSessionInfo.igr_id:type_name -> bgs.protocol.account.v1.IgrId
	27, // 18: bgs.protocol.account.v1.GameSessionUpdateInfo.cais:type_name -> bgs.protocol.account.v1.CAIS
	4,  // 19: bgs.protocol.account.v1.GameAccountList.handle:type_name -> bgs.protocol.account.v1.GameAccountHandle
	15, // 20: bgs.protocol.account.v1.AccountState.account_level_info:type_name -> bgs.protocol.account.v1.AccountLevelInfo
	16, // 21: bgs.protocol.account.v1.AccountState.privacy_info:type_name -> bgs.protocol.account.v1.PrivacyInfo
	17, // 22: bgs.protocol.account.v1.AccountState.parental_control_info:type_name -> bgs.protocol.account.v1.ParentalControlInfo
	19, // 23: bgs.protocol.account.v1.AccountState.game_level_info:type_name -> bgs.protocol.account.v1.GameLevelInfo
	22, // 24: bgs.protocol.account.v1.AccountState.game_status:type_name -> bgs.protocol.account.v1.GameStatus
	28, // 25: bgs.protocol.account.v1.AccountState.game_accounts:type_name -> bgs.protocol.account.v1.GameAccountList
	29, // 26: bgs.protocol.account.v1.AccountState.security_status:type_name -> bgs.protocol.account.v1.SecurityStatus
	18, // 27: bgs.protocol.account.v1.AccountState.government_curfew:type_name -> bgs.protocol.account.v1.PlayScheduleRestriction
	30, // 28: bgs.protocol.account.v1.AccountStateTagged.account_state:type_name -> bgs.protocol.account.v1.AccountState
	9,  // 29: bgs.protocol.account.v1.AccountStateTagged.account_tags:type_name -> bgs.protocol.account.v1.AccountFieldTags
	19, // 30: bgs.protocol.account.v1.GameAccountState.game_level_info:type_name -> bgs.protocol.account.v1.GameLevelInfo
	20, // 31: bgs.protocol.account.v1.GameAccountState.game_time_info:type_name -> bgs.protocol.account.v1.GameTimeInfo
	22, // 32: bgs.protocol.account.v1.GameAccountState.game_status:type_name -> bgs.protocol.account.v1.GameStatus
	23, // 33: bgs.protocol.account.v1.GameAccountState.raf_info:type_name -> bgs.protocol.account.v1.RAFInfo
	32, // 34: bgs.protocol.account.v1.GameAccountStateTagged.game_account_state:type_name -> bgs.protocol.account.v1.GameAccountState
	10, // 35: bgs.protocol.account.v1.GameAccountStateTagged.game_account_tags:type_name -> bgs.protocol.account.v1.GameAccountFieldTags
	4,  // 36: bgs.protocol.account.v1.IgrId.game_account:type_name -> bgs.protocol.account.v1.GameAccountHandle
	37, // 37: bgs.protocol.account.v1.AccountInfo.privacy_setting:type_name -> bgs.protocol.account.v1.AccountPrivacySetting
	39, // 38: bgs.protocol.account.v1.AccountPlatformRestrictionInfo.squelched:type_name -> bgs.protocol.account.v1.RestrictionStatus
	39, // 39: bgs.protocol.account.v1.AccountPlatformRestrictionInfo.legal_country_feature_restrictions_applied:type_name -> bgs.protocol.account.v1.RestrictionStatus
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_bgs_low_pb_client_account_types_proto_init() }
func file_bgs_low_pb_client_account_types_proto_init() {
	if File_bgs_low_pb_client_account_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bgs_low_pb_client_account_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountLicense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAccountHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountFieldTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAccountFieldTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountFieldOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAccountFieldOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriberReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptIns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountLevelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivacyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParentalControlInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayScheduleRestriction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameLevelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameTimeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameTimeRemainingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RAFInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSessionUpdateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSessionLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CAIS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAccountList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountStateTagged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAccountState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAccountStateTagged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IgrId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IgrAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountPrivacySetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestrictionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_types_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountPlatformRestrictionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bgs_low_pb_client_account_types_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bgs_low_pb_client_account_types_proto_goTypes,
		DependencyIndexes: file_bgs_low_pb_client_account_types_proto_depIdxs,
		EnumInfos:         file_bgs_low_pb_client_account_types_proto_enumTypes,
		MessageInfos:      file_bgs_low_pb_client_account_types_proto_msgTypes,
	}.Build()
	File_bgs_low_pb_client_account_types_proto = out.File
	file_bgs_low_pb_client_account_types_proto_rawDesc = nil
	file_bgs_low_pb_client_account_types_proto_goTypes = nil
	file_bgs_low_pb_client_account_types_proto_depIdxs = nil
}
