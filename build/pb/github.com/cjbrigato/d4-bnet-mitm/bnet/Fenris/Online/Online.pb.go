// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: Online.proto

package Online

import (
	Hero "github.com/cjbrigato/d4-bnet-mitm/bnet/Fenris/Hero"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueueId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueType  *uint32 `protobuf:"varint,1,opt,name=queue_type,json=queueType" json:"queue_type,omitempty"`
	Id         *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Serverpool *string `protobuf:"bytes,3,opt,name=serverpool" json:"serverpool,omitempty"`
}

func (x *QueueId) Reset() {
	*x = QueueId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Online_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueId) ProtoMessage() {}

func (x *QueueId) ProtoReflect() protoreflect.Message {
	mi := &file_Online_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueId.ProtoReflect.Descriptor instead.
func (*QueueId) Descriptor() ([]byte, []int) {
	return file_Online_proto_rawDescGZIP(), []int{0}
}

func (x *QueueId) GetQueueType() uint32 {
	if x != nil && x.QueueType != nil {
		return *x.QueueType
	}
	return 0
}

func (x *QueueId) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *QueueId) GetServerpool() string {
	if x != nil && x.Serverpool != nil {
		return *x.Serverpool
	}
	return ""
}

type QueueEntryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueId *QueueId `protobuf:"bytes,1,opt,name=queue_id,json=queueId" json:"queue_id,omitempty"`
	EntryId *string  `protobuf:"bytes,2,opt,name=entry_id,json=entryId" json:"entry_id,omitempty"`
}

func (x *QueueEntryKey) Reset() {
	*x = QueueEntryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Online_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueEntryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueEntryKey) ProtoMessage() {}

func (x *QueueEntryKey) ProtoReflect() protoreflect.Message {
	mi := &file_Online_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueEntryKey.ProtoReflect.Descriptor instead.
func (*QueueEntryKey) Descriptor() ([]byte, []int) {
	return file_Online_proto_rawDescGZIP(), []int{1}
}

func (x *QueueEntryKey) GetQueueId() *QueueId {
	if x != nil {
		return x.QueueId
	}
	return nil
}

func (x *QueueEntryKey) GetEntryId() string {
	if x != nil && x.EntryId != nil {
		return *x.EntryId
	}
	return ""
}

type QueueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryId          *string `protobuf:"bytes,1,opt,name=entry_id,json=entryId" json:"entry_id,omitempty"`
	Payload          []byte  `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
	AcquisitionToken *uint32 `protobuf:"varint,3,opt,name=acquisition_token,json=acquisitionToken" json:"acquisition_token,omitempty"`
}

func (x *QueueEntry) Reset() {
	*x = QueueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Online_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueEntry) ProtoMessage() {}

func (x *QueueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_Online_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueEntry.ProtoReflect.Descriptor instead.
func (*QueueEntry) Descriptor() ([]byte, []int) {
	return file_Online_proto_rawDescGZIP(), []int{2}
}

func (x *QueueEntry) GetEntryId() string {
	if x != nil && x.EntryId != nil {
		return *x.EntryId
	}
	return ""
}

func (x *QueueEntry) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *QueueEntry) GetAcquisitionToken() uint32 {
	if x != nil && x.AcquisitionToken != nil {
		return *x.AcquisitionToken
	}
	return 0
}

type GameCreateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameType         *int32              `protobuf:"zigzag32,1,req,name=game_type,json=gameType" json:"game_type,omitempty"`
	CreationFlags    *uint32             `protobuf:"varint,2,req,name=creation_flags,json=creationFlags,def=0" json:"creation_flags,omitempty"`
	Platform         *uint32             `protobuf:"varint,11,opt,name=platform" json:"platform,omitempty"`
	SnoSubzone       *int32              `protobuf:"zigzag32,3,opt,name=sno_subzone,json=snoSubzone,def=-1" json:"sno_subzone,omitempty"`
	SnoWorld         *int32              `protobuf:"zigzag32,4,opt,name=sno_world,json=snoWorld,def=-1" json:"sno_world,omitempty"`
	ItempowerBracket *uint32             `protobuf:"varint,5,opt,name=itempower_bracket,json=itempowerBracket" json:"itempower_bracket,omitempty"`
	Name             *string             `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	PartitionType    *uint32             `protobuf:"varint,7,opt,name=partition_type,json=partitionType" json:"partition_type,omitempty"`
	ServerPool       *string             `protobuf:"bytes,8,opt,name=server_pool,json=serverPool" json:"server_pool,omitempty"`
	CampaignState    *Hero.CampaignState `protobuf:"bytes,9,opt,name=campaign_state,json=campaignState" json:"campaign_state,omitempty"`
	PvpBucket        *uint32             `protobuf:"varint,10,opt,name=pvp_bucket,json=pvpBucket" json:"pvp_bucket,omitempty"`
}

// Default values for GameCreateParams fields.
const (
	Default_GameCreateParams_CreationFlags = uint32(0)
	Default_GameCreateParams_SnoSubzone    = int32(-1)
	Default_GameCreateParams_SnoWorld      = int32(-1)
)

func (x *GameCreateParams) Reset() {
	*x = GameCreateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Online_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCreateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCreateParams) ProtoMessage() {}

func (x *GameCreateParams) ProtoReflect() protoreflect.Message {
	mi := &file_Online_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCreateParams.ProtoReflect.Descriptor instead.
func (*GameCreateParams) Descriptor() ([]byte, []int) {
	return file_Online_proto_rawDescGZIP(), []int{3}
}

func (x *GameCreateParams) GetGameType() int32 {
	if x != nil && x.GameType != nil {
		return *x.GameType
	}
	return 0
}

func (x *GameCreateParams) GetCreationFlags() uint32 {
	if x != nil && x.CreationFlags != nil {
		return *x.CreationFlags
	}
	return Default_GameCreateParams_CreationFlags
}

func (x *GameCreateParams) GetPlatform() uint32 {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return 0
}

func (x *GameCreateParams) GetSnoSubzone() int32 {
	if x != nil && x.SnoSubzone != nil {
		return *x.SnoSubzone
	}
	return Default_GameCreateParams_SnoSubzone
}

func (x *GameCreateParams) GetSnoWorld() int32 {
	if x != nil && x.SnoWorld != nil {
		return *x.SnoWorld
	}
	return Default_GameCreateParams_SnoWorld
}

func (x *GameCreateParams) GetItempowerBracket() uint32 {
	if x != nil && x.ItempowerBracket != nil {
		return *x.ItempowerBracket
	}
	return 0
}

func (x *GameCreateParams) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GameCreateParams) GetPartitionType() uint32 {
	if x != nil && x.PartitionType != nil {
		return *x.PartitionType
	}
	return 0
}

func (x *GameCreateParams) GetServerPool() string {
	if x != nil && x.ServerPool != nil {
		return *x.ServerPool
	}
	return ""
}

func (x *GameCreateParams) GetCampaignState() *Hero.CampaignState {
	if x != nil {
		return x.CampaignState
	}
	return nil
}

func (x *GameCreateParams) GetPvpBucket() uint32 {
	if x != nil && x.PvpBucket != nil {
		return *x.PvpBucket
	}
	return 0
}

type PresharedKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modulus  []byte `protobuf:"bytes,1,opt,name=modulus" json:"modulus,omitempty"`
	Exponent []byte `protobuf:"bytes,2,opt,name=exponent" json:"exponent,omitempty"`
}

func (x *PresharedKey) Reset() {
	*x = PresharedKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Online_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresharedKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresharedKey) ProtoMessage() {}

func (x *PresharedKey) ProtoReflect() protoreflect.Message {
	mi := &file_Online_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresharedKey.ProtoReflect.Descriptor instead.
func (*PresharedKey) Descriptor() ([]byte, []int) {
	return file_Online_proto_rawDescGZIP(), []int{4}
}

func (x *PresharedKey) GetModulus() []byte {
	if x != nil {
		return x.Modulus
	}
	return nil
}

func (x *PresharedKey) GetExponent() []byte {
	if x != nil {
		return x.Exponent
	}
	return nil
}

type PingConnectionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address           *string                   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Port              *uint32                   `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	EncryptionInfo    *ConnectionEncryptionInfo `protobuf:"bytes,3,opt,name=encryption_info,json=encryptionInfo" json:"encryption_info,omitempty"`
	ServerPool        *string                   `protobuf:"bytes,4,opt,name=server_pool,json=serverPool" json:"server_pool,omitempty"`
	MaxSampleInterval *uint32                   `protobuf:"varint,5,opt,name=max_sample_interval,json=maxSampleInterval" json:"max_sample_interval,omitempty"`
	CaptureDuration   *uint32                   `protobuf:"varint,6,opt,name=capture_duration,json=captureDuration" json:"capture_duration,omitempty"`
	MinSamples        *uint32                   `protobuf:"varint,7,opt,name=min_samples,json=minSamples" json:"min_samples,omitempty"`
	MaxSamples        *uint32                   `protobuf:"varint,8,opt,name=max_samples,json=maxSamples" json:"max_samples,omitempty"`
}

func (x *PingConnectionInfo) Reset() {
	*x = PingConnectionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Online_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingConnectionInfo) ProtoMessage() {}

func (x *PingConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Online_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingConnectionInfo.ProtoReflect.Descriptor instead.
func (*PingConnectionInfo) Descriptor() ([]byte, []int) {
	return file_Online_proto_rawDescGZIP(), []int{5}
}

func (x *PingConnectionInfo) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *PingConnectionInfo) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *PingConnectionInfo) GetEncryptionInfo() *ConnectionEncryptionInfo {
	if x != nil {
		return x.EncryptionInfo
	}
	return nil
}

func (x *PingConnectionInfo) GetServerPool() string {
	if x != nil && x.ServerPool != nil {
		return *x.ServerPool
	}
	return ""
}

func (x *PingConnectionInfo) GetMaxSampleInterval() uint32 {
	if x != nil && x.MaxSampleInterval != nil {
		return *x.MaxSampleInterval
	}
	return 0
}

func (x *PingConnectionInfo) GetCaptureDuration() uint32 {
	if x != nil && x.CaptureDuration != nil {
		return *x.CaptureDuration
	}
	return 0
}

func (x *PingConnectionInfo) GetMinSamples() uint32 {
	if x != nil && x.MinSamples != nil {
		return *x.MinSamples
	}
	return 0
}

func (x *PingConnectionInfo) GetMaxSamples() uint32 {
	if x != nil && x.MaxSamples != nil {
		return *x.MaxSamples
	}
	return 0
}

type ConnectionEncryptionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresharedKey         *PresharedKey `protobuf:"bytes,1,opt,name=preshared_key,json=presharedKey" json:"preshared_key,omitempty"`
	Token                *uint64       `protobuf:"varint,2,opt,name=token" json:"token,omitempty"`
	DeprecatedCommonName *string       `protobuf:"bytes,6,opt,name=deprecated_common_name,json=deprecatedCommonName" json:"deprecated_common_name,omitempty"`
}

func (x *ConnectionEncryptionInfo) Reset() {
	*x = ConnectionEncryptionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Online_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionEncryptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionEncryptionInfo) ProtoMessage() {}

func (x *ConnectionEncryptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Online_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionEncryptionInfo.ProtoReflect.Descriptor instead.
func (*ConnectionEncryptionInfo) Descriptor() ([]byte, []int) {
	return file_Online_proto_rawDescGZIP(), []int{6}
}

func (x *ConnectionEncryptionInfo) GetPresharedKey() *PresharedKey {
	if x != nil {
		return x.PresharedKey
	}
	return nil
}

func (x *ConnectionEncryptionInfo) GetToken() uint64 {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return 0
}

func (x *ConnectionEncryptionInfo) GetDeprecatedCommonName() string {
	if x != nil && x.DeprecatedCommonName != nil {
		return *x.DeprecatedCommonName
	}
	return ""
}

type ConnectionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameHandle          *GameHandle              `protobuf:"bytes,1,opt,name=game_handle,json=gameHandle" json:"game_handle,omitempty"`
	GameId              *uint32                  `protobuf:"fixed32,2,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	GameParams          *GameCreateParams        `protobuf:"bytes,3,opt,name=game_params,json=gameParams" json:"game_params,omitempty"`
	Address             *string                  `protobuf:"bytes,4,opt,name=address" json:"address,omitempty"`
	Port                *uint32                  `protobuf:"varint,5,opt,name=port" json:"port,omitempty"`
	ServiceMessageQueue *string                  `protobuf:"bytes,8,opt,name=service_message_queue,json=serviceMessageQueue" json:"service_message_queue,omitempty"`
	Player              []*ConnectionInfo_Player `protobuf:"bytes,9,rep,name=player" json:"player,omitempty"`
	Trace               *Trace                   `protobuf:"bytes,10,opt,name=trace" json:"trace,omitempty"`
}

func (x *ConnectionInfo) Reset() {
	*x = ConnectionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Online_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionInfo) ProtoMessage() {}

func (x *ConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Online_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionInfo.ProtoReflect.Descriptor instead.
func (*ConnectionInfo) Descriptor() ([]byte, []int) {
	return file_Online_proto_rawDescGZIP(), []int{7}
}

func (x *ConnectionInfo) GetGameHandle() *GameHandle {
	if x != nil {
		return x.GameHandle
	}
	return nil
}

func (x *ConnectionInfo) GetGameId() uint32 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *ConnectionInfo) GetGameParams() *GameCreateParams {
	if x != nil {
		return x.GameParams
	}
	return nil
}

func (x *ConnectionInfo) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *ConnectionInfo) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *ConnectionInfo) GetServiceMessageQueue() string {
	if x != nil && x.ServiceMessageQueue != nil {
		return *x.ServiceMessageQueue
	}
	return ""
}

func (x *ConnectionInfo) GetPlayer() []*ConnectionInfo_Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *ConnectionInfo) GetTrace() *Trace {
	if x != nil {
		return x.Trace
	}
	return nil
}

type Trace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	SpanId        *string `protobuf:"bytes,2,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
	GameAccountId *uint32 `protobuf:"varint,3,opt,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
	Name          *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	IsTracked     *bool   `protobuf:"varint,5,opt,name=is_tracked,json=isTracked,def=0" json:"is_tracked,omitempty"`
}

// Default values for Trace fields.
const (
	Default_Trace_IsTracked = bool(false)
)

func (x *Trace) Reset() {
	*x = Trace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Online_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trace) ProtoMessage() {}

func (x *Trace) ProtoReflect() protoreflect.Message {
	mi := &file_Online_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trace.ProtoReflect.Descriptor instead.
func (*Trace) Descriptor() ([]byte, []int) {
	return file_Online_proto_rawDescGZIP(), []int{8}
}

func (x *Trace) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Trace) GetSpanId() string {
	if x != nil && x.SpanId != nil {
		return *x.SpanId
	}
	return ""
}

func (x *Trace) GetGameAccountId() uint32 {
	if x != nil && x.GameAccountId != nil {
		return *x.GameAccountId
	}
	return 0
}

func (x *Trace) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Trace) GetIsTracked() bool {
	if x != nil && x.IsTracked != nil {
		return *x.IsTracked
	}
	return Default_Trace_IsTracked
}

type TraceMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trace *Trace `protobuf:"bytes,1,opt,name=trace" json:"trace,omitempty"`
}

func (x *TraceMessage) Reset() {
	*x = TraceMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Online_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceMessage) ProtoMessage() {}

func (x *TraceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Online_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceMessage.ProtoReflect.Descriptor instead.
func (*TraceMessage) Descriptor() ([]byte, []int) {
	return file_Online_proto_rawDescGZIP(), []int{9}
}

func (x *TraceMessage) GetTrace() *Trace {
	if x != nil {
		return x.Trace
	}
	return nil
}

type ConnectionInfo_Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BnetAccountId  *uint32                   `protobuf:"varint,1,opt,name=bnet_account_id,json=bnetAccountId" json:"bnet_account_id,omitempty"`
	GameAccountId  *uint32                   `protobuf:"varint,2,opt,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
	AuthToken      *uint64                   `protobuf:"fixed64,3,opt,name=auth_token,json=authToken" json:"auth_token,omitempty"`
	EncryptionInfo *ConnectionEncryptionInfo `protobuf:"bytes,4,opt,name=encryption_info,json=encryptionInfo" json:"encryption_info,omitempty"`
	TeamId         *uint32                   `protobuf:"varint,5,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (x *ConnectionInfo_Player) Reset() {
	*x = ConnectionInfo_Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Online_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionInfo_Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionInfo_Player) ProtoMessage() {}

func (x *ConnectionInfo_Player) ProtoReflect() protoreflect.Message {
	mi := &file_Online_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionInfo_Player.ProtoReflect.Descriptor instead.
func (*ConnectionInfo_Player) Descriptor() ([]byte, []int) {
	return file_Online_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ConnectionInfo_Player) GetBnetAccountId() uint32 {
	if x != nil && x.BnetAccountId != nil {
		return *x.BnetAccountId
	}
	return 0
}

func (x *ConnectionInfo_Player) GetGameAccountId() uint32 {
	if x != nil && x.GameAccountId != nil {
		return *x.GameAccountId
	}
	return 0
}

func (x *ConnectionInfo_Player) GetAuthToken() uint64 {
	if x != nil && x.AuthToken != nil {
		return *x.AuthToken
	}
	return 0
}

func (x *ConnectionInfo_Player) GetEncryptionInfo() *ConnectionEncryptionInfo {
	if x != nil {
		return x.EncryptionInfo
	}
	return nil
}

func (x *ConnectionInfo_Player) GetTeamId() uint32 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

var File_Online_proto protoreflect.FileDescriptor

var file_Online_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x46, 0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x10, 0x48,
	0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x12, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x58, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x6f, 0x6f, 0x6c, 0x22, 0x5d, 0x0a,
	0x0d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x31,
	0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x46, 0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x0a,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x2b, 0x0a, 0x11, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x63, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa6, 0x03, 0x0a,
	0x10, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x11, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0b, 0x73, 0x6e, 0x6f, 0x5f, 0x73, 0x75, 0x62, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0a, 0x73,
	0x6e, 0x6f, 0x53, 0x75, 0x62, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x09, 0x73, 0x6e, 0x6f,
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x3a, 0x02, 0x2d, 0x31,
	0x52, 0x08, 0x73, 0x6e, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x6f,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x6f, 0x6f, 0x6c, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x46, 0x65,
	0x6e, 0x72, 0x69, 0x73, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x76, 0x70, 0x5f, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x76, 0x70, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x44, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x75, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0xd2, 0x02, 0x0a, 0x12,
	0x50, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x50, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x46, 0x65, 0x6e, 0x72,
	0x69, 0x73, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x6f,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x6f, 0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x6d, 0x61, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63,
	0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x22, 0xa8, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a,
	0x0d, 0x70, 0x72, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x46, 0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65,
	0x79, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd8, 0x04, 0x0a, 0x0e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a,
	0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x46, 0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x46, 0x65, 0x6e, 0x72, 0x69,
	0x73, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x46, 0x65, 0x6e, 0x72, 0x69, 0x73,
	0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x46, 0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x1a, 0xe2, 0x01, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f,
	0x62, 0x6e, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x6e, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x67,
	0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x50, 0x0a, 0x0f, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x46, 0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x70, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x09, 0x69, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x22, 0x3a, 0x0a, 0x0c, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x46, 0x65, 0x6e,
	0x72, 0x69, 0x73, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6a, 0x62, 0x72, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f,
	0x64, 0x34, 0x2d, 0x62, 0x6e, 0x65, 0x74, 0x2d, 0x6d, 0x69, 0x74, 0x6d, 0x2f, 0x62, 0x6e, 0x65,
	0x74, 0x2f, 0x46, 0x65, 0x6e, 0x72, 0x69, 0x73, 0x2f, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
}

var (
	file_Online_proto_rawDescOnce sync.Once
	file_Online_proto_rawDescData = file_Online_proto_rawDesc
)

func file_Online_proto_rawDescGZIP() []byte {
	file_Online_proto_rawDescOnce.Do(func() {
		file_Online_proto_rawDescData = protoimpl.X.CompressGZIP(file_Online_proto_rawDescData)
	})
	return file_Online_proto_rawDescData
}

var file_Online_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_Online_proto_goTypes = []interface{}{
	(*QueueId)(nil),                  // 0: Fenris.Online.QueueId
	(*QueueEntryKey)(nil),            // 1: Fenris.Online.QueueEntryKey
	(*QueueEntry)(nil),               // 2: Fenris.Online.QueueEntry
	(*GameCreateParams)(nil),         // 3: Fenris.Online.GameCreateParams
	(*PresharedKey)(nil),             // 4: Fenris.Online.PresharedKey
	(*PingConnectionInfo)(nil),       // 5: Fenris.Online.PingConnectionInfo
	(*ConnectionEncryptionInfo)(nil), // 6: Fenris.Online.ConnectionEncryptionInfo
	(*ConnectionInfo)(nil),           // 7: Fenris.Online.ConnectionInfo
	(*Trace)(nil),                    // 8: Fenris.Online.Trace
	(*TraceMessage)(nil),             // 9: Fenris.Online.TraceMessage
	(*ConnectionInfo_Player)(nil),    // 10: Fenris.Online.ConnectionInfo.Player
	(*Hero.CampaignState)(nil),       // 11: Fenris.Hero.CampaignState
	(*GameHandle)(nil),               // 12: Fenris.Online.GameHandle
}
var file_Online_proto_depIdxs = []int32{
	0,  // 0: Fenris.Online.QueueEntryKey.queue_id:type_name -> Fenris.Online.QueueId
	11, // 1: Fenris.Online.GameCreateParams.campaign_state:type_name -> Fenris.Hero.CampaignState
	6,  // 2: Fenris.Online.PingConnectionInfo.encryption_info:type_name -> Fenris.Online.ConnectionEncryptionInfo
	4,  // 3: Fenris.Online.ConnectionEncryptionInfo.preshared_key:type_name -> Fenris.Online.PresharedKey
	12, // 4: Fenris.Online.ConnectionInfo.game_handle:type_name -> Fenris.Online.GameHandle
	3,  // 5: Fenris.Online.ConnectionInfo.game_params:type_name -> Fenris.Online.GameCreateParams
	10, // 6: Fenris.Online.ConnectionInfo.player:type_name -> Fenris.Online.ConnectionInfo.Player
	8,  // 7: Fenris.Online.ConnectionInfo.trace:type_name -> Fenris.Online.Trace
	8,  // 8: Fenris.Online.TraceMessage.trace:type_name -> Fenris.Online.Trace
	6,  // 9: Fenris.Online.ConnectionInfo.Player.encryption_info:type_name -> Fenris.Online.ConnectionEncryptionInfo
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_Online_proto_init() }
func file_Online_proto_init() {
	if File_Online_proto != nil {
		return
	}
	file_OnlineCommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Online_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Online_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueEntryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Online_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Online_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCreateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Online_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresharedKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Online_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingConnectionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Online_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionEncryptionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Online_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Online_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Online_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Online_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionInfo_Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Online_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Online_proto_goTypes,
		DependencyIndexes: file_Online_proto_depIdxs,
		MessageInfos:      file_Online_proto_msgTypes,
	}.Build()
	File_Online_proto = out.File
	file_Online_proto_rawDesc = nil
	file_Online_proto_goTypes = nil
	file_Online_proto_depIdxs = nil
}
