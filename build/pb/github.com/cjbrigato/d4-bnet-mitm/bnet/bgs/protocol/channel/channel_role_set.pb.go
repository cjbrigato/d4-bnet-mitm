// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: bgs/low/pb/client/channel_role_set.proto

package channel

import (
	protocol "github.com/cjbrigato/d4-bnet-mitm/bnet/bgs/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChannelPrivilegeSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanInvite                  *bool `protobuf:"varint,1,opt,name=can_invite,json=canInvite" json:"can_invite,omitempty"`
	CanInviteWithReservation   *bool `protobuf:"varint,2,opt,name=can_invite_with_reservation,json=canInviteWithReservation" json:"can_invite_with_reservation,omitempty"`
	CanRevokeOtherInvitation   *bool `protobuf:"varint,3,opt,name=can_revoke_other_invitation,json=canRevokeOtherInvitation" json:"can_revoke_other_invitation,omitempty"`
	CanRevokeOwnInvitation     *bool `protobuf:"varint,4,opt,name=can_revoke_own_invitation,json=canRevokeOwnInvitation" json:"can_revoke_own_invitation,omitempty"`
	CanKick                    *bool `protobuf:"varint,5,opt,name=can_kick,json=canKick" json:"can_kick,omitempty"`
	CanDissolve                *bool `protobuf:"varint,6,opt,name=can_dissolve,json=canDissolve" json:"can_dissolve,omitempty"`
	CanSetPrivacy              *bool `protobuf:"varint,7,opt,name=can_set_privacy,json=canSetPrivacy" json:"can_set_privacy,omitempty"`
	CanSendMessage             *bool `protobuf:"varint,8,opt,name=can_send_message,json=canSendMessage" json:"can_send_message,omitempty"`
	CanReceiveMessage          *bool `protobuf:"varint,9,opt,name=can_receive_message,json=canReceiveMessage" json:"can_receive_message,omitempty"`
	CanSetAttribute            *bool `protobuf:"varint,10,opt,name=can_set_attribute,json=canSetAttribute" json:"can_set_attribute,omitempty"`
	CanSetOtherMemberAttribute *bool `protobuf:"varint,11,opt,name=can_set_other_member_attribute,json=canSetOtherMemberAttribute" json:"can_set_other_member_attribute,omitempty"`
	CanSetOwnMemberAttribute   *bool `protobuf:"varint,12,opt,name=can_set_own_member_attribute,json=canSetOwnMemberAttribute" json:"can_set_own_member_attribute,omitempty"`
	CanEnterGame               *bool `protobuf:"varint,13,opt,name=can_enter_game,json=canEnterGame" json:"can_enter_game,omitempty"`
	CanSuggest                 *bool `protobuf:"varint,14,opt,name=can_suggest,json=canSuggest" json:"can_suggest,omitempty"`
	CanApprove                 *bool `protobuf:"varint,15,opt,name=can_approve,json=canApprove" json:"can_approve,omitempty"`
}

func (x *ChannelPrivilegeSet) Reset() {
	*x = ChannelPrivilegeSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_channel_role_set_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelPrivilegeSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelPrivilegeSet) ProtoMessage() {}

func (x *ChannelPrivilegeSet) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_channel_role_set_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelPrivilegeSet.ProtoReflect.Descriptor instead.
func (*ChannelPrivilegeSet) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_channel_role_set_proto_rawDescGZIP(), []int{0}
}

func (x *ChannelPrivilegeSet) GetCanInvite() bool {
	if x != nil && x.CanInvite != nil {
		return *x.CanInvite
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanInviteWithReservation() bool {
	if x != nil && x.CanInviteWithReservation != nil {
		return *x.CanInviteWithReservation
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanRevokeOtherInvitation() bool {
	if x != nil && x.CanRevokeOtherInvitation != nil {
		return *x.CanRevokeOtherInvitation
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanRevokeOwnInvitation() bool {
	if x != nil && x.CanRevokeOwnInvitation != nil {
		return *x.CanRevokeOwnInvitation
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanKick() bool {
	if x != nil && x.CanKick != nil {
		return *x.CanKick
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanDissolve() bool {
	if x != nil && x.CanDissolve != nil {
		return *x.CanDissolve
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanSetPrivacy() bool {
	if x != nil && x.CanSetPrivacy != nil {
		return *x.CanSetPrivacy
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanSendMessage() bool {
	if x != nil && x.CanSendMessage != nil {
		return *x.CanSendMessage
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanReceiveMessage() bool {
	if x != nil && x.CanReceiveMessage != nil {
		return *x.CanReceiveMessage
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanSetAttribute() bool {
	if x != nil && x.CanSetAttribute != nil {
		return *x.CanSetAttribute
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanSetOtherMemberAttribute() bool {
	if x != nil && x.CanSetOtherMemberAttribute != nil {
		return *x.CanSetOtherMemberAttribute
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanSetOwnMemberAttribute() bool {
	if x != nil && x.CanSetOwnMemberAttribute != nil {
		return *x.CanSetOwnMemberAttribute
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanEnterGame() bool {
	if x != nil && x.CanEnterGame != nil {
		return *x.CanEnterGame
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanSuggest() bool {
	if x != nil && x.CanSuggest != nil {
		return *x.CanSuggest
	}
	return false
}

func (x *ChannelPrivilegeSet) GetCanApprove() bool {
	if x != nil && x.CanApprove != nil {
		return *x.CanApprove
	}
	return false
}

type ChannelRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *uint32              `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	State     *protocol.RoleState  `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	Privilege *ChannelPrivilegeSet `protobuf:"bytes,3,opt,name=privilege" json:"privilege,omitempty"`
}

func (x *ChannelRole) Reset() {
	*x = ChannelRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_channel_role_set_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelRole) ProtoMessage() {}

func (x *ChannelRole) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_channel_role_set_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelRole.ProtoReflect.Descriptor instead.
func (*ChannelRole) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_channel_role_set_proto_rawDescGZIP(), []int{1}
}

func (x *ChannelRole) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ChannelRole) GetState() *protocol.RoleState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *ChannelRole) GetPrivilege() *ChannelPrivilegeSet {
	if x != nil {
		return x.Privilege
	}
	return nil
}

type ChannelRoleSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role        []*ChannelRole `protobuf:"bytes,1,rep,name=role" json:"role,omitempty"`
	DefaultRole []uint32       `protobuf:"varint,2,rep,name=default_role,json=defaultRole" json:"default_role,omitempty"`
	Name        *string        `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (x *ChannelRoleSet) Reset() {
	*x = ChannelRoleSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_channel_role_set_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelRoleSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelRoleSet) ProtoMessage() {}

func (x *ChannelRoleSet) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_channel_role_set_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelRoleSet.ProtoReflect.Descriptor instead.
func (*ChannelRoleSet) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_channel_role_set_proto_rawDescGZIP(), []int{2}
}

func (x *ChannelRoleSet) GetRole() []*ChannelRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *ChannelRoleSet) GetDefaultRole() []uint32 {
	if x != nil {
		return x.DefaultRole
	}
	return nil
}

func (x *ChannelRoleSet) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

var File_bgs_low_pb_client_channel_role_set_proto protoreflect.FileDescriptor

var file_bgs_low_pb_client_channel_role_set_proto_rawDesc = []byte{
	0x0a, 0x28, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x1a, 0x22, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x05, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x63, 0x61, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x63,
	0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x18, 0x63, 0x61, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x1b, 0x63, 0x61,
	0x6e, 0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x18, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x61, 0x6e,
	0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x63, 0x61,
	0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x77, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x6b, 0x69, 0x63, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x4b, 0x69, 0x63, 0x6b, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x44, 0x69, 0x73, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e,
	0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61,
	0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x12, 0x42, 0x0a, 0x1e, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1c, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x6f, 0x77, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x63, 0x61, 0x6e, 0x53,
	0x65, 0x74, 0x4f, 0x77, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61,
	0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x6e, 0x5f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x63, 0x61, 0x6e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x63, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x22, 0x95, 0x01, 0x0a,
	0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x70,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x53, 0x65, 0x74, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x22, 0x7e, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x6f, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6a, 0x62, 0x72, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x64, 0x34, 0x2d,
	0x62, 0x6e, 0x65, 0x74, 0x2d, 0x6d, 0x69, 0x74, 0x6d, 0x2f, 0x62, 0x6e, 0x65, 0x74, 0x2f, 0x62,
	0x67, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c,
}

var (
	file_bgs_low_pb_client_channel_role_set_proto_rawDescOnce sync.Once
	file_bgs_low_pb_client_channel_role_set_proto_rawDescData = file_bgs_low_pb_client_channel_role_set_proto_rawDesc
)

func file_bgs_low_pb_client_channel_role_set_proto_rawDescGZIP() []byte {
	file_bgs_low_pb_client_channel_role_set_proto_rawDescOnce.Do(func() {
		file_bgs_low_pb_client_channel_role_set_proto_rawDescData = protoimpl.X.CompressGZIP(file_bgs_low_pb_client_channel_role_set_proto_rawDescData)
	})
	return file_bgs_low_pb_client_channel_role_set_proto_rawDescData
}

var file_bgs_low_pb_client_channel_role_set_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_bgs_low_pb_client_channel_role_set_proto_goTypes = []interface{}{
	(*ChannelPrivilegeSet)(nil), // 0: bgs.protocol.channel.ChannelPrivilegeSet
	(*ChannelRole)(nil),         // 1: bgs.protocol.channel.ChannelRole
	(*ChannelRoleSet)(nil),      // 2: bgs.protocol.channel.ChannelRoleSet
	(*protocol.RoleState)(nil),  // 3: bgs.protocol.RoleState
}
var file_bgs_low_pb_client_channel_role_set_proto_depIdxs = []int32{
	3, // 0: bgs.protocol.channel.ChannelRole.state:type_name -> bgs.protocol.RoleState
	0, // 1: bgs.protocol.channel.ChannelRole.privilege:type_name -> bgs.protocol.channel.ChannelPrivilegeSet
	1, // 2: bgs.protocol.channel.ChannelRoleSet.role:type_name -> bgs.protocol.channel.ChannelRole
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_bgs_low_pb_client_channel_role_set_proto_init() }
func file_bgs_low_pb_client_channel_role_set_proto_init() {
	if File_bgs_low_pb_client_channel_role_set_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bgs_low_pb_client_channel_role_set_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelPrivilegeSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_channel_role_set_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_channel_role_set_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelRoleSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bgs_low_pb_client_channel_role_set_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bgs_low_pb_client_channel_role_set_proto_goTypes,
		DependencyIndexes: file_bgs_low_pb_client_channel_role_set_proto_depIdxs,
		MessageInfos:      file_bgs_low_pb_client_channel_role_set_proto_msgTypes,
	}.Build()
	File_bgs_low_pb_client_channel_role_set_proto = out.File
	file_bgs_low_pb_client_channel_role_set_proto_rawDesc = nil
	file_bgs_low_pb_client_channel_role_set_proto_goTypes = nil
	file_bgs_low_pb_client_channel_role_set_proto_depIdxs = nil
}
