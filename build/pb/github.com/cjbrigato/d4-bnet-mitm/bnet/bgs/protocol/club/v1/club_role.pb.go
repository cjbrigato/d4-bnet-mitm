// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: bgs/low/pb/client/club_role.proto

package v1

import (
	protocol "github.com/cjbrigato/d4-bnet-mitm/bnet/bgs/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClubPrivilegeSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanDestroy                 *bool `protobuf:"varint,1,opt,name=can_destroy,json=canDestroy" json:"can_destroy,omitempty"`
	CanSetAttribute            *bool `protobuf:"varint,10,opt,name=can_set_attribute,json=canSetAttribute" json:"can_set_attribute,omitempty"`
	CanSetName                 *bool `protobuf:"varint,11,opt,name=can_set_name,json=canSetName" json:"can_set_name,omitempty"`
	CanSetDescription          *bool `protobuf:"varint,12,opt,name=can_set_description,json=canSetDescription" json:"can_set_description,omitempty"`
	CanSetAvatar               *bool `protobuf:"varint,13,opt,name=can_set_avatar,json=canSetAvatar" json:"can_set_avatar,omitempty"`
	CanSetBroadcast            *bool `protobuf:"varint,14,opt,name=can_set_broadcast,json=canSetBroadcast" json:"can_set_broadcast,omitempty"`
	CanSetPrivacyLevel         *bool `protobuf:"varint,15,opt,name=can_set_privacy_level,json=canSetPrivacyLevel" json:"can_set_privacy_level,omitempty"`
	CanAddMember               *bool `protobuf:"varint,29,opt,name=can_add_member,json=canAddMember" json:"can_add_member,omitempty"`
	CanKickMember              *bool `protobuf:"varint,30,opt,name=can_kick_member,json=canKickMember" json:"can_kick_member,omitempty"`
	CanSetOwnMemberAttribute   *bool `protobuf:"varint,31,opt,name=can_set_own_member_attribute,json=canSetOwnMemberAttribute" json:"can_set_own_member_attribute,omitempty"`
	CanSetOtherMemberAttribute *bool `protobuf:"varint,32,opt,name=can_set_other_member_attribute,json=canSetOtherMemberAttribute" json:"can_set_other_member_attribute,omitempty"`
	CanSetOwnVoiceState        *bool `protobuf:"varint,33,opt,name=can_set_own_voice_state,json=canSetOwnVoiceState" json:"can_set_own_voice_state,omitempty"`
	CanSetOwnPresenceLevel     *bool `protobuf:"varint,34,opt,name=can_set_own_presence_level,json=canSetOwnPresenceLevel" json:"can_set_own_presence_level,omitempty"`
	CanSetOwnWhisperLevel      *bool `protobuf:"varint,35,opt,name=can_set_own_whisper_level,json=canSetOwnWhisperLevel" json:"can_set_own_whisper_level,omitempty"`
	CanSetOwnMemberNote        *bool `protobuf:"varint,36,opt,name=can_set_own_member_note,json=canSetOwnMemberNote" json:"can_set_own_member_note,omitempty"`
	CanSetOtherMemberNote      *bool `protobuf:"varint,37,opt,name=can_set_other_member_note,json=canSetOtherMemberNote" json:"can_set_other_member_note,omitempty"`
	CanUseVoice                *bool `protobuf:"varint,50,opt,name=can_use_voice,json=canUseVoice" json:"can_use_voice,omitempty"`
	CanVoiceMuteMemberForAll   *bool `protobuf:"varint,51,opt,name=can_voice_mute_member_for_all,json=canVoiceMuteMemberForAll" json:"can_voice_mute_member_for_all,omitempty"`
	CanGetInvitation           *bool `protobuf:"varint,70,opt,name=can_get_invitation,json=canGetInvitation" json:"can_get_invitation,omitempty"`
	CanSendInvitation          *bool `protobuf:"varint,71,opt,name=can_send_invitation,json=canSendInvitation" json:"can_send_invitation,omitempty"`
	CanSendGuestInvitation     *bool `protobuf:"varint,72,opt,name=can_send_guest_invitation,json=canSendGuestInvitation" json:"can_send_guest_invitation,omitempty"`
	CanRevokeOwnInvitation     *bool `protobuf:"varint,73,opt,name=can_revoke_own_invitation,json=canRevokeOwnInvitation" json:"can_revoke_own_invitation,omitempty"`
	CanRevokeOtherInvitation   *bool `protobuf:"varint,74,opt,name=can_revoke_other_invitation,json=canRevokeOtherInvitation" json:"can_revoke_other_invitation,omitempty"`
	CanGetSuggestion           *bool `protobuf:"varint,90,opt,name=can_get_suggestion,json=canGetSuggestion" json:"can_get_suggestion,omitempty"`
	CanSuggestMember           *bool `protobuf:"varint,91,opt,name=can_suggest_member,json=canSuggestMember" json:"can_suggest_member,omitempty"`
	CanApproveMember           *bool `protobuf:"varint,92,opt,name=can_approve_member,json=canApproveMember" json:"can_approve_member,omitempty"`
	CanGetTicket               *bool `protobuf:"varint,110,opt,name=can_get_ticket,json=canGetTicket" json:"can_get_ticket,omitempty"`
	CanCreateTicket            *bool `protobuf:"varint,111,opt,name=can_create_ticket,json=canCreateTicket" json:"can_create_ticket,omitempty"`
	CanDestroyTicket           *bool `protobuf:"varint,112,opt,name=can_destroy_ticket,json=canDestroyTicket" json:"can_destroy_ticket,omitempty"`
	CanGetBan                  *bool `protobuf:"varint,130,opt,name=can_get_ban,json=canGetBan" json:"can_get_ban,omitempty"`
	CanAddBan                  *bool `protobuf:"varint,131,opt,name=can_add_ban,json=canAddBan" json:"can_add_ban,omitempty"`
	CanRemoveBan               *bool `protobuf:"varint,132,opt,name=can_remove_ban,json=canRemoveBan" json:"can_remove_ban,omitempty"`
	CanCreateStream            *bool `protobuf:"varint,140,opt,name=can_create_stream,json=canCreateStream" json:"can_create_stream,omitempty"`
	CanDestroyStream           *bool `protobuf:"varint,141,opt,name=can_destroy_stream,json=canDestroyStream" json:"can_destroy_stream,omitempty"`
	CanSetStreamPosition       *bool `protobuf:"varint,142,opt,name=can_set_stream_position,json=canSetStreamPosition" json:"can_set_stream_position,omitempty"`
	CanSetStreamAttribute      *bool `protobuf:"varint,143,opt,name=can_set_stream_attribute,json=canSetStreamAttribute" json:"can_set_stream_attribute,omitempty"`
	CanSetStreamName           *bool `protobuf:"varint,144,opt,name=can_set_stream_name,json=canSetStreamName" json:"can_set_stream_name,omitempty"`
	CanSetStreamSubject        *bool `protobuf:"varint,145,opt,name=can_set_stream_subject,json=canSetStreamSubject" json:"can_set_stream_subject,omitempty"`
	CanSetStreamAccess         *bool `protobuf:"varint,146,opt,name=can_set_stream_access,json=canSetStreamAccess" json:"can_set_stream_access,omitempty"`
	CanSetStreamVoiceLevel     *bool `protobuf:"varint,147,opt,name=can_set_stream_voice_level,json=canSetStreamVoiceLevel" json:"can_set_stream_voice_level,omitempty"`
	CanCreateMessage           *bool `protobuf:"varint,180,opt,name=can_create_message,json=canCreateMessage" json:"can_create_message,omitempty"`
	CanDestroyOwnMessage       *bool `protobuf:"varint,181,opt,name=can_destroy_own_message,json=canDestroyOwnMessage" json:"can_destroy_own_message,omitempty"`
	CanDestroyOtherMessage     *bool `protobuf:"varint,182,opt,name=can_destroy_other_message,json=canDestroyOtherMessage" json:"can_destroy_other_message,omitempty"`
	CanEditOwnMessage          *bool `protobuf:"varint,183,opt,name=can_edit_own_message,json=canEditOwnMessage" json:"can_edit_own_message,omitempty"`
	CanPinMessage              *bool `protobuf:"varint,184,opt,name=can_pin_message,json=canPinMessage" json:"can_pin_message,omitempty"`
	CanMentionAll              *bool `protobuf:"varint,185,opt,name=can_mention_all,json=canMentionAll" json:"can_mention_all,omitempty"`
	CanMentionHere             *bool `protobuf:"varint,186,opt,name=can_mention_here,json=canMentionHere" json:"can_mention_here,omitempty"`
	CanMentionMember           *bool `protobuf:"varint,187,opt,name=can_mention_member,json=canMentionMember" json:"can_mention_member,omitempty"`
	CanMentionRole             *bool `protobuf:"varint,188,opt,name=can_mention_role,json=canMentionRole" json:"can_mention_role,omitempty"`
}

func (x *ClubPrivilegeSet) Reset() {
	*x = ClubPrivilegeSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_role_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubPrivilegeSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubPrivilegeSet) ProtoMessage() {}

func (x *ClubPrivilegeSet) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_role_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubPrivilegeSet.ProtoReflect.Descriptor instead.
func (*ClubPrivilegeSet) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_role_proto_rawDescGZIP(), []int{0}
}

func (x *ClubPrivilegeSet) GetCanDestroy() bool {
	if x != nil && x.CanDestroy != nil {
		return *x.CanDestroy
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetAttribute() bool {
	if x != nil && x.CanSetAttribute != nil {
		return *x.CanSetAttribute
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetName() bool {
	if x != nil && x.CanSetName != nil {
		return *x.CanSetName
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetDescription() bool {
	if x != nil && x.CanSetDescription != nil {
		return *x.CanSetDescription
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetAvatar() bool {
	if x != nil && x.CanSetAvatar != nil {
		return *x.CanSetAvatar
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetBroadcast() bool {
	if x != nil && x.CanSetBroadcast != nil {
		return *x.CanSetBroadcast
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetPrivacyLevel() bool {
	if x != nil && x.CanSetPrivacyLevel != nil {
		return *x.CanSetPrivacyLevel
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanAddMember() bool {
	if x != nil && x.CanAddMember != nil {
		return *x.CanAddMember
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanKickMember() bool {
	if x != nil && x.CanKickMember != nil {
		return *x.CanKickMember
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetOwnMemberAttribute() bool {
	if x != nil && x.CanSetOwnMemberAttribute != nil {
		return *x.CanSetOwnMemberAttribute
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetOtherMemberAttribute() bool {
	if x != nil && x.CanSetOtherMemberAttribute != nil {
		return *x.CanSetOtherMemberAttribute
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetOwnVoiceState() bool {
	if x != nil && x.CanSetOwnVoiceState != nil {
		return *x.CanSetOwnVoiceState
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetOwnPresenceLevel() bool {
	if x != nil && x.CanSetOwnPresenceLevel != nil {
		return *x.CanSetOwnPresenceLevel
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetOwnWhisperLevel() bool {
	if x != nil && x.CanSetOwnWhisperLevel != nil {
		return *x.CanSetOwnWhisperLevel
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetOwnMemberNote() bool {
	if x != nil && x.CanSetOwnMemberNote != nil {
		return *x.CanSetOwnMemberNote
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetOtherMemberNote() bool {
	if x != nil && x.CanSetOtherMemberNote != nil {
		return *x.CanSetOtherMemberNote
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanUseVoice() bool {
	if x != nil && x.CanUseVoice != nil {
		return *x.CanUseVoice
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanVoiceMuteMemberForAll() bool {
	if x != nil && x.CanVoiceMuteMemberForAll != nil {
		return *x.CanVoiceMuteMemberForAll
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanGetInvitation() bool {
	if x != nil && x.CanGetInvitation != nil {
		return *x.CanGetInvitation
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSendInvitation() bool {
	if x != nil && x.CanSendInvitation != nil {
		return *x.CanSendInvitation
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSendGuestInvitation() bool {
	if x != nil && x.CanSendGuestInvitation != nil {
		return *x.CanSendGuestInvitation
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanRevokeOwnInvitation() bool {
	if x != nil && x.CanRevokeOwnInvitation != nil {
		return *x.CanRevokeOwnInvitation
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanRevokeOtherInvitation() bool {
	if x != nil && x.CanRevokeOtherInvitation != nil {
		return *x.CanRevokeOtherInvitation
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanGetSuggestion() bool {
	if x != nil && x.CanGetSuggestion != nil {
		return *x.CanGetSuggestion
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSuggestMember() bool {
	if x != nil && x.CanSuggestMember != nil {
		return *x.CanSuggestMember
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanApproveMember() bool {
	if x != nil && x.CanApproveMember != nil {
		return *x.CanApproveMember
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanGetTicket() bool {
	if x != nil && x.CanGetTicket != nil {
		return *x.CanGetTicket
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanCreateTicket() bool {
	if x != nil && x.CanCreateTicket != nil {
		return *x.CanCreateTicket
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanDestroyTicket() bool {
	if x != nil && x.CanDestroyTicket != nil {
		return *x.CanDestroyTicket
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanGetBan() bool {
	if x != nil && x.CanGetBan != nil {
		return *x.CanGetBan
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanAddBan() bool {
	if x != nil && x.CanAddBan != nil {
		return *x.CanAddBan
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanRemoveBan() bool {
	if x != nil && x.CanRemoveBan != nil {
		return *x.CanRemoveBan
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanCreateStream() bool {
	if x != nil && x.CanCreateStream != nil {
		return *x.CanCreateStream
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanDestroyStream() bool {
	if x != nil && x.CanDestroyStream != nil {
		return *x.CanDestroyStream
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetStreamPosition() bool {
	if x != nil && x.CanSetStreamPosition != nil {
		return *x.CanSetStreamPosition
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetStreamAttribute() bool {
	if x != nil && x.CanSetStreamAttribute != nil {
		return *x.CanSetStreamAttribute
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetStreamName() bool {
	if x != nil && x.CanSetStreamName != nil {
		return *x.CanSetStreamName
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetStreamSubject() bool {
	if x != nil && x.CanSetStreamSubject != nil {
		return *x.CanSetStreamSubject
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetStreamAccess() bool {
	if x != nil && x.CanSetStreamAccess != nil {
		return *x.CanSetStreamAccess
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanSetStreamVoiceLevel() bool {
	if x != nil && x.CanSetStreamVoiceLevel != nil {
		return *x.CanSetStreamVoiceLevel
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanCreateMessage() bool {
	if x != nil && x.CanCreateMessage != nil {
		return *x.CanCreateMessage
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanDestroyOwnMessage() bool {
	if x != nil && x.CanDestroyOwnMessage != nil {
		return *x.CanDestroyOwnMessage
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanDestroyOtherMessage() bool {
	if x != nil && x.CanDestroyOtherMessage != nil {
		return *x.CanDestroyOtherMessage
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanEditOwnMessage() bool {
	if x != nil && x.CanEditOwnMessage != nil {
		return *x.CanEditOwnMessage
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanPinMessage() bool {
	if x != nil && x.CanPinMessage != nil {
		return *x.CanPinMessage
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanMentionAll() bool {
	if x != nil && x.CanMentionAll != nil {
		return *x.CanMentionAll
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanMentionHere() bool {
	if x != nil && x.CanMentionHere != nil {
		return *x.CanMentionHere
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanMentionMember() bool {
	if x != nil && x.CanMentionMember != nil {
		return *x.CanMentionMember
	}
	return false
}

func (x *ClubPrivilegeSet) GetCanMentionRole() bool {
	if x != nil && x.CanMentionRole != nil {
		return *x.CanMentionRole
	}
	return false
}

type ClubRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      *uint32             `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	State                   *protocol.RoleState `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	Privilege               *ClubPrivilegeSet   `protobuf:"bytes,3,opt,name=privilege" json:"privilege,omitempty"`
	AlwaysGrantStreamAccess *bool               `protobuf:"varint,4,opt,name=always_grant_stream_access,json=alwaysGrantStreamAccess" json:"always_grant_stream_access,omitempty"`
	AllowInClubSlot         *bool               `protobuf:"varint,5,opt,name=allow_in_club_slot,json=allowInClubSlot" json:"allow_in_club_slot,omitempty"`
}

func (x *ClubRole) Reset() {
	*x = ClubRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_role_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubRole) ProtoMessage() {}

func (x *ClubRole) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_role_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubRole.ProtoReflect.Descriptor instead.
func (*ClubRole) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_role_proto_rawDescGZIP(), []int{1}
}

func (x *ClubRole) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ClubRole) GetState() *protocol.RoleState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *ClubRole) GetPrivilege() *ClubPrivilegeSet {
	if x != nil {
		return x.Privilege
	}
	return nil
}

func (x *ClubRole) GetAlwaysGrantStreamAccess() bool {
	if x != nil && x.AlwaysGrantStreamAccess != nil {
		return *x.AlwaysGrantStreamAccess
	}
	return false
}

func (x *ClubRole) GetAllowInClubSlot() bool {
	if x != nil && x.AllowInClubSlot != nil {
		return *x.AllowInClubSlot
	}
	return false
}

type ClubRoleSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role                              []*ClubRole `protobuf:"bytes,1,rep,name=role" json:"role,omitempty"`
	DefaultRole                       []uint32    `protobuf:"varint,5,rep,name=default_role,json=defaultRole" json:"default_role,omitempty"`
	AssignmentRespectsRelegationChain *bool       `protobuf:"varint,6,opt,name=assignment_respects_relegation_chain,json=assignmentRespectsRelegationChain" json:"assignment_respects_relegation_chain,omitempty"`
	Subtype                           *string     `protobuf:"bytes,7,opt,name=subtype" json:"subtype,omitempty"`
}

func (x *ClubRoleSet) Reset() {
	*x = ClubRoleSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_role_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubRoleSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubRoleSet) ProtoMessage() {}

func (x *ClubRoleSet) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_role_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubRoleSet.ProtoReflect.Descriptor instead.
func (*ClubRoleSet) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_role_proto_rawDescGZIP(), []int{2}
}

func (x *ClubRoleSet) GetRole() []*ClubRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *ClubRoleSet) GetDefaultRole() []uint32 {
	if x != nil {
		return x.DefaultRole
	}
	return nil
}

func (x *ClubRoleSet) GetAssignmentRespectsRelegationChain() bool {
	if x != nil && x.AssignmentRespectsRelegationChain != nil {
		return *x.AssignmentRespectsRelegationChain
	}
	return false
}

func (x *ClubRoleSet) GetSubtype() string {
	if x != nil && x.Subtype != nil {
		return *x.Subtype
	}
	return ""
}

var File_bgs_low_pb_client_club_role_proto protoreflect.FileDescriptor

var file_bgs_low_pb_client_club_role_proto_rawDesc = []byte{
	0x0a, 0x21, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x22, 0x62, 0x67, 0x73, 0x2f, 0x6c,
	0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x12,
	0x0a, 0x10, 0x43, 0x6c, 0x75, 0x62, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x53,
	0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x53, 0x65,
	0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x61, 0x64,
	0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x63, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x61, 0x6e, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x4b, 0x69, 0x63, 0x6b, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x1c, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x6f, 0x77, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x63, 0x61, 0x6e, 0x53,
	0x65, 0x74, 0x4f, 0x77, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x1e, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x63, 0x61,
	0x6e, 0x53, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x17, 0x63, 0x61, 0x6e, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x63, 0x61, 0x6e, 0x53, 0x65,
	0x74, 0x4f, 0x77, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3a,
	0x0a, 0x1a, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x16, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x19, 0x63, 0x61,
	0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x5f, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65,
	0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x63,
	0x61, 0x6e, 0x53, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x34, 0x0a, 0x17, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x6f, 0x77, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x4f, 0x77, 0x6e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x19, 0x63, 0x61,
	0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x63,
	0x61, 0x6e, 0x53, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4e, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x5f,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x61, 0x6e,
	0x55, 0x73, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x1d, 0x63, 0x61, 0x6e, 0x5f,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x33, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x18, 0x63, 0x61, 0x6e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4d, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61, 0x6e,
	0x5f, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x6e, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x47,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x61, 0x6e, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x48, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x63, 0x61, 0x6e, 0x53,
	0x65, 0x6e, 0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x5f, 0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x49, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x4f, 0x77, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a,
	0x1b, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x4a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x18, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x61, 0x6e, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61,
	0x6e, 0x5f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x5b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x5f,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x5c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x67, 0x65,
	0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x63, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x63, 0x61, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x5f,
	0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x70,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x5f, 0x67, 0x65,
	0x74, 0x5f, 0x62, 0x61, 0x6e, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61,
	0x6e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x5f, 0x61,
	0x64, 0x64, 0x5f, 0x62, 0x61, 0x6e, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63,
	0x61, 0x6e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x18, 0x84, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x12,
	0x2b, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x61, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2d, 0x0a, 0x12,
	0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x18, 0x8d, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x36, 0x0a, 0x17, 0x63,
	0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x8e, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x63,
	0x61, 0x6e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18,
	0x8f, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x90, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x61, 0x6e,
	0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x16, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x91, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x92, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3b, 0x0a, 0x1a, 0x63, 0x61, 0x6e, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x93, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x63, 0x61,
	0x6e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xb4, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x5f, 0x6f, 0x77, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xb5,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x4f, 0x77, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x63,
	0x61, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xb6, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x16, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x61, 0x6e, 0x5f, 0x65,
	0x64, 0x69, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0xb7, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x4f,
	0x77, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x61, 0x6e,
	0x5f, 0x70, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xb8, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x50, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0xb9, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x61,
	0x6e, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x61, 0x6e, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x72, 0x65, 0x18,
	0xba, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x61, 0x6e, 0x4d, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x65, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0xbb, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0xbc, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x63, 0x61, 0x6e, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x22, 0xf9, 0x01, 0x0a, 0x08, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x09,
	0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x50, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x53, 0x65, 0x74, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x5f, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x2b, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x75, 0x62,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x49, 0x6e, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x6c, 0x6f, 0x74, 0x22, 0xcf, 0x01, 0x0a,
	0x0b, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x4f, 0x0a, 0x24, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x21, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x42, 0x3d,
	0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6a, 0x62,
	0x72, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x64, 0x34, 0x2d, 0x62, 0x6e, 0x65, 0x74, 0x2d, 0x6d,
	0x69, 0x74, 0x6d, 0x2f, 0x62, 0x6e, 0x65, 0x74, 0x2f, 0x62, 0x67, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x2f, 0x76, 0x31,
}

var (
	file_bgs_low_pb_client_club_role_proto_rawDescOnce sync.Once
	file_bgs_low_pb_client_club_role_proto_rawDescData = file_bgs_low_pb_client_club_role_proto_rawDesc
)

func file_bgs_low_pb_client_club_role_proto_rawDescGZIP() []byte {
	file_bgs_low_pb_client_club_role_proto_rawDescOnce.Do(func() {
		file_bgs_low_pb_client_club_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_bgs_low_pb_client_club_role_proto_rawDescData)
	})
	return file_bgs_low_pb_client_club_role_proto_rawDescData
}

var file_bgs_low_pb_client_club_role_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_bgs_low_pb_client_club_role_proto_goTypes = []interface{}{
	(*ClubPrivilegeSet)(nil),   // 0: bgs.protocol.club.v1.ClubPrivilegeSet
	(*ClubRole)(nil),           // 1: bgs.protocol.club.v1.ClubRole
	(*ClubRoleSet)(nil),        // 2: bgs.protocol.club.v1.ClubRoleSet
	(*protocol.RoleState)(nil), // 3: bgs.protocol.RoleState
}
var file_bgs_low_pb_client_club_role_proto_depIdxs = []int32{
	3, // 0: bgs.protocol.club.v1.ClubRole.state:type_name -> bgs.protocol.RoleState
	0, // 1: bgs.protocol.club.v1.ClubRole.privilege:type_name -> bgs.protocol.club.v1.ClubPrivilegeSet
	1, // 2: bgs.protocol.club.v1.ClubRoleSet.role:type_name -> bgs.protocol.club.v1.ClubRole
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_bgs_low_pb_client_club_role_proto_init() }
func file_bgs_low_pb_client_club_role_proto_init() {
	if File_bgs_low_pb_client_club_role_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bgs_low_pb_client_club_role_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubPrivilegeSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_role_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_role_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubRoleSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bgs_low_pb_client_club_role_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bgs_low_pb_client_club_role_proto_goTypes,
		DependencyIndexes: file_bgs_low_pb_client_club_role_proto_depIdxs,
		MessageInfos:      file_bgs_low_pb_client_club_role_proto_msgTypes,
	}.Build()
	File_bgs_low_pb_client_club_role_proto = out.File
	file_bgs_low_pb_client_club_role_proto_rawDesc = nil
	file_bgs_low_pb_client_club_role_proto_goTypes = nil
	file_bgs_low_pb_client_club_role_proto_depIdxs = nil
}
