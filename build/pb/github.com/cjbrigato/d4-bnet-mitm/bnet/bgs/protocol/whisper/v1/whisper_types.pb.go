// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: bgs/low/pb/client/whisper_types.proto

package v1

import (
	protocol "github.com/cjbrigato/d4-bnet-mitm/bnet/bgs/protocol"
	v1 "github.com/cjbrigato/d4-bnet-mitm/bnet/bgs/protocol/account/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Whisper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId     *v1.AccountId         `protobuf:"bytes,1,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	RecipientId  *v1.AccountId         `protobuf:"bytes,2,opt,name=recipient_id,json=recipientId" json:"recipient_id,omitempty"`
	Content      *string               `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Embed        []*protocol.EmbedInfo `protobuf:"bytes,4,rep,name=embed" json:"embed,omitempty"`
	CreationTime *uint64               `protobuf:"varint,6,opt,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	Program      *uint32               `protobuf:"fixed32,7,opt,name=program" json:"program,omitempty"`
	MessageId    *protocol.MessageId   `protobuf:"bytes,8,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
}

func (x *Whisper) Reset() {
	*x = Whisper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_whisper_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Whisper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Whisper) ProtoMessage() {}

func (x *Whisper) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_whisper_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Whisper.ProtoReflect.Descriptor instead.
func (*Whisper) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_whisper_types_proto_rawDescGZIP(), []int{0}
}

func (x *Whisper) GetSenderId() *v1.AccountId {
	if x != nil {
		return x.SenderId
	}
	return nil
}

func (x *Whisper) GetRecipientId() *v1.AccountId {
	if x != nil {
		return x.RecipientId
	}
	return nil
}

func (x *Whisper) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *Whisper) GetEmbed() []*protocol.EmbedInfo {
	if x != nil {
		return x.Embed
	}
	return nil
}

func (x *Whisper) GetCreationTime() uint64 {
	if x != nil && x.CreationTime != nil {
		return *x.CreationTime
	}
	return 0
}

func (x *Whisper) GetProgram() uint32 {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return 0
}

func (x *Whisper) GetMessageId() *protocol.MessageId {
	if x != nil {
		return x.MessageId
	}
	return nil
}

type WhisperView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId        *v1.AccountId        `protobuf:"bytes,1,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	ViewMarker      *protocol.ViewMarker `protobuf:"bytes,2,opt,name=view_marker,json=viewMarker" json:"view_marker,omitempty"`
	SenderBattleTag *string              `protobuf:"bytes,3,opt,name=sender_battle_tag,json=senderBattleTag" json:"sender_battle_tag,omitempty"`
}

func (x *WhisperView) Reset() {
	*x = WhisperView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_whisper_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhisperView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhisperView) ProtoMessage() {}

func (x *WhisperView) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_whisper_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhisperView.ProtoReflect.Descriptor instead.
func (*WhisperView) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_whisper_types_proto_rawDescGZIP(), []int{1}
}

func (x *WhisperView) GetSenderId() *v1.AccountId {
	if x != nil {
		return x.SenderId
	}
	return nil
}

func (x *WhisperView) GetViewMarker() *protocol.ViewMarker {
	if x != nil {
		return x.ViewMarker
	}
	return nil
}

func (x *WhisperView) GetSenderBattleTag() string {
	if x != nil && x.SenderBattleTag != nil {
		return *x.SenderBattleTag
	}
	return ""
}

type SendOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId *v1.AccountId `protobuf:"bytes,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Content  *string       `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
}

func (x *SendOptions) Reset() {
	*x = SendOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_whisper_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOptions) ProtoMessage() {}

func (x *SendOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_whisper_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOptions.ProtoReflect.Descriptor instead.
func (*SendOptions) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_whisper_types_proto_rawDescGZIP(), []int{2}
}

func (x *SendOptions) GetTargetId() *v1.AccountId {
	if x != nil {
		return x.TargetId
	}
	return nil
}

func (x *SendOptions) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

var File_bgs_low_pb_client_whisper_types_proto protoreflect.FileDescriptor

var file_bgs_low_pb_client_whisper_types_proto_rawDesc = []byte{
	0x0a, 0x25, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x1a, 0x25, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77,
	0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x62, 0x67,
	0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f,
	0x72, 0x70, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x28, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x62, 0x67, 0x73, 0x2f, 0x6c,
	0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xd1, 0x02, 0x0a, 0x07, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x09,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x45, 0x0a,
	0x0c, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2d,
	0x0a, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x36, 0x0a, 0x0a,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x0b, 0x57, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x3f, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x08, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x72, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72,
	0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x22, 0x68, 0x0a, 0x0b,
	0x53, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6a, 0x62, 0x72, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x64,
	0x34, 0x2d, 0x62, 0x6e, 0x65, 0x74, 0x2d, 0x6d, 0x69, 0x74, 0x6d, 0x2f, 0x62, 0x6e, 0x65, 0x74,
	0x2f, 0x62, 0x67, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x77, 0x68,
	0x69, 0x73, 0x70, 0x65, 0x72, 0x2f, 0x76, 0x31,
}

var (
	file_bgs_low_pb_client_whisper_types_proto_rawDescOnce sync.Once
	file_bgs_low_pb_client_whisper_types_proto_rawDescData = file_bgs_low_pb_client_whisper_types_proto_rawDesc
)

func file_bgs_low_pb_client_whisper_types_proto_rawDescGZIP() []byte {
	file_bgs_low_pb_client_whisper_types_proto_rawDescOnce.Do(func() {
		file_bgs_low_pb_client_whisper_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_bgs_low_pb_client_whisper_types_proto_rawDescData)
	})
	return file_bgs_low_pb_client_whisper_types_proto_rawDescData
}

var file_bgs_low_pb_client_whisper_types_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_bgs_low_pb_client_whisper_types_proto_goTypes = []interface{}{
	(*Whisper)(nil),             // 0: bgs.protocol.whisper.v1.Whisper
	(*WhisperView)(nil),         // 1: bgs.protocol.whisper.v1.WhisperView
	(*SendOptions)(nil),         // 2: bgs.protocol.whisper.v1.SendOptions
	(*v1.AccountId)(nil),        // 3: bgs.protocol.account.v1.AccountId
	(*protocol.EmbedInfo)(nil),  // 4: bgs.protocol.EmbedInfo
	(*protocol.MessageId)(nil),  // 5: bgs.protocol.MessageId
	(*protocol.ViewMarker)(nil), // 6: bgs.protocol.ViewMarker
}
var file_bgs_low_pb_client_whisper_types_proto_depIdxs = []int32{
	3, // 0: bgs.protocol.whisper.v1.Whisper.sender_id:type_name -> bgs.protocol.account.v1.AccountId
	3, // 1: bgs.protocol.whisper.v1.Whisper.recipient_id:type_name -> bgs.protocol.account.v1.AccountId
	4, // 2: bgs.protocol.whisper.v1.Whisper.embed:type_name -> bgs.protocol.EmbedInfo
	5, // 3: bgs.protocol.whisper.v1.Whisper.message_id:type_name -> bgs.protocol.MessageId
	3, // 4: bgs.protocol.whisper.v1.WhisperView.sender_id:type_name -> bgs.protocol.account.v1.AccountId
	6, // 5: bgs.protocol.whisper.v1.WhisperView.view_marker:type_name -> bgs.protocol.ViewMarker
	3, // 6: bgs.protocol.whisper.v1.SendOptions.target_id:type_name -> bgs.protocol.account.v1.AccountId
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_bgs_low_pb_client_whisper_types_proto_init() }
func file_bgs_low_pb_client_whisper_types_proto_init() {
	if File_bgs_low_pb_client_whisper_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bgs_low_pb_client_whisper_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Whisper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_whisper_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhisperView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_whisper_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bgs_low_pb_client_whisper_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bgs_low_pb_client_whisper_types_proto_goTypes,
		DependencyIndexes: file_bgs_low_pb_client_whisper_types_proto_depIdxs,
		MessageInfos:      file_bgs_low_pb_client_whisper_types_proto_msgTypes,
	}.Build()
	File_bgs_low_pb_client_whisper_types_proto = out.File
	file_bgs_low_pb_client_whisper_types_proto_rawDesc = nil
	file_bgs_low_pb_client_whisper_types_proto_goTypes = nil
	file_bgs_low_pb_client_whisper_types_proto_depIdxs = nil
}
