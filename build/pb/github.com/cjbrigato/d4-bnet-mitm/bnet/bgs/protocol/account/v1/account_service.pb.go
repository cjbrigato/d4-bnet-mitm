// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: bgs/low/pb/client/account_service.proto

package v1

import (
	protocol "github.com/cjbrigato/d4-bnet-mitm/bnet/bgs/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResolveAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref     *AccountReference `protobuf:"bytes,1,opt,name=ref" json:"ref,omitempty"`
	FetchId *bool             `protobuf:"varint,12,opt,name=fetch_id,json=fetchId" json:"fetch_id,omitempty"`
}

func (x *ResolveAccountRequest) Reset() {
	*x = ResolveAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveAccountRequest) ProtoMessage() {}

func (x *ResolveAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveAccountRequest.ProtoReflect.Descriptor instead.
func (*ResolveAccountRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{0}
}

func (x *ResolveAccountRequest) GetRef() *AccountReference {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *ResolveAccountRequest) GetFetchId() bool {
	if x != nil && x.FetchId != nil {
		return *x.FetchId
	}
	return false
}

type ResolveAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *AccountId `protobuf:"bytes,12,opt,name=id" json:"id,omitempty"`
}

func (x *ResolveAccountResponse) Reset() {
	*x = ResolveAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveAccountResponse) ProtoMessage() {}

func (x *ResolveAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveAccountResponse.ProtoReflect.Descriptor instead.
func (*ResolveAccountResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{1}
}

func (x *ResolveAccountResponse) GetId() *AccountId {
	if x != nil {
		return x.Id
	}
	return nil
}

type GameAccountFlagUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameAccount *GameAccountHandle `protobuf:"bytes,1,opt,name=game_account,json=gameAccount" json:"game_account,omitempty"`
	Flag        *uint64            `protobuf:"varint,2,opt,name=flag" json:"flag,omitempty"`
	Active      *bool              `protobuf:"varint,3,opt,name=active" json:"active,omitempty"`
}

func (x *GameAccountFlagUpdateRequest) Reset() {
	*x = GameAccountFlagUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAccountFlagUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAccountFlagUpdateRequest) ProtoMessage() {}

func (x *GameAccountFlagUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAccountFlagUpdateRequest.ProtoReflect.Descriptor instead.
func (*GameAccountFlagUpdateRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{2}
}

func (x *GameAccountFlagUpdateRequest) GetGameAccount() *GameAccountHandle {
	if x != nil {
		return x.GameAccount
	}
	return nil
}

func (x *GameAccountFlagUpdateRequest) GetFlag() uint64 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}

func (x *GameAccountFlagUpdateRequest) GetActive() bool {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return false
}

type SubscriptionUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref []*SubscriberReference `protobuf:"bytes,2,rep,name=ref" json:"ref,omitempty"`
}

func (x *SubscriptionUpdateRequest) Reset() {
	*x = SubscriptionUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionUpdateRequest) ProtoMessage() {}

func (x *SubscriptionUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionUpdateRequest.ProtoReflect.Descriptor instead.
func (*SubscriptionUpdateRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{3}
}

func (x *SubscriptionUpdateRequest) GetRef() []*SubscriberReference {
	if x != nil {
		return x.Ref
	}
	return nil
}

type SubscriptionUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref []*SubscriberReference `protobuf:"bytes,1,rep,name=ref" json:"ref,omitempty"`
}

func (x *SubscriptionUpdateResponse) Reset() {
	*x = SubscriptionUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionUpdateResponse) ProtoMessage() {}

func (x *SubscriptionUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionUpdateResponse.ProtoReflect.Descriptor instead.
func (*SubscriptionUpdateResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{4}
}

func (x *SubscriptionUpdateResponse) GetRef() []*SubscriberReference {
	if x != nil {
		return x.Ref
	}
	return nil
}

type GetAccountStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId *protocol.EntityId   `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Program  *uint32              `protobuf:"varint,2,opt,name=program" json:"program,omitempty"`
	Region   *uint32              `protobuf:"varint,3,opt,name=region" json:"region,omitempty"`
	Options  *AccountFieldOptions `protobuf:"bytes,10,opt,name=options" json:"options,omitempty"`
	Tags     *AccountFieldTags    `protobuf:"bytes,11,opt,name=tags" json:"tags,omitempty"`
}

func (x *GetAccountStateRequest) Reset() {
	*x = GetAccountStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountStateRequest) ProtoMessage() {}

func (x *GetAccountStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountStateRequest.ProtoReflect.Descriptor instead.
func (*GetAccountStateRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAccountStateRequest) GetEntityId() *protocol.EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *GetAccountStateRequest) GetProgram() uint32 {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return 0
}

func (x *GetAccountStateRequest) GetRegion() uint32 {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return 0
}

func (x *GetAccountStateRequest) GetOptions() *AccountFieldOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GetAccountStateRequest) GetTags() *AccountFieldTags {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetAccountStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *AccountState     `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	Tags  *AccountFieldTags `protobuf:"bytes,2,opt,name=tags" json:"tags,omitempty"`
}

func (x *GetAccountStateResponse) Reset() {
	*x = GetAccountStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountStateResponse) ProtoMessage() {}

func (x *GetAccountStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountStateResponse.ProtoReflect.Descriptor instead.
func (*GetAccountStateResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetAccountStateResponse) GetState() *AccountState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *GetAccountStateResponse) GetTags() *AccountFieldTags {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetSignedAccountStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *AccountId `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (x *GetSignedAccountStateRequest) Reset() {
	*x = GetSignedAccountStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignedAccountStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignedAccountStateRequest) ProtoMessage() {}

func (x *GetSignedAccountStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignedAccountStateRequest.ProtoReflect.Descriptor instead.
func (*GetSignedAccountStateRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetSignedAccountStateRequest) GetAccount() *AccountId {
	if x != nil {
		return x.Account
	}
	return nil
}

type GetSignedAccountStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (x *GetSignedAccountStateResponse) Reset() {
	*x = GetSignedAccountStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignedAccountStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignedAccountStateResponse) ProtoMessage() {}

func (x *GetSignedAccountStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignedAccountStateResponse.ProtoReflect.Descriptor instead.
func (*GetSignedAccountStateResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetSignedAccountStateResponse) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

type GetGameAccountStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId     *protocol.EntityId       `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	GameAccountId *protocol.EntityId       `protobuf:"bytes,2,opt,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
	Options       *GameAccountFieldOptions `protobuf:"bytes,10,opt,name=options" json:"options,omitempty"`
	Tags          *GameAccountFieldTags    `protobuf:"bytes,11,opt,name=tags" json:"tags,omitempty"`
}

func (x *GetGameAccountStateRequest) Reset() {
	*x = GetGameAccountStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameAccountStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameAccountStateRequest) ProtoMessage() {}

func (x *GetGameAccountStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameAccountStateRequest.ProtoReflect.Descriptor instead.
func (*GetGameAccountStateRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetGameAccountStateRequest) GetAccountId() *protocol.EntityId {
	if x != nil {
		return x.AccountId
	}
	return nil
}

func (x *GetGameAccountStateRequest) GetGameAccountId() *protocol.EntityId {
	if x != nil {
		return x.GameAccountId
	}
	return nil
}

func (x *GetGameAccountStateRequest) GetOptions() *GameAccountFieldOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GetGameAccountStateRequest) GetTags() *GameAccountFieldTags {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetGameAccountStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *GameAccountState     `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	Tags  *GameAccountFieldTags `protobuf:"bytes,2,opt,name=tags" json:"tags,omitempty"`
}

func (x *GetGameAccountStateResponse) Reset() {
	*x = GetGameAccountStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameAccountStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameAccountStateResponse) ProtoMessage() {}

func (x *GetGameAccountStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameAccountStateResponse.ProtoReflect.Descriptor instead.
func (*GetGameAccountStateResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetGameAccountStateResponse) GetState() *GameAccountState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *GetGameAccountStateResponse) GetTags() *GameAccountFieldTags {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetLicensesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId                    *protocol.EntityId `protobuf:"bytes,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	FetchAccountLicenses        *bool              `protobuf:"varint,2,opt,name=fetch_account_licenses,json=fetchAccountLicenses" json:"fetch_account_licenses,omitempty"`
	FetchGameAccountLicenses    *bool              `protobuf:"varint,3,opt,name=fetch_game_account_licenses,json=fetchGameAccountLicenses" json:"fetch_game_account_licenses,omitempty"`
	FetchDynamicAccountLicenses *bool              `protobuf:"varint,4,opt,name=fetch_dynamic_account_licenses,json=fetchDynamicAccountLicenses" json:"fetch_dynamic_account_licenses,omitempty"`
	Program                     *uint32            `protobuf:"fixed32,5,opt,name=program" json:"program,omitempty"`
	ExcludeUnknownProgram       *bool              `protobuf:"varint,6,opt,name=exclude_unknown_program,json=excludeUnknownProgram,def=0" json:"exclude_unknown_program,omitempty"`
}

// Default values for GetLicensesRequest fields.
const (
	Default_GetLicensesRequest_ExcludeUnknownProgram = bool(false)
)

func (x *GetLicensesRequest) Reset() {
	*x = GetLicensesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLicensesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLicensesRequest) ProtoMessage() {}

func (x *GetLicensesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLicensesRequest.ProtoReflect.Descriptor instead.
func (*GetLicensesRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetLicensesRequest) GetTargetId() *protocol.EntityId {
	if x != nil {
		return x.TargetId
	}
	return nil
}

func (x *GetLicensesRequest) GetFetchAccountLicenses() bool {
	if x != nil && x.FetchAccountLicenses != nil {
		return *x.FetchAccountLicenses
	}
	return false
}

func (x *GetLicensesRequest) GetFetchGameAccountLicenses() bool {
	if x != nil && x.FetchGameAccountLicenses != nil {
		return *x.FetchGameAccountLicenses
	}
	return false
}

func (x *GetLicensesRequest) GetFetchDynamicAccountLicenses() bool {
	if x != nil && x.FetchDynamicAccountLicenses != nil {
		return *x.FetchDynamicAccountLicenses
	}
	return false
}

func (x *GetLicensesRequest) GetProgram() uint32 {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return 0
}

func (x *GetLicensesRequest) GetExcludeUnknownProgram() bool {
	if x != nil && x.ExcludeUnknownProgram != nil {
		return *x.ExcludeUnknownProgram
	}
	return Default_GetLicensesRequest_ExcludeUnknownProgram
}

type GetLicensesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Licenses []*AccountLicense `protobuf:"bytes,1,rep,name=licenses" json:"licenses,omitempty"`
}

func (x *GetLicensesResponse) Reset() {
	*x = GetLicensesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLicensesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLicensesResponse) ProtoMessage() {}

func (x *GetLicensesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLicensesResponse.ProtoReflect.Descriptor instead.
func (*GetLicensesResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetLicensesResponse) GetLicenses() []*AccountLicense {
	if x != nil {
		return x.Licenses
	}
	return nil
}

type GetGameSessionInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId *protocol.EntityId `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
}

func (x *GetGameSessionInfoRequest) Reset() {
	*x = GetGameSessionInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameSessionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameSessionInfoRequest) ProtoMessage() {}

func (x *GetGameSessionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameSessionInfoRequest.ProtoReflect.Descriptor instead.
func (*GetGameSessionInfoRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetGameSessionInfoRequest) GetEntityId() *protocol.EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

type GetGameSessionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionInfo *GameSessionInfo `protobuf:"bytes,2,opt,name=session_info,json=sessionInfo" json:"session_info,omitempty"`
}

func (x *GetGameSessionInfoResponse) Reset() {
	*x = GetGameSessionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameSessionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameSessionInfoResponse) ProtoMessage() {}

func (x *GetGameSessionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameSessionInfoResponse.ProtoReflect.Descriptor instead.
func (*GetGameSessionInfoResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetGameSessionInfoResponse) GetSessionInfo() *GameSessionInfo {
	if x != nil {
		return x.SessionInfo
	}
	return nil
}

type GetGameTimeRemainingInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameAccountId *protocol.EntityId `protobuf:"bytes,1,opt,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
	AccountId     *protocol.EntityId `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	BenefactorId  *string            `protobuf:"bytes,3,opt,name=benefactor_id,json=benefactorId" json:"benefactor_id,omitempty"`
}

func (x *GetGameTimeRemainingInfoRequest) Reset() {
	*x = GetGameTimeRemainingInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameTimeRemainingInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameTimeRemainingInfoRequest) ProtoMessage() {}

func (x *GetGameTimeRemainingInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameTimeRemainingInfoRequest.ProtoReflect.Descriptor instead.
func (*GetGameTimeRemainingInfoRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetGameTimeRemainingInfoRequest) GetGameAccountId() *protocol.EntityId {
	if x != nil {
		return x.GameAccountId
	}
	return nil
}

func (x *GetGameTimeRemainingInfoRequest) GetAccountId() *protocol.EntityId {
	if x != nil {
		return x.AccountId
	}
	return nil
}

func (x *GetGameTimeRemainingInfoRequest) GetBenefactorId() string {
	if x != nil && x.BenefactorId != nil {
		return *x.BenefactorId
	}
	return ""
}

type GetGameTimeRemainingInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameTimeRemainingInfo *GameTimeRemainingInfo `protobuf:"bytes,1,opt,name=game_time_remaining_info,json=gameTimeRemainingInfo" json:"game_time_remaining_info,omitempty"`
}

func (x *GetGameTimeRemainingInfoResponse) Reset() {
	*x = GetGameTimeRemainingInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameTimeRemainingInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameTimeRemainingInfoResponse) ProtoMessage() {}

func (x *GetGameTimeRemainingInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameTimeRemainingInfoResponse.ProtoReflect.Descriptor instead.
func (*GetGameTimeRemainingInfoResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetGameTimeRemainingInfoResponse) GetGameTimeRemainingInfo() *GameTimeRemainingInfo {
	if x != nil {
		return x.GameTimeRemainingInfo
	}
	return nil
}

type GetCAISInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId *protocol.EntityId `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
}

func (x *GetCAISInfoRequest) Reset() {
	*x = GetCAISInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCAISInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCAISInfoRequest) ProtoMessage() {}

func (x *GetCAISInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCAISInfoRequest.ProtoReflect.Descriptor instead.
func (*GetCAISInfoRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetCAISInfoRequest) GetEntityId() *protocol.EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

type GetCAISInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaisInfo *CAIS `protobuf:"bytes,1,opt,name=cais_info,json=caisInfo" json:"cais_info,omitempty"`
}

func (x *GetCAISInfoResponse) Reset() {
	*x = GetCAISInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCAISInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCAISInfoResponse) ProtoMessage() {}

func (x *GetCAISInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCAISInfoResponse.ProtoReflect.Descriptor instead.
func (*GetCAISInfoResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetCAISInfoResponse) GetCaisInfo() *CAIS {
	if x != nil {
		return x.CaisInfo
	}
	return nil
}

type GetAuthorizedDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId          *protocol.EntityId `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Tag               []string           `protobuf:"bytes,2,rep,name=tag" json:"tag,omitempty"`
	PrivilegedNetwork *bool              `protobuf:"varint,3,opt,name=privileged_network,json=privilegedNetwork" json:"privileged_network,omitempty"`
}

func (x *GetAuthorizedDataRequest) Reset() {
	*x = GetAuthorizedDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizedDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizedDataRequest) ProtoMessage() {}

func (x *GetAuthorizedDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizedDataRequest.ProtoReflect.Descriptor instead.
func (*GetAuthorizedDataRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetAuthorizedDataRequest) GetEntityId() *protocol.EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *GetAuthorizedDataRequest) GetTag() []string {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *GetAuthorizedDataRequest) GetPrivilegedNetwork() bool {
	if x != nil && x.PrivilegedNetwork != nil {
		return *x.PrivilegedNetwork
	}
	return false
}

type GetAuthorizedDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AuthorizedData `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (x *GetAuthorizedDataResponse) Reset() {
	*x = GetAuthorizedDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizedDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizedDataResponse) ProtoMessage() {}

func (x *GetAuthorizedDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizedDataResponse.ProtoReflect.Descriptor instead.
func (*GetAuthorizedDataResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetAuthorizedDataResponse) GetData() []*AuthorizedData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAccountInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *protocol.EntityId `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *GetAccountInfoRequest) Reset() {
	*x = GetAccountInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountInfoRequest) ProtoMessage() {}

func (x *GetAccountInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAccountInfoRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetAccountInfoRequest) GetAccountId() *protocol.EntityId {
	if x != nil {
		return x.AccountId
	}
	return nil
}

type GetAccountInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountInfo *AccountInfo `protobuf:"bytes,1,opt,name=account_info,json=accountInfo" json:"account_info,omitempty"`
}

func (x *GetAccountInfoResponse) Reset() {
	*x = GetAccountInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountInfoResponse) ProtoMessage() {}

func (x *GetAccountInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAccountInfoResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetAccountInfoResponse) GetAccountInfo() *AccountInfo {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

type GetAccountPlatformRestrictionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *protocol.EntityId `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *GetAccountPlatformRestrictionsRequest) Reset() {
	*x = GetAccountPlatformRestrictionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountPlatformRestrictionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountPlatformRestrictionsRequest) ProtoMessage() {}

func (x *GetAccountPlatformRestrictionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountPlatformRestrictionsRequest.ProtoReflect.Descriptor instead.
func (*GetAccountPlatformRestrictionsRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetAccountPlatformRestrictionsRequest) GetAccountId() *protocol.EntityId {
	if x != nil {
		return x.AccountId
	}
	return nil
}

type GetAccountPlatformRestrictionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestrictionInfo *AccountPlatformRestrictionInfo `protobuf:"bytes,1,opt,name=restriction_info,json=restrictionInfo" json:"restriction_info,omitempty"`
}

func (x *GetAccountPlatformRestrictionsResponse) Reset() {
	*x = GetAccountPlatformRestrictionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountPlatformRestrictionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountPlatformRestrictionsResponse) ProtoMessage() {}

func (x *GetAccountPlatformRestrictionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountPlatformRestrictionsResponse.ProtoReflect.Descriptor instead.
func (*GetAccountPlatformRestrictionsResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetAccountPlatformRestrictionsResponse) GetRestrictionInfo() *AccountPlatformRestrictionInfo {
	if x != nil {
		return x.RestrictionInfo
	}
	return nil
}

type AccountStateNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountState          *AccountState     `protobuf:"bytes,1,opt,name=account_state,json=accountState" json:"account_state,omitempty"`
	SubscriberId          *uint64           `protobuf:"varint,2,opt,name=subscriber_id,json=subscriberId" json:"subscriber_id,omitempty"`
	AccountTags           *AccountFieldTags `protobuf:"bytes,3,opt,name=account_tags,json=accountTags" json:"account_tags,omitempty"`
	SubscriptionCompleted *bool             `protobuf:"varint,4,opt,name=subscription_completed,json=subscriptionCompleted" json:"subscription_completed,omitempty"`
}

func (x *AccountStateNotification) Reset() {
	*x = AccountStateNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountStateNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountStateNotification) ProtoMessage() {}

func (x *AccountStateNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountStateNotification.ProtoReflect.Descriptor instead.
func (*AccountStateNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{25}
}

func (x *AccountStateNotification) GetAccountState() *AccountState {
	if x != nil {
		return x.AccountState
	}
	return nil
}

func (x *AccountStateNotification) GetSubscriberId() uint64 {
	if x != nil && x.SubscriberId != nil {
		return *x.SubscriberId
	}
	return 0
}

func (x *AccountStateNotification) GetAccountTags() *AccountFieldTags {
	if x != nil {
		return x.AccountTags
	}
	return nil
}

func (x *AccountStateNotification) GetSubscriptionCompleted() bool {
	if x != nil && x.SubscriptionCompleted != nil {
		return *x.SubscriptionCompleted
	}
	return false
}

type GameAccountStateNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameAccountState      *GameAccountState     `protobuf:"bytes,1,opt,name=game_account_state,json=gameAccountState" json:"game_account_state,omitempty"`
	SubscriberId          *uint64               `protobuf:"varint,2,opt,name=subscriber_id,json=subscriberId" json:"subscriber_id,omitempty"`
	GameAccountTags       *GameAccountFieldTags `protobuf:"bytes,3,opt,name=game_account_tags,json=gameAccountTags" json:"game_account_tags,omitempty"`
	SubscriptionCompleted *bool                 `protobuf:"varint,4,opt,name=subscription_completed,json=subscriptionCompleted" json:"subscription_completed,omitempty"`
}

func (x *GameAccountStateNotification) Reset() {
	*x = GameAccountStateNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAccountStateNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAccountStateNotification) ProtoMessage() {}

func (x *GameAccountStateNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAccountStateNotification.ProtoReflect.Descriptor instead.
func (*GameAccountStateNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{26}
}

func (x *GameAccountStateNotification) GetGameAccountState() *GameAccountState {
	if x != nil {
		return x.GameAccountState
	}
	return nil
}

func (x *GameAccountStateNotification) GetSubscriberId() uint64 {
	if x != nil && x.SubscriberId != nil {
		return *x.SubscriberId
	}
	return 0
}

func (x *GameAccountStateNotification) GetGameAccountTags() *GameAccountFieldTags {
	if x != nil {
		return x.GameAccountTags
	}
	return nil
}

func (x *GameAccountStateNotification) GetSubscriptionCompleted() bool {
	if x != nil && x.SubscriptionCompleted != nil {
		return *x.SubscriptionCompleted
	}
	return false
}

type GameAccountNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameAccounts []*GameAccountList `protobuf:"bytes,1,rep,name=game_accounts,json=gameAccounts" json:"game_accounts,omitempty"`
	SubscriberId *uint64            `protobuf:"varint,2,opt,name=subscriber_id,json=subscriberId" json:"subscriber_id,omitempty"`
	AccountTags  *AccountFieldTags  `protobuf:"bytes,3,opt,name=account_tags,json=accountTags" json:"account_tags,omitempty"`
}

func (x *GameAccountNotification) Reset() {
	*x = GameAccountNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAccountNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAccountNotification) ProtoMessage() {}

func (x *GameAccountNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAccountNotification.ProtoReflect.Descriptor instead.
func (*GameAccountNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{27}
}

func (x *GameAccountNotification) GetGameAccounts() []*GameAccountList {
	if x != nil {
		return x.GameAccounts
	}
	return nil
}

func (x *GameAccountNotification) GetSubscriberId() uint64 {
	if x != nil && x.SubscriberId != nil {
		return *x.SubscriberId
	}
	return 0
}

func (x *GameAccountNotification) GetAccountTags() *AccountFieldTags {
	if x != nil {
		return x.AccountTags
	}
	return nil
}

type GameAccountSessionNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameAccount *GameAccountHandle     `protobuf:"bytes,1,opt,name=game_account,json=gameAccount" json:"game_account,omitempty"`
	SessionInfo *GameSessionUpdateInfo `protobuf:"bytes,2,opt,name=session_info,json=sessionInfo" json:"session_info,omitempty"`
}

func (x *GameAccountSessionNotification) Reset() {
	*x = GameAccountSessionNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAccountSessionNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAccountSessionNotification) ProtoMessage() {}

func (x *GameAccountSessionNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_account_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAccountSessionNotification.ProtoReflect.Descriptor instead.
func (*GameAccountSessionNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_account_service_proto_rawDescGZIP(), []int{28}
}

func (x *GameAccountSessionNotification) GetGameAccount() *GameAccountHandle {
	if x != nil {
		return x.GameAccount
	}
	return nil
}

func (x *GameAccountSessionNotification) GetSessionInfo() *GameSessionUpdateInfo {
	if x != nil {
		return x.SessionInfo
	}
	return nil
}

var File_bgs_low_pb_client_account_service_proto protoreflect.FileDescriptor

var file_bgs_low_pb_client_account_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x1a, 0x25, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x62, 0x67, 0x73, 0x2f, 0x6c,
	0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x21, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x03, 0x72,
	0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x65, 0x74, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x65, 0x74, 0x63,
	0x68, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x99, 0x01, 0x0a, 0x1c, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x46, 0x6c, 0x61, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4d, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x5b, 0x0a,
	0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x03, 0x72, 0x65,
	0x66, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x5c, 0x0a, 0x1a, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x86, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x22, 0x95, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x5c, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x35, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa2,
	0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x41, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xdc, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33,
	0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x66, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x1e, 0x66, 0x65, 0x74, 0x63,
	0x68, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1b, 0x66, 0x65, 0x74, 0x63, 0x68, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x07, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x3d, 0x0a, 0x17, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x15, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x22, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x73, 0x22, 0x50, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x33, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xbd, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x65,
	0x6e, 0x65, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22,
	0x8b, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x18, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x43, 0x41, 0x49, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43,
	0x41, 0x49, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x09, 0x63, 0x61, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x41, 0x49,
	0x53, 0x52, 0x08, 0x63, 0x61, 0x69, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x90, 0x01, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12,
	0x2d, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x5f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x70, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x58,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a, 0x25, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x26,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x90, 0x02, 0x0a, 0x18, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x16, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xae, 0x02,
	0x0a, 0x1c, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57,
	0x0a, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x11,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x16, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xdb,
	0x01, 0x0a, 0x17, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x0d, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x67, 0x61, 0x6d,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4c,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x22, 0xc2, 0x01, 0x0a,
	0x1e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4d, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x51,
	0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x32, 0xcc, 0x0c, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x71, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x32, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a,
	0x0b, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x32, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x74, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x68, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x2b,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x32, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x43, 0x41, 0x49, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x41, 0x49, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x41, 0x49, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x86, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa1, 0x01, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3f, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xb9, 0x03, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x12, 0x65, 0x0a, 0x15, 0x4f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x31, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x12, 0x6d, 0x0a, 0x19, 0x4f,
	0x6e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x35, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e,
	0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x12, 0x64, 0x0a, 0x15, 0x4f, 0x6e,
	0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x30, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45,
	0x12, 0x6a, 0x0a, 0x14, 0x4f, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x37, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x42, 0x40, 0x5a, 0x3e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6a, 0x62, 0x72, 0x69,
	0x67, 0x61, 0x74, 0x6f, 0x2f, 0x64, 0x34, 0x2d, 0x62, 0x6e, 0x65, 0x74, 0x2d, 0x6d, 0x69, 0x74,
	0x6d, 0x2f, 0x62, 0x6e, 0x65, 0x74, 0x2f, 0x62, 0x67, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76, 0x31,
}

var (
	file_bgs_low_pb_client_account_service_proto_rawDescOnce sync.Once
	file_bgs_low_pb_client_account_service_proto_rawDescData = file_bgs_low_pb_client_account_service_proto_rawDesc
)

func file_bgs_low_pb_client_account_service_proto_rawDescGZIP() []byte {
	file_bgs_low_pb_client_account_service_proto_rawDescOnce.Do(func() {
		file_bgs_low_pb_client_account_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_bgs_low_pb_client_account_service_proto_rawDescData)
	})
	return file_bgs_low_pb_client_account_service_proto_rawDescData
}

var file_bgs_low_pb_client_account_service_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_bgs_low_pb_client_account_service_proto_goTypes = []interface{}{
	(*ResolveAccountRequest)(nil),                  // 0: bgs.protocol.account.v1.ResolveAccountRequest
	(*ResolveAccountResponse)(nil),                 // 1: bgs.protocol.account.v1.ResolveAccountResponse
	(*GameAccountFlagUpdateRequest)(nil),           // 2: bgs.protocol.account.v1.GameAccountFlagUpdateRequest
	(*SubscriptionUpdateRequest)(nil),              // 3: bgs.protocol.account.v1.SubscriptionUpdateRequest
	(*SubscriptionUpdateResponse)(nil),             // 4: bgs.protocol.account.v1.SubscriptionUpdateResponse
	(*GetAccountStateRequest)(nil),                 // 5: bgs.protocol.account.v1.GetAccountStateRequest
	(*GetAccountStateResponse)(nil),                // 6: bgs.protocol.account.v1.GetAccountStateResponse
	(*GetSignedAccountStateRequest)(nil),           // 7: bgs.protocol.account.v1.GetSignedAccountStateRequest
	(*GetSignedAccountStateResponse)(nil),          // 8: bgs.protocol.account.v1.GetSignedAccountStateResponse
	(*GetGameAccountStateRequest)(nil),             // 9: bgs.protocol.account.v1.GetGameAccountStateRequest
	(*GetGameAccountStateResponse)(nil),            // 10: bgs.protocol.account.v1.GetGameAccountStateResponse
	(*GetLicensesRequest)(nil),                     // 11: bgs.protocol.account.v1.GetLicensesRequest
	(*GetLicensesResponse)(nil),                    // 12: bgs.protocol.account.v1.GetLicensesResponse
	(*GetGameSessionInfoRequest)(nil),              // 13: bgs.protocol.account.v1.GetGameSessionInfoRequest
	(*GetGameSessionInfoResponse)(nil),             // 14: bgs.protocol.account.v1.GetGameSessionInfoResponse
	(*GetGameTimeRemainingInfoRequest)(nil),        // 15: bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest
	(*GetGameTimeRemainingInfoResponse)(nil),       // 16: bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse
	(*GetCAISInfoRequest)(nil),                     // 17: bgs.protocol.account.v1.GetCAISInfoRequest
	(*GetCAISInfoResponse)(nil),                    // 18: bgs.protocol.account.v1.GetCAISInfoResponse
	(*GetAuthorizedDataRequest)(nil),               // 19: bgs.protocol.account.v1.GetAuthorizedDataRequest
	(*GetAuthorizedDataResponse)(nil),              // 20: bgs.protocol.account.v1.GetAuthorizedDataResponse
	(*GetAccountInfoRequest)(nil),                  // 21: bgs.protocol.account.v1.GetAccountInfoRequest
	(*GetAccountInfoResponse)(nil),                 // 22: bgs.protocol.account.v1.GetAccountInfoResponse
	(*GetAccountPlatformRestrictionsRequest)(nil),  // 23: bgs.protocol.account.v1.GetAccountPlatformRestrictionsRequest
	(*GetAccountPlatformRestrictionsResponse)(nil), // 24: bgs.protocol.account.v1.GetAccountPlatformRestrictionsResponse
	(*AccountStateNotification)(nil),               // 25: bgs.protocol.account.v1.AccountStateNotification
	(*GameAccountStateNotification)(nil),           // 26: bgs.protocol.account.v1.GameAccountStateNotification
	(*GameAccountNotification)(nil),                // 27: bgs.protocol.account.v1.GameAccountNotification
	(*GameAccountSessionNotification)(nil),         // 28: bgs.protocol.account.v1.GameAccountSessionNotification
	(*AccountReference)(nil),                       // 29: bgs.protocol.account.v1.AccountReference
	(*AccountId)(nil),                              // 30: bgs.protocol.account.v1.AccountId
	(*GameAccountHandle)(nil),                      // 31: bgs.protocol.account.v1.GameAccountHandle
	(*SubscriberReference)(nil),                    // 32: bgs.protocol.account.v1.SubscriberReference
	(*protocol.EntityId)(nil),                      // 33: bgs.protocol.EntityId
	(*AccountFieldOptions)(nil),                    // 34: bgs.protocol.account.v1.AccountFieldOptions
	(*AccountFieldTags)(nil),                       // 35: bgs.protocol.account.v1.AccountFieldTags
	(*AccountState)(nil),                           // 36: bgs.protocol.account.v1.AccountState
	(*GameAccountFieldOptions)(nil),                // 37: bgs.protocol.account.v1.GameAccountFieldOptions
	(*GameAccountFieldTags)(nil),                   // 38: bgs.protocol.account.v1.GameAccountFieldTags
	(*GameAccountState)(nil),                       // 39: bgs.protocol.account.v1.GameAccountState
	(*AccountLicense)(nil),                         // 40: bgs.protocol.account.v1.AccountLicense
	(*GameSessionInfo)(nil),                        // 41: bgs.protocol.account.v1.GameSessionInfo
	(*GameTimeRemainingInfo)(nil),                  // 42: bgs.protocol.account.v1.GameTimeRemainingInfo
	(*CAIS)(nil),                                   // 43: bgs.protocol.account.v1.CAIS
	(*AuthorizedData)(nil),                         // 44: bgs.protocol.account.v1.AuthorizedData
	(*AccountInfo)(nil),                            // 45: bgs.protocol.account.v1.AccountInfo
	(*AccountPlatformRestrictionInfo)(nil),         // 46: bgs.protocol.account.v1.AccountPlatformRestrictionInfo
	(*GameAccountList)(nil),                        // 47: bgs.protocol.account.v1.GameAccountList
	(*GameSessionUpdateInfo)(nil),                  // 48: bgs.protocol.account.v1.GameSessionUpdateInfo
	(*protocol.NoData)(nil),                        // 49: bgs.protocol.NoData
	(*protocol.NO_RESPONSE)(nil),                   // 50: bgs.protocol.NO_RESPONSE
}
var file_bgs_low_pb_client_account_service_proto_depIdxs = []int32{
	29, // 0: bgs.protocol.account.v1.ResolveAccountRequest.ref:type_name -> bgs.protocol.account.v1.AccountReference
	30, // 1: bgs.protocol.account.v1.ResolveAccountResponse.id:type_name -> bgs.protocol.account.v1.AccountId
	31, // 2: bgs.protocol.account.v1.GameAccountFlagUpdateRequest.game_account:type_name -> bgs.protocol.account.v1.GameAccountHandle
	32, // 3: bgs.protocol.account.v1.SubscriptionUpdateRequest.ref:type_name -> bgs.protocol.account.v1.SubscriberReference
	32, // 4: bgs.protocol.account.v1.SubscriptionUpdateResponse.ref:type_name -> bgs.protocol.account.v1.SubscriberReference
	33, // 5: bgs.protocol.account.v1.GetAccountStateRequest.entity_id:type_name -> bgs.protocol.EntityId
	34, // 6: bgs.protocol.account.v1.GetAccountStateRequest.options:type_name -> bgs.protocol.account.v1.AccountFieldOptions
	35, // 7: bgs.protocol.account.v1.GetAccountStateRequest.tags:type_name -> bgs.protocol.account.v1.AccountFieldTags
	36, // 8: bgs.protocol.account.v1.GetAccountStateResponse.state:type_name -> bgs.protocol.account.v1.AccountState
	35, // 9: bgs.protocol.account.v1.GetAccountStateResponse.tags:type_name -> bgs.protocol.account.v1.AccountFieldTags
	30, // 10: bgs.protocol.account.v1.GetSignedAccountStateRequest.account:type_name -> bgs.protocol.account.v1.AccountId
	33, // 11: bgs.protocol.account.v1.GetGameAccountStateRequest.account_id:type_name -> bgs.protocol.EntityId
	33, // 12: bgs.protocol.account.v1.GetGameAccountStateRequest.game_account_id:type_name -> bgs.protocol.EntityId
	37, // 13: bgs.protocol.account.v1.GetGameAccountStateRequest.options:type_name -> bgs.protocol.account.v1.GameAccountFieldOptions
	38, // 14: bgs.protocol.account.v1.GetGameAccountStateRequest.tags:type_name -> bgs.protocol.account.v1.GameAccountFieldTags
	39, // 15: bgs.protocol.account.v1.GetGameAccountStateResponse.state:type_name -> bgs.protocol.account.v1.GameAccountState
	38, // 16: bgs.protocol.account.v1.GetGameAccountStateResponse.tags:type_name -> bgs.protocol.account.v1.GameAccountFieldTags
	33, // 17: bgs.protocol.account.v1.GetLicensesRequest.target_id:type_name -> bgs.protocol.EntityId
	40, // 18: bgs.protocol.account.v1.GetLicensesResponse.licenses:type_name -> bgs.protocol.account.v1.AccountLicense
	33, // 19: bgs.protocol.account.v1.GetGameSessionInfoRequest.entity_id:type_name -> bgs.protocol.EntityId
	41, // 20: bgs.protocol.account.v1.GetGameSessionInfoResponse.session_info:type_name -> bgs.protocol.account.v1.GameSessionInfo
	33, // 21: bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest.game_account_id:type_name -> bgs.protocol.EntityId
	33, // 22: bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest.account_id:type_name -> bgs.protocol.EntityId
	42, // 23: bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse.game_time_remaining_info:type_name -> bgs.protocol.account.v1.GameTimeRemainingInfo
	33, // 24: bgs.protocol.account.v1.GetCAISInfoRequest.entity_id:type_name -> bgs.protocol.EntityId
	43, // 25: bgs.protocol.account.v1.GetCAISInfoResponse.cais_info:type_name -> bgs.protocol.account.v1.CAIS
	33, // 26: bgs.protocol.account.v1.GetAuthorizedDataRequest.entity_id:type_name -> bgs.protocol.EntityId
	44, // 27: bgs.protocol.account.v1.GetAuthorizedDataResponse.data:type_name -> bgs.protocol.account.v1.AuthorizedData
	33, // 28: bgs.protocol.account.v1.GetAccountInfoRequest.account_id:type_name -> bgs.protocol.EntityId
	45, // 29: bgs.protocol.account.v1.GetAccountInfoResponse.account_info:type_name -> bgs.protocol.account.v1.AccountInfo
	33, // 30: bgs.protocol.account.v1.GetAccountPlatformRestrictionsRequest.account_id:type_name -> bgs.protocol.EntityId
	46, // 31: bgs.protocol.account.v1.GetAccountPlatformRestrictionsResponse.restriction_info:type_name -> bgs.protocol.account.v1.AccountPlatformRestrictionInfo
	36, // 32: bgs.protocol.account.v1.AccountStateNotification.account_state:type_name -> bgs.protocol.account.v1.AccountState
	35, // 33: bgs.protocol.account.v1.AccountStateNotification.account_tags:type_name -> bgs.protocol.account.v1.AccountFieldTags
	39, // 34: bgs.protocol.account.v1.GameAccountStateNotification.game_account_state:type_name -> bgs.protocol.account.v1.GameAccountState
	38, // 35: bgs.protocol.account.v1.GameAccountStateNotification.game_account_tags:type_name -> bgs.protocol.account.v1.GameAccountFieldTags
	47, // 36: bgs.protocol.account.v1.GameAccountNotification.game_accounts:type_name -> bgs.protocol.account.v1.GameAccountList
	35, // 37: bgs.protocol.account.v1.GameAccountNotification.account_tags:type_name -> bgs.protocol.account.v1.AccountFieldTags
	31, // 38: bgs.protocol.account.v1.GameAccountSessionNotification.game_account:type_name -> bgs.protocol.account.v1.GameAccountHandle
	48, // 39: bgs.protocol.account.v1.GameAccountSessionNotification.session_info:type_name -> bgs.protocol.account.v1.GameSessionUpdateInfo
	0,  // 40: bgs.protocol.account.v1.AccountService.ResolveAccount:input_type -> bgs.protocol.account.v1.ResolveAccountRequest
	3,  // 41: bgs.protocol.account.v1.AccountService.Subscribe:input_type -> bgs.protocol.account.v1.SubscriptionUpdateRequest
	3,  // 42: bgs.protocol.account.v1.AccountService.Unsubscribe:input_type -> bgs.protocol.account.v1.SubscriptionUpdateRequest
	5,  // 43: bgs.protocol.account.v1.AccountService.GetAccountState:input_type -> bgs.protocol.account.v1.GetAccountStateRequest
	9,  // 44: bgs.protocol.account.v1.AccountService.GetGameAccountState:input_type -> bgs.protocol.account.v1.GetGameAccountStateRequest
	11, // 45: bgs.protocol.account.v1.AccountService.GetLicenses:input_type -> bgs.protocol.account.v1.GetLicensesRequest
	15, // 46: bgs.protocol.account.v1.AccountService.GetGameTimeRemainingInfo:input_type -> bgs.protocol.account.v1.GetGameTimeRemainingInfoRequest
	13, // 47: bgs.protocol.account.v1.AccountService.GetGameSessionInfo:input_type -> bgs.protocol.account.v1.GetGameSessionInfoRequest
	17, // 48: bgs.protocol.account.v1.AccountService.GetCAISInfo:input_type -> bgs.protocol.account.v1.GetCAISInfoRequest
	19, // 49: bgs.protocol.account.v1.AccountService.GetAuthorizedData:input_type -> bgs.protocol.account.v1.GetAuthorizedDataRequest
	7,  // 50: bgs.protocol.account.v1.AccountService.GetSignedAccountState:input_type -> bgs.protocol.account.v1.GetSignedAccountStateRequest
	21, // 51: bgs.protocol.account.v1.AccountService.GetAccountInfo:input_type -> bgs.protocol.account.v1.GetAccountInfoRequest
	23, // 52: bgs.protocol.account.v1.AccountService.GetAccountPlatformRestrictions:input_type -> bgs.protocol.account.v1.GetAccountPlatformRestrictionsRequest
	25, // 53: bgs.protocol.account.v1.AccountListener.OnAccountStateUpdated:input_type -> bgs.protocol.account.v1.AccountStateNotification
	26, // 54: bgs.protocol.account.v1.AccountListener.OnGameAccountStateUpdated:input_type -> bgs.protocol.account.v1.GameAccountStateNotification
	27, // 55: bgs.protocol.account.v1.AccountListener.OnGameAccountsUpdated:input_type -> bgs.protocol.account.v1.GameAccountNotification
	28, // 56: bgs.protocol.account.v1.AccountListener.OnGameSessionUpdated:input_type -> bgs.protocol.account.v1.GameAccountSessionNotification
	1,  // 57: bgs.protocol.account.v1.AccountService.ResolveAccount:output_type -> bgs.protocol.account.v1.ResolveAccountResponse
	4,  // 58: bgs.protocol.account.v1.AccountService.Subscribe:output_type -> bgs.protocol.account.v1.SubscriptionUpdateResponse
	49, // 59: bgs.protocol.account.v1.AccountService.Unsubscribe:output_type -> bgs.protocol.NoData
	6,  // 60: bgs.protocol.account.v1.AccountService.GetAccountState:output_type -> bgs.protocol.account.v1.GetAccountStateResponse
	10, // 61: bgs.protocol.account.v1.AccountService.GetGameAccountState:output_type -> bgs.protocol.account.v1.GetGameAccountStateResponse
	12, // 62: bgs.protocol.account.v1.AccountService.GetLicenses:output_type -> bgs.protocol.account.v1.GetLicensesResponse
	16, // 63: bgs.protocol.account.v1.AccountService.GetGameTimeRemainingInfo:output_type -> bgs.protocol.account.v1.GetGameTimeRemainingInfoResponse
	14, // 64: bgs.protocol.account.v1.AccountService.GetGameSessionInfo:output_type -> bgs.protocol.account.v1.GetGameSessionInfoResponse
	18, // 65: bgs.protocol.account.v1.AccountService.GetCAISInfo:output_type -> bgs.protocol.account.v1.GetCAISInfoResponse
	20, // 66: bgs.protocol.account.v1.AccountService.GetAuthorizedData:output_type -> bgs.protocol.account.v1.GetAuthorizedDataResponse
	8,  // 67: bgs.protocol.account.v1.AccountService.GetSignedAccountState:output_type -> bgs.protocol.account.v1.GetSignedAccountStateResponse
	22, // 68: bgs.protocol.account.v1.AccountService.GetAccountInfo:output_type -> bgs.protocol.account.v1.GetAccountInfoResponse
	24, // 69: bgs.protocol.account.v1.AccountService.GetAccountPlatformRestrictions:output_type -> bgs.protocol.account.v1.GetAccountPlatformRestrictionsResponse
	50, // 70: bgs.protocol.account.v1.AccountListener.OnAccountStateUpdated:output_type -> bgs.protocol.NO_RESPONSE
	50, // 71: bgs.protocol.account.v1.AccountListener.OnGameAccountStateUpdated:output_type -> bgs.protocol.NO_RESPONSE
	50, // 72: bgs.protocol.account.v1.AccountListener.OnGameAccountsUpdated:output_type -> bgs.protocol.NO_RESPONSE
	50, // 73: bgs.protocol.account.v1.AccountListener.OnGameSessionUpdated:output_type -> bgs.protocol.NO_RESPONSE
	57, // [57:74] is the sub-list for method output_type
	40, // [40:57] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_bgs_low_pb_client_account_service_proto_init() }
func file_bgs_low_pb_client_account_service_proto_init() {
	if File_bgs_low_pb_client_account_service_proto != nil {
		return
	}
	file_bgs_low_pb_client_account_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bgs_low_pb_client_account_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAccountFlagUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignedAccountStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignedAccountStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameAccountStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameAccountStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLicensesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLicensesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameSessionInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameSessionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameTimeRemainingInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameTimeRemainingInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCAISInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCAISInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizedDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizedDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountPlatformRestrictionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountPlatformRestrictionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountStateNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAccountStateNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAccountNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_account_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAccountSessionNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bgs_low_pb_client_account_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_bgs_low_pb_client_account_service_proto_goTypes,
		DependencyIndexes: file_bgs_low_pb_client_account_service_proto_depIdxs,
		MessageInfos:      file_bgs_low_pb_client_account_service_proto_msgTypes,
	}.Build()
	File_bgs_low_pb_client_account_service_proto = out.File
	file_bgs_low_pb_client_account_service_proto_rawDesc = nil
	file_bgs_low_pb_client_account_service_proto_goTypes = nil
	file_bgs_low_pb_client_account_service_proto_depIdxs = nil
}
