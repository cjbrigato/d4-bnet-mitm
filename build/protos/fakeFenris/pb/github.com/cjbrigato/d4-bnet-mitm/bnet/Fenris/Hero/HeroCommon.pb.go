// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: HeroCommon.proto

package Hero

import (
	Online "github.com/cjbrigato/d4-bnet-mitm/bnet/Fenris/Online"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VisualItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sno    *int32 `protobuf:"fixed32,1,opt,name=sno,def=-1" json:"sno,omitempty"`
	SnoDye *int32 `protobuf:"fixed32,2,opt,name=sno_dye,json=snoDye,def=-1" json:"sno_dye,omitempty"`
}

// Default values for VisualItem fields.
const (
	Default_VisualItem_Sno    = int32(-1)
	Default_VisualItem_SnoDye = int32(-1)
)

func (x *VisualItem) Reset() {
	*x = VisualItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisualItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisualItem) ProtoMessage() {}

func (x *VisualItem) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisualItem.ProtoReflect.Descriptor instead.
func (*VisualItem) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{0}
}

func (x *VisualItem) GetSno() int32 {
	if x != nil && x.Sno != nil {
		return *x.Sno
	}
	return Default_VisualItem_Sno
}

func (x *VisualItem) GetSnoDye() int32 {
	if x != nil && x.SnoDye != nil {
		return *x.SnoDye
	}
	return Default_VisualItem_SnoDye
}

type VisualEquipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VisualItem []*VisualItem `protobuf:"bytes,1,rep,name=visual_item,json=visualItem" json:"visual_item,omitempty"`
}

func (x *VisualEquipment) Reset() {
	*x = VisualEquipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisualEquipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisualEquipment) ProtoMessage() {}

func (x *VisualEquipment) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisualEquipment.ProtoReflect.Descriptor instead.
func (*VisualEquipment) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{1}
}

func (x *VisualEquipment) GetVisualItem() []*VisualItem {
	if x != nil {
		return x.VisualItem
	}
	return nil
}

type SavedQuest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnoQuest              *int32  `protobuf:"fixed32,1,req,name=sno_quest,json=snoQuest,def=-1" json:"sno_quest,omitempty"`
	DifficultyDeprecated  *int32  `protobuf:"zigzag32,2,opt,name=difficulty_deprecated,json=difficultyDeprecated,def=0" json:"difficulty_deprecated,omitempty"`
	CurrentStepUid        *int32  `protobuf:"zigzag32,3,req,name=current_step_uid,json=currentStepUid,def=-1" json:"current_step_uid,omitempty"`
	ObjectiveState        []int32 `protobuf:"zigzag32,4,rep,name=objective_state,json=objectiveState" json:"objective_state,omitempty"`
	FailureConditionState []int32 `protobuf:"zigzag32,5,rep,name=failure_condition_state,json=failureConditionState" json:"failure_condition_state,omitempty"`
}

// Default values for SavedQuest fields.
const (
	Default_SavedQuest_SnoQuest             = int32(-1)
	Default_SavedQuest_DifficultyDeprecated = int32(0)
	Default_SavedQuest_CurrentStepUid       = int32(-1)
)

func (x *SavedQuest) Reset() {
	*x = SavedQuest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavedQuest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedQuest) ProtoMessage() {}

func (x *SavedQuest) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedQuest.ProtoReflect.Descriptor instead.
func (*SavedQuest) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{2}
}

func (x *SavedQuest) GetSnoQuest() int32 {
	if x != nil && x.SnoQuest != nil {
		return *x.SnoQuest
	}
	return Default_SavedQuest_SnoQuest
}

func (x *SavedQuest) GetDifficultyDeprecated() int32 {
	if x != nil && x.DifficultyDeprecated != nil {
		return *x.DifficultyDeprecated
	}
	return Default_SavedQuest_DifficultyDeprecated
}

func (x *SavedQuest) GetCurrentStepUid() int32 {
	if x != nil && x.CurrentStepUid != nil {
		return *x.CurrentStepUid
	}
	return Default_SavedQuest_CurrentStepUid
}

func (x *SavedQuest) GetObjectiveState() []int32 {
	if x != nil {
		return x.ObjectiveState
	}
	return nil
}

func (x *SavedQuest) GetFailureConditionState() []int32 {
	if x != nil {
		return x.FailureConditionState
	}
	return nil
}

type LearnedLore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnoLoreLearned           []int32 `protobuf:"fixed32,1,rep,name=sno_lore_learned,json=snoLoreLearned" json:"sno_lore_learned,omitempty"`
	SnoLoreLearnedBitfield   []byte  `protobuf:"bytes,2,opt,name=sno_lore_learned_bitfield,json=snoLoreLearnedBitfield" json:"sno_lore_learned_bitfield,omitempty"`
	BitfieldLeadingNullBytes *int32  `protobuf:"varint,3,opt,name=bitfield_leading_null_bytes,json=bitfieldLeadingNullBytes" json:"bitfield_leading_null_bytes,omitempty"`
}

func (x *LearnedLore) Reset() {
	*x = LearnedLore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LearnedLore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LearnedLore) ProtoMessage() {}

func (x *LearnedLore) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LearnedLore.ProtoReflect.Descriptor instead.
func (*LearnedLore) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{3}
}

func (x *LearnedLore) GetSnoLoreLearned() []int32 {
	if x != nil {
		return x.SnoLoreLearned
	}
	return nil
}

func (x *LearnedLore) GetSnoLoreLearnedBitfield() []byte {
	if x != nil {
		return x.SnoLoreLearnedBitfield
	}
	return nil
}

func (x *LearnedLore) GetBitfieldLeadingNullBytes() int32 {
	if x != nil && x.BitfieldLeadingNullBytes != nil {
		return *x.BitfieldLeadingNullBytes
	}
	return 0
}

type ConversationCooldown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnoConversation *int32  `protobuf:"fixed32,1,req,name=sno_conversation,json=snoConversation" json:"sno_conversation,omitempty"`
	ExpirationTime  *uint64 `protobuf:"varint,2,req,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
}

func (x *ConversationCooldown) Reset() {
	*x = ConversationCooldown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationCooldown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationCooldown) ProtoMessage() {}

func (x *ConversationCooldown) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationCooldown.ProtoReflect.Descriptor instead.
func (*ConversationCooldown) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{4}
}

func (x *ConversationCooldown) GetSnoConversation() int32 {
	if x != nil && x.SnoConversation != nil {
		return *x.SnoConversation
	}
	return 0
}

func (x *ConversationCooldown) GetExpirationTime() uint64 {
	if x != nil && x.ExpirationTime != nil {
		return *x.ExpirationTime
	}
	return 0
}

type SavedConversations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnoSavedConversations         []int32                 `protobuf:"fixed32,2,rep,name=sno_saved_conversations,json=snoSavedConversations" json:"sno_saved_conversations,omitempty"`
	SnoSavedConversationsBitfield []byte                  `protobuf:"bytes,3,opt,name=sno_saved_conversations_bitfield,json=snoSavedConversationsBitfield" json:"sno_saved_conversations_bitfield,omitempty"`
	BitfieldLeadingNullBytes      *int32                  `protobuf:"varint,4,opt,name=bitfield_leading_null_bytes,json=bitfieldLeadingNullBytes" json:"bitfield_leading_null_bytes,omitempty"`
	ConversationCooldowns         []*ConversationCooldown `protobuf:"bytes,5,rep,name=conversation_cooldowns,json=conversationCooldowns" json:"conversation_cooldowns,omitempty"`
}

func (x *SavedConversations) Reset() {
	*x = SavedConversations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavedConversations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedConversations) ProtoMessage() {}

func (x *SavedConversations) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedConversations.ProtoReflect.Descriptor instead.
func (*SavedConversations) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{5}
}

func (x *SavedConversations) GetSnoSavedConversations() []int32 {
	if x != nil {
		return x.SnoSavedConversations
	}
	return nil
}

func (x *SavedConversations) GetSnoSavedConversationsBitfield() []byte {
	if x != nil {
		return x.SnoSavedConversationsBitfield
	}
	return nil
}

func (x *SavedConversations) GetBitfieldLeadingNullBytes() int32 {
	if x != nil && x.BitfieldLeadingNullBytes != nil {
		return *x.BitfieldLeadingNullBytes
	}
	return 0
}

func (x *SavedConversations) GetConversationCooldowns() []*ConversationCooldown {
	if x != nil {
		return x.ConversationCooldowns
	}
	return nil
}

type SavePointData_Proto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnoWorld        *int32  `protobuf:"fixed32,1,req,name=sno_world,json=snoWorld,def=-1" json:"sno_world,omitempty"`
	SavepointNumber *int32  `protobuf:"zigzag32,2,req,name=savepoint_number,json=savepointNumber,def=-1" json:"savepoint_number,omitempty"`
	CreatesPortal   *uint32 `protobuf:"varint,3,req,name=creates_portal,json=createsPortal,def=0" json:"creates_portal,omitempty"`
}

// Default values for SavePointData_Proto fields.
const (
	Default_SavePointData_Proto_SnoWorld        = int32(-1)
	Default_SavePointData_Proto_SavepointNumber = int32(-1)
	Default_SavePointData_Proto_CreatesPortal   = uint32(0)
)

func (x *SavePointData_Proto) Reset() {
	*x = SavePointData_Proto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePointData_Proto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePointData_Proto) ProtoMessage() {}

func (x *SavePointData_Proto) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePointData_Proto.ProtoReflect.Descriptor instead.
func (*SavePointData_Proto) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{6}
}

func (x *SavePointData_Proto) GetSnoWorld() int32 {
	if x != nil && x.SnoWorld != nil {
		return *x.SnoWorld
	}
	return Default_SavePointData_Proto_SnoWorld
}

func (x *SavePointData_Proto) GetSavepointNumber() int32 {
	if x != nil && x.SavepointNumber != nil {
		return *x.SavepointNumber
	}
	return Default_SavePointData_Proto_SavepointNumber
}

func (x *SavePointData_Proto) GetCreatesPortal() uint32 {
	if x != nil && x.CreatesPortal != nil {
		return *x.CreatesPortal
	}
	return Default_SavePointData_Proto_CreatesPortal
}

type Skill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnoSkill *int32 `protobuf:"fixed32,1,req,name=sno_skill,json=snoSkill,def=-1" json:"sno_skill,omitempty"`
}

// Default values for Skill fields.
const (
	Default_Skill_SnoSkill = int32(-1)
)

func (x *Skill) Reset() {
	*x = Skill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skill) ProtoMessage() {}

func (x *Skill) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skill.ProtoReflect.Descriptor instead.
func (*Skill) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{7}
}

func (x *Skill) GetSnoSkill() int32 {
	if x != nil && x.SnoSkill != nil {
		return *x.SnoSkill
	}
	return Default_Skill_SnoSkill
}

type SavedItemLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X *int32 `protobuf:"zigzag32,1,req,name=x,def=-1" json:"x,omitempty"`
	Y *int32 `protobuf:"zigzag32,2,req,name=y,def=-1" json:"y,omitempty"`
}

// Default values for SavedItemLink fields.
const (
	Default_SavedItemLink_X = int32(-1)
	Default_SavedItemLink_Y = int32(-1)
)

func (x *SavedItemLink) Reset() {
	*x = SavedItemLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavedItemLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedItemLink) ProtoMessage() {}

func (x *SavedItemLink) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedItemLink.ProtoReflect.Descriptor instead.
func (*SavedItemLink) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{8}
}

func (x *SavedItemLink) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return Default_SavedItemLink_X
}

func (x *SavedItemLink) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return Default_SavedItemLink_Y
}

type Timestamps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime *int64 `protobuf:"zigzag64,1,req,name=create_time,json=createTime" json:"create_time,omitempty"`
	DeleteTime *int64 `protobuf:"zigzag64,2,opt,name=delete_time,json=deleteTime" json:"delete_time,omitempty"`
}

func (x *Timestamps) Reset() {
	*x = Timestamps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamps) ProtoMessage() {}

func (x *Timestamps) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamps.ProtoReflect.Descriptor instead.
func (*Timestamps) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{9}
}

func (x *Timestamps) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *Timestamps) GetDeleteTime() int64 {
	if x != nil && x.DeleteTime != nil {
		return *x.DeleteTime
	}
	return 0
}

type NameText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
}

func (x *NameText) Reset() {
	*x = NameText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameText) ProtoMessage() {}

func (x *NameText) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameText.ProtoReflect.Descriptor instead.
func (*NameText) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{10}
}

func (x *NameText) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type HeroList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroIds []string `protobuf:"bytes,1,rep,name=hero_ids,json=heroIds" json:"hero_ids,omitempty"`
}

func (x *HeroList) Reset() {
	*x = HeroList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroList) ProtoMessage() {}

func (x *HeroList) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroList.ProtoReflect.Descriptor instead.
func (*HeroList) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{11}
}

func (x *HeroList) GetHeroIds() []string {
	if x != nil {
		return x.HeroIds
	}
	return nil
}

type SavedQuestList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SavedQuests []*SavedQuest `protobuf:"bytes,1,rep,name=saved_quests,json=savedQuests" json:"saved_quests,omitempty"`
}

func (x *SavedQuestList) Reset() {
	*x = SavedQuestList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavedQuestList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedQuestList) ProtoMessage() {}

func (x *SavedQuestList) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedQuestList.ProtoReflect.Descriptor instead.
func (*SavedQuestList) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{12}
}

func (x *SavedQuestList) GetSavedQuests() []*SavedQuest {
	if x != nil {
		return x.SavedQuests
	}
	return nil
}

type WorldCreateDebugOverrides struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorldSeed                   *int32  `protobuf:"varint,1,opt,name=world_seed,json=worldSeed" json:"world_seed,omitempty"`
	ForcedLabels                []int32 `protobuf:"fixed32,2,rep,name=forced_labels,json=forcedLabels" json:"forced_labels,omitempty"`
	ForcedDungeonStates         []int32 `protobuf:"fixed32,3,rep,name=forced_dungeon_states,json=forcedDungeonStates" json:"forced_dungeon_states,omitempty"`
	DisableDefaultLabels        *bool   `protobuf:"varint,4,opt,name=disable_default_labels,json=disableDefaultLabels" json:"disable_default_labels,omitempty"`
	DisableDefaultDungeonStates *bool   `protobuf:"varint,5,opt,name=disable_default_dungeon_states,json=disableDefaultDungeonStates" json:"disable_default_dungeon_states,omitempty"`
	ForcedEventIndex            *int32  `protobuf:"varint,6,opt,name=forced_event_index,json=forcedEventIndex" json:"forced_event_index,omitempty"`
}

func (x *WorldCreateDebugOverrides) Reset() {
	*x = WorldCreateDebugOverrides{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldCreateDebugOverrides) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldCreateDebugOverrides) ProtoMessage() {}

func (x *WorldCreateDebugOverrides) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldCreateDebugOverrides.ProtoReflect.Descriptor instead.
func (*WorldCreateDebugOverrides) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{13}
}

func (x *WorldCreateDebugOverrides) GetWorldSeed() int32 {
	if x != nil && x.WorldSeed != nil {
		return *x.WorldSeed
	}
	return 0
}

func (x *WorldCreateDebugOverrides) GetForcedLabels() []int32 {
	if x != nil {
		return x.ForcedLabels
	}
	return nil
}

func (x *WorldCreateDebugOverrides) GetForcedDungeonStates() []int32 {
	if x != nil {
		return x.ForcedDungeonStates
	}
	return nil
}

func (x *WorldCreateDebugOverrides) GetDisableDefaultLabels() bool {
	if x != nil && x.DisableDefaultLabels != nil {
		return *x.DisableDefaultLabels
	}
	return false
}

func (x *WorldCreateDebugOverrides) GetDisableDefaultDungeonStates() bool {
	if x != nil && x.DisableDefaultDungeonStates != nil {
		return *x.DisableDefaultDungeonStates
	}
	return false
}

func (x *WorldCreateDebugOverrides) GetForcedEventIndex() int32 {
	if x != nil && x.ForcedEventIndex != nil {
		return *x.ForcedEventIndex
	}
	return 0
}

type KeyedDungeonData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnoWorld           *int32             `protobuf:"fixed32,1,opt,name=sno_world,json=snoWorld,def=-1" json:"sno_world,omitempty"`
	KeyedDungeonTier   *int32             `protobuf:"zigzag32,3,opt,name=keyed_dungeon_tier,json=keyedDungeonTier,def=-1" json:"keyed_dungeon_tier,omitempty"`
	ReviveCount        *int32             `protobuf:"zigzag32,4,opt,name=revive_count,json=reviveCount,def=-1" json:"revive_count,omitempty"`
	KeyedDungeonGameId *Online.GameHandle `protobuf:"bytes,5,opt,name=keyed_dungeon_game_id,json=keyedDungeonGameId" json:"keyed_dungeon_game_id,omitempty"`
	SnoDungeonAffixes  []int32            `protobuf:"fixed32,6,rep,name=sno_dungeon_affixes,json=snoDungeonAffixes" json:"sno_dungeon_affixes,omitempty"`
	GbidType           *int32             `protobuf:"fixed32,7,opt,name=gbid_type,json=gbidType" json:"gbid_type,omitempty"`
}

// Default values for KeyedDungeonData fields.
const (
	Default_KeyedDungeonData_SnoWorld         = int32(-1)
	Default_KeyedDungeonData_KeyedDungeonTier = int32(-1)
	Default_KeyedDungeonData_ReviveCount      = int32(-1)
)

func (x *KeyedDungeonData) Reset() {
	*x = KeyedDungeonData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyedDungeonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyedDungeonData) ProtoMessage() {}

func (x *KeyedDungeonData) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyedDungeonData.ProtoReflect.Descriptor instead.
func (*KeyedDungeonData) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{14}
}

func (x *KeyedDungeonData) GetSnoWorld() int32 {
	if x != nil && x.SnoWorld != nil {
		return *x.SnoWorld
	}
	return Default_KeyedDungeonData_SnoWorld
}

func (x *KeyedDungeonData) GetKeyedDungeonTier() int32 {
	if x != nil && x.KeyedDungeonTier != nil {
		return *x.KeyedDungeonTier
	}
	return Default_KeyedDungeonData_KeyedDungeonTier
}

func (x *KeyedDungeonData) GetReviveCount() int32 {
	if x != nil && x.ReviveCount != nil {
		return *x.ReviveCount
	}
	return Default_KeyedDungeonData_ReviveCount
}

func (x *KeyedDungeonData) GetKeyedDungeonGameId() *Online.GameHandle {
	if x != nil {
		return x.KeyedDungeonGameId
	}
	return nil
}

func (x *KeyedDungeonData) GetSnoDungeonAffixes() []int32 {
	if x != nil {
		return x.SnoDungeonAffixes
	}
	return nil
}

func (x *KeyedDungeonData) GetGbidType() int32 {
	if x != nil && x.GbidType != nil {
		return *x.GbidType
	}
	return 0
}

type CampaignState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceBnetAccountId       *uint32                    `protobuf:"varint,1,opt,name=source_bnet_account_id,json=sourceBnetAccountId" json:"source_bnet_account_id,omitempty"`
	SourceGameAccountId       *uint32                    `protobuf:"varint,2,opt,name=source_game_account_id,json=sourceGameAccountId" json:"source_game_account_id,omitempty"`
	SnoQuest                  []uint32                   `protobuf:"fixed32,3,rep,name=sno_quest,json=snoQuest" json:"sno_quest,omitempty"`
	KeyedDungeonData          *KeyedDungeonData          `protobuf:"bytes,4,opt,name=keyed_dungeon_data,json=keyedDungeonData" json:"keyed_dungeon_data,omitempty"`
	WorldCreateDebugOverrides *WorldCreateDebugOverrides `protobuf:"bytes,5,opt,name=world_create_debug_overrides,json=worldCreateDebugOverrides" json:"world_create_debug_overrides,omitempty"`
	WorldTier                 *int32                     `protobuf:"zigzag32,6,opt,name=world_tier,json=worldTier" json:"world_tier,omitempty"`
}

func (x *CampaignState) Reset() {
	*x = CampaignState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignState) ProtoMessage() {}

func (x *CampaignState) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignState.ProtoReflect.Descriptor instead.
func (*CampaignState) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{15}
}

func (x *CampaignState) GetSourceBnetAccountId() uint32 {
	if x != nil && x.SourceBnetAccountId != nil {
		return *x.SourceBnetAccountId
	}
	return 0
}

func (x *CampaignState) GetSourceGameAccountId() uint32 {
	if x != nil && x.SourceGameAccountId != nil {
		return *x.SourceGameAccountId
	}
	return 0
}

func (x *CampaignState) GetSnoQuest() []uint32 {
	if x != nil {
		return x.SnoQuest
	}
	return nil
}

func (x *CampaignState) GetKeyedDungeonData() *KeyedDungeonData {
	if x != nil {
		return x.KeyedDungeonData
	}
	return nil
}

func (x *CampaignState) GetWorldCreateDebugOverrides() *WorldCreateDebugOverrides {
	if x != nil {
		return x.WorldCreateDebugOverrides
	}
	return nil
}

func (x *CampaignState) GetWorldTier() int32 {
	if x != nil && x.WorldTier != nil {
		return *x.WorldTier
	}
	return 0
}

type GameQuestState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnoSubzone                   *int32 `protobuf:"fixed32,1,opt,name=sno_subzone,json=snoSubzone,def=-1" json:"sno_subzone,omitempty"`
	SnoInstanceQuest             *int32 `protobuf:"fixed32,2,opt,name=sno_instance_quest,json=snoInstanceQuest,def=-1" json:"sno_instance_quest,omitempty"`
	PhaseUid                     *int32 `protobuf:"zigzag32,3,opt,name=phase_uid,json=phaseUid,def=-1" json:"phase_uid,omitempty"`
	PartyInstanceContentComplete *bool  `protobuf:"varint,4,opt,name=party_instance_content_complete,json=partyInstanceContentComplete" json:"party_instance_content_complete,omitempty"`
}

// Default values for GameQuestState fields.
const (
	Default_GameQuestState_SnoSubzone       = int32(-1)
	Default_GameQuestState_SnoInstanceQuest = int32(-1)
	Default_GameQuestState_PhaseUid         = int32(-1)
)

func (x *GameQuestState) Reset() {
	*x = GameQuestState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameQuestState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameQuestState) ProtoMessage() {}

func (x *GameQuestState) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameQuestState.ProtoReflect.Descriptor instead.
func (*GameQuestState) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{16}
}

func (x *GameQuestState) GetSnoSubzone() int32 {
	if x != nil && x.SnoSubzone != nil {
		return *x.SnoSubzone
	}
	return Default_GameQuestState_SnoSubzone
}

func (x *GameQuestState) GetSnoInstanceQuest() int32 {
	if x != nil && x.SnoInstanceQuest != nil {
		return *x.SnoInstanceQuest
	}
	return Default_GameQuestState_SnoInstanceQuest
}

func (x *GameQuestState) GetPhaseUid() int32 {
	if x != nil && x.PhaseUid != nil {
		return *x.PhaseUid
	}
	return Default_GameQuestState_PhaseUid
}

func (x *GameQuestState) GetPartyInstanceContentComplete() bool {
	if x != nil && x.PartyInstanceContentComplete != nil {
		return *x.PartyInstanceContentComplete
	}
	return false
}

type MountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnoMount *int32 `protobuf:"fixed32,1,req,name=sno_mount,json=snoMount,def=-1" json:"sno_mount,omitempty"`
}

// Default values for MountData fields.
const (
	Default_MountData_SnoMount = int32(-1)
)

func (x *MountData) Reset() {
	*x = MountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountData) ProtoMessage() {}

func (x *MountData) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountData.ProtoReflect.Descriptor instead.
func (*MountData) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{17}
}

func (x *MountData) GetSnoMount() int32 {
	if x != nil && x.SnoMount != nil {
		return *x.SnoMount
	}
	return Default_MountData_SnoMount
}

type MountSavedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mounts         []*MountData `protobuf:"bytes,1,rep,name=mounts" json:"mounts,omitempty"`
	UnlockedRiding *bool        `protobuf:"varint,2,opt,name=unlocked_riding,json=unlockedRiding" json:"unlocked_riding,omitempty"`
}

func (x *MountSavedData) Reset() {
	*x = MountSavedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountSavedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountSavedData) ProtoMessage() {}

func (x *MountSavedData) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountSavedData.ProtoReflect.Descriptor instead.
func (*MountSavedData) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{18}
}

func (x *MountSavedData) GetMounts() []*MountData {
	if x != nil {
		return x.Mounts
	}
	return nil
}

func (x *MountSavedData) GetUnlockedRiding() bool {
	if x != nil && x.UnlockedRiding != nil {
		return *x.UnlockedRiding
	}
	return false
}

type SocialWheelOverride struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WheelId       *uint32 `protobuf:"varint,1,opt,name=wheel_id,json=wheelId" json:"wheel_id,omitempty"`
	SlotId        *uint32 `protobuf:"varint,2,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	QuickActionId *uint32 `protobuf:"varint,3,opt,name=quick_action_id,json=quickActionId" json:"quick_action_id,omitempty"`
	SnoEmote      *uint32 `protobuf:"fixed32,4,opt,name=sno_emote,json=snoEmote" json:"sno_emote,omitempty"`
	SnoConsumable *uint32 `protobuf:"fixed32,5,opt,name=sno_consumable,json=snoConsumable" json:"sno_consumable,omitempty"`
}

func (x *SocialWheelOverride) Reset() {
	*x = SocialWheelOverride{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialWheelOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialWheelOverride) ProtoMessage() {}

func (x *SocialWheelOverride) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialWheelOverride.ProtoReflect.Descriptor instead.
func (*SocialWheelOverride) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{19}
}

func (x *SocialWheelOverride) GetWheelId() uint32 {
	if x != nil && x.WheelId != nil {
		return *x.WheelId
	}
	return 0
}

func (x *SocialWheelOverride) GetSlotId() uint32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

func (x *SocialWheelOverride) GetQuickActionId() uint32 {
	if x != nil && x.QuickActionId != nil {
		return *x.QuickActionId
	}
	return 0
}

func (x *SocialWheelOverride) GetSnoEmote() uint32 {
	if x != nil && x.SnoEmote != nil {
		return *x.SnoEmote
	}
	return 0
}

func (x *SocialWheelOverride) GetSnoConsumable() uint32 {
	if x != nil && x.SnoConsumable != nil {
		return *x.SnoConsumable
	}
	return 0
}

type SocialWheelConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WheelOverrides []*SocialWheelOverride `protobuf:"bytes,1,rep,name=wheel_overrides,json=wheelOverrides" json:"wheel_overrides,omitempty"`
}

func (x *SocialWheelConfiguration) Reset() {
	*x = SocialWheelConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialWheelConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialWheelConfiguration) ProtoMessage() {}

func (x *SocialWheelConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialWheelConfiguration.ProtoReflect.Descriptor instead.
func (*SocialWheelConfiguration) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{20}
}

func (x *SocialWheelConfiguration) GetWheelOverrides() []*SocialWheelOverride {
	if x != nil {
		return x.WheelOverrides
	}
	return nil
}

type TransmogSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot    *int32 `protobuf:"varint,1,opt,name=slot" json:"slot,omitempty"`
	ItemSno *int32 `protobuf:"fixed32,2,opt,name=item_sno,json=itemSno,def=-1" json:"item_sno,omitempty"`
	DyeSno  *int32 `protobuf:"fixed32,3,opt,name=dye_sno,json=dyeSno,def=-1" json:"dye_sno,omitempty"`
	Enabled *bool  `protobuf:"varint,4,opt,name=enabled,def=1" json:"enabled,omitempty"`
}

// Default values for TransmogSlot fields.
const (
	Default_TransmogSlot_ItemSno = int32(-1)
	Default_TransmogSlot_DyeSno  = int32(-1)
	Default_TransmogSlot_Enabled = bool(true)
)

func (x *TransmogSlot) Reset() {
	*x = TransmogSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransmogSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransmogSlot) ProtoMessage() {}

func (x *TransmogSlot) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransmogSlot.ProtoReflect.Descriptor instead.
func (*TransmogSlot) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{21}
}

func (x *TransmogSlot) GetSlot() int32 {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return 0
}

func (x *TransmogSlot) GetItemSno() int32 {
	if x != nil && x.ItemSno != nil {
		return *x.ItemSno
	}
	return Default_TransmogSlot_ItemSno
}

func (x *TransmogSlot) GetDyeSno() int32 {
	if x != nil && x.DyeSno != nil {
		return *x.DyeSno
	}
	return Default_TransmogSlot_DyeSno
}

func (x *TransmogSlot) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return Default_TransmogSlot_Enabled
}

type AssetListDataStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetIds         []int32 `protobuf:"fixed32,1,rep,name=asset_ids,json=assetIds" json:"asset_ids,omitempty"`
	Bitfield         []byte  `protobuf:"bytes,2,opt,name=bitfield" json:"bitfield,omitempty"`
	LeadingNullBytes *int32  `protobuf:"varint,3,opt,name=leading_null_bytes,json=leadingNullBytes" json:"leading_null_bytes,omitempty"`
}

func (x *AssetListDataStore) Reset() {
	*x = AssetListDataStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetListDataStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetListDataStore) ProtoMessage() {}

func (x *AssetListDataStore) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetListDataStore.ProtoReflect.Descriptor instead.
func (*AssetListDataStore) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{22}
}

func (x *AssetListDataStore) GetAssetIds() []int32 {
	if x != nil {
		return x.AssetIds
	}
	return nil
}

func (x *AssetListDataStore) GetBitfield() []byte {
	if x != nil {
		return x.Bitfield
	}
	return nil
}

func (x *AssetListDataStore) GetLeadingNullBytes() int32 {
	if x != nil && x.LeadingNullBytes != nil {
		return *x.LeadingNullBytes
	}
	return 0
}

type DesignerVariableDataStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackedValue *int32 `protobuf:"varint,1,opt,name=tracked_value,json=trackedValue" json:"tracked_value,omitempty"`
	ResetData    *int32 `protobuf:"varint,2,opt,name=reset_data,json=resetData" json:"reset_data,omitempty"`
}

func (x *DesignerVariableDataStore) Reset() {
	*x = DesignerVariableDataStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesignerVariableDataStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesignerVariableDataStore) ProtoMessage() {}

func (x *DesignerVariableDataStore) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesignerVariableDataStore.ProtoReflect.Descriptor instead.
func (*DesignerVariableDataStore) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{23}
}

func (x *DesignerVariableDataStore) GetTrackedValue() int32 {
	if x != nil && x.TrackedValue != nil {
		return *x.TrackedValue
	}
	return 0
}

func (x *DesignerVariableDataStore) GetResetData() int32 {
	if x != nil && x.ResetData != nil {
		return *x.ResetData
	}
	return 0
}

type AssetListExDesignerVariableDataStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetList   *AssetListDataStore          `protobuf:"bytes,1,opt,name=asset_list,json=assetList" json:"asset_list,omitempty"`
	PackedDatas []*DesignerVariableDataStore `protobuf:"bytes,2,rep,name=packed_datas,json=packedDatas" json:"packed_datas,omitempty"`
	LooseDatas  []*DesignerVariableDataStore `protobuf:"bytes,3,rep,name=loose_datas,json=looseDatas" json:"loose_datas,omitempty"`
}

func (x *AssetListExDesignerVariableDataStore) Reset() {
	*x = AssetListExDesignerVariableDataStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetListExDesignerVariableDataStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetListExDesignerVariableDataStore) ProtoMessage() {}

func (x *AssetListExDesignerVariableDataStore) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetListExDesignerVariableDataStore.ProtoReflect.Descriptor instead.
func (*AssetListExDesignerVariableDataStore) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{24}
}

func (x *AssetListExDesignerVariableDataStore) GetAssetList() *AssetListDataStore {
	if x != nil {
		return x.AssetList
	}
	return nil
}

func (x *AssetListExDesignerVariableDataStore) GetPackedDatas() []*DesignerVariableDataStore {
	if x != nil {
		return x.PackedDatas
	}
	return nil
}

func (x *AssetListExDesignerVariableDataStore) GetLooseDatas() []*DesignerVariableDataStore {
	if x != nil {
		return x.LooseDatas
	}
	return nil
}

type ParagonBoardSavedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchasedNodesBitfield        []byte   `protobuf:"bytes,1,opt,name=purchased_nodes_bitfield,json=purchasedNodesBitfield" json:"purchased_nodes_bitfield,omitempty"`
	LastPurchasedNodeIndex        *uint32  `protobuf:"varint,2,opt,name=last_purchased_node_index,json=lastPurchasedNodeIndex" json:"last_purchased_node_index,omitempty"`
	SocketedGlyphSnos             []int32  `protobuf:"fixed32,3,rep,name=socketed_glyph_snos,json=socketedGlyphSnos" json:"socketed_glyph_snos,omitempty"`
	EquippedBoardSnos             []int32  `protobuf:"fixed32,4,rep,name=equipped_board_snos,json=equippedBoardSnos" json:"equipped_board_snos,omitempty"`
	EquippedBoardRotationBitfield []byte   `protobuf:"bytes,5,opt,name=equipped_board_rotation_bitfield,json=equippedBoardRotationBitfield" json:"equipped_board_rotation_bitfield,omitempty"`
	EquippedBoardGateNodeIndexes  []uint32 `protobuf:"varint,6,rep,name=equipped_board_gate_node_indexes,json=equippedBoardGateNodeIndexes" json:"equipped_board_gate_node_indexes,omitempty"`
	BoardEquipIndexes             []uint32 `protobuf:"varint,7,rep,name=board_equip_indexes,json=boardEquipIndexes" json:"board_equip_indexes,omitempty"`
}

func (x *ParagonBoardSavedData) Reset() {
	*x = ParagonBoardSavedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParagonBoardSavedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParagonBoardSavedData) ProtoMessage() {}

func (x *ParagonBoardSavedData) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParagonBoardSavedData.ProtoReflect.Descriptor instead.
func (*ParagonBoardSavedData) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{25}
}

func (x *ParagonBoardSavedData) GetPurchasedNodesBitfield() []byte {
	if x != nil {
		return x.PurchasedNodesBitfield
	}
	return nil
}

func (x *ParagonBoardSavedData) GetLastPurchasedNodeIndex() uint32 {
	if x != nil && x.LastPurchasedNodeIndex != nil {
		return *x.LastPurchasedNodeIndex
	}
	return 0
}

func (x *ParagonBoardSavedData) GetSocketedGlyphSnos() []int32 {
	if x != nil {
		return x.SocketedGlyphSnos
	}
	return nil
}

func (x *ParagonBoardSavedData) GetEquippedBoardSnos() []int32 {
	if x != nil {
		return x.EquippedBoardSnos
	}
	return nil
}

func (x *ParagonBoardSavedData) GetEquippedBoardRotationBitfield() []byte {
	if x != nil {
		return x.EquippedBoardRotationBitfield
	}
	return nil
}

func (x *ParagonBoardSavedData) GetEquippedBoardGateNodeIndexes() []uint32 {
	if x != nil {
		return x.EquippedBoardGateNodeIndexes
	}
	return nil
}

func (x *ParagonBoardSavedData) GetBoardEquipIndexes() []uint32 {
	if x != nil {
		return x.BoardEquipIndexes
	}
	return nil
}

type ParagonGlyphData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnoGlyph        *int32  `protobuf:"fixed32,1,opt,name=sno_glyph,json=snoGlyph,def=-1" json:"sno_glyph,omitempty"`
	GlyphExperience *uint32 `protobuf:"varint,2,opt,name=glyph_experience,json=glyphExperience,def=0" json:"glyph_experience,omitempty"`
}

// Default values for ParagonGlyphData fields.
const (
	Default_ParagonGlyphData_SnoGlyph        = int32(-1)
	Default_ParagonGlyphData_GlyphExperience = uint32(0)
)

func (x *ParagonGlyphData) Reset() {
	*x = ParagonGlyphData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParagonGlyphData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParagonGlyphData) ProtoMessage() {}

func (x *ParagonGlyphData) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParagonGlyphData.ProtoReflect.Descriptor instead.
func (*ParagonGlyphData) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{26}
}

func (x *ParagonGlyphData) GetSnoGlyph() int32 {
	if x != nil && x.SnoGlyph != nil {
		return *x.SnoGlyph
	}
	return Default_ParagonGlyphData_SnoGlyph
}

func (x *ParagonGlyphData) GetGlyphExperience() uint32 {
	if x != nil && x.GlyphExperience != nil {
		return *x.GlyphExperience
	}
	return Default_ParagonGlyphData_GlyphExperience
}

type ParagonGlyphSavedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlyphData []*ParagonGlyphData `protobuf:"bytes,1,rep,name=glyph_data,json=glyphData" json:"glyph_data,omitempty"`
}

func (x *ParagonGlyphSavedData) Reset() {
	*x = ParagonGlyphSavedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParagonGlyphSavedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParagonGlyphSavedData) ProtoMessage() {}

func (x *ParagonGlyphSavedData) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParagonGlyphSavedData.ProtoReflect.Descriptor instead.
func (*ParagonGlyphSavedData) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{27}
}

func (x *ParagonGlyphSavedData) GetGlyphData() []*ParagonGlyphData {
	if x != nil {
		return x.GlyphData
	}
	return nil
}

type PlayerTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnoPrefix *int32 `protobuf:"fixed32,1,opt,name=sno_prefix,json=snoPrefix,def=-1" json:"sno_prefix,omitempty"`
	SnoSuffix *int32 `protobuf:"fixed32,2,opt,name=sno_suffix,json=snoSuffix,def=-1" json:"sno_suffix,omitempty"`
}

// Default values for PlayerTitle fields.
const (
	Default_PlayerTitle_SnoPrefix = int32(-1)
	Default_PlayerTitle_SnoSuffix = int32(-1)
)

func (x *PlayerTitle) Reset() {
	*x = PlayerTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerTitle) ProtoMessage() {}

func (x *PlayerTitle) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerTitle.ProtoReflect.Descriptor instead.
func (*PlayerTitle) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{28}
}

func (x *PlayerTitle) GetSnoPrefix() int32 {
	if x != nil && x.SnoPrefix != nil {
		return *x.SnoPrefix
	}
	return Default_PlayerTitle_SnoPrefix
}

func (x *PlayerTitle) GetSnoSuffix() int32 {
	if x != nil && x.SnoSuffix != nil {
		return *x.SnoSuffix
	}
	return Default_PlayerTitle_SnoSuffix
}

type BloodSealData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnoBloodseal        *int32  `protobuf:"fixed32,1,opt,name=sno_bloodseal,json=snoBloodseal,def=-1" json:"sno_bloodseal,omitempty"`
	BloodsealExperience *uint32 `protobuf:"varint,2,opt,name=bloodseal_experience,json=bloodsealExperience,def=0" json:"bloodseal_experience,omitempty"`
}

// Default values for BloodSealData fields.
const (
	Default_BloodSealData_SnoBloodseal        = int32(-1)
	Default_BloodSealData_BloodsealExperience = uint32(0)
)

func (x *BloodSealData) Reset() {
	*x = BloodSealData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BloodSealData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BloodSealData) ProtoMessage() {}

func (x *BloodSealData) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BloodSealData.ProtoReflect.Descriptor instead.
func (*BloodSealData) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{29}
}

func (x *BloodSealData) GetSnoBloodseal() int32 {
	if x != nil && x.SnoBloodseal != nil {
		return *x.SnoBloodseal
	}
	return Default_BloodSealData_SnoBloodseal
}

func (x *BloodSealData) GetBloodsealExperience() uint32 {
	if x != nil && x.BloodsealExperience != nil {
		return *x.BloodsealExperience
	}
	return Default_BloodSealData_BloodsealExperience
}

type BloodSealSavedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnedBloodseals       []*BloodSealData `protobuf:"bytes,1,rep,name=owned_bloodseals,json=ownedBloodseals" json:"owned_bloodseals,omitempty"`
	SnoEquippedBloodseals []int32          `protobuf:"fixed32,2,rep,name=sno_equipped_bloodseals,json=snoEquippedBloodseals" json:"sno_equipped_bloodseals,omitempty"`
}

func (x *BloodSealSavedData) Reset() {
	*x = BloodSealSavedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HeroCommon_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BloodSealSavedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BloodSealSavedData) ProtoMessage() {}

func (x *BloodSealSavedData) ProtoReflect() protoreflect.Message {
	mi := &file_HeroCommon_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BloodSealSavedData.ProtoReflect.Descriptor instead.
func (*BloodSealSavedData) Descriptor() ([]byte, []int) {
	return file_HeroCommon_proto_rawDescGZIP(), []int{30}
}

func (x *BloodSealSavedData) GetOwnedBloodseals() []*BloodSealData {
	if x != nil {
		return x.OwnedBloodseals
	}
	return nil
}

func (x *BloodSealSavedData) GetSnoEquippedBloodseals() []int32 {
	if x != nil {
		return x.SnoEquippedBloodseals
	}
	return nil
}

var File_HeroCommon_proto protoreflect.FileDescriptor

var file_HeroCommon_proto_rawDesc = []byte{
	0x0a, 0x10, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0b, 0x46, 0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x1a,
	0x12, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x0a, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x14, 0x0a, 0x03, 0x73, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0f, 0x3a, 0x02,
	0x2d, 0x31, 0x52, 0x03, 0x73, 0x6e, 0x6f, 0x12, 0x1b, 0x0a, 0x07, 0x73, 0x6e, 0x6f, 0x5f, 0x64,
	0x79, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0f, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x06, 0x73, 0x6e,
	0x6f, 0x44, 0x79, 0x65, 0x22, 0x4b, 0x0a, 0x0f, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x76, 0x69, 0x73, 0x75, 0x61,
	0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46,
	0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x2e, 0x56, 0x69, 0x73, 0x75, 0x61,
	0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x22, 0xf4, 0x01, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x09, 0x73, 0x6e, 0x6f, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0f, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x08, 0x73, 0x6e, 0x6f, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x15, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x5f,
	0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11,
	0x3a, 0x01, 0x30, 0x52, 0x14, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x44,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x10, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x11, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x65, 0x70, 0x55, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x11,
	0x52, 0x0e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x36, 0x0a, 0x17, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x11, 0x52, 0x15, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0b, 0x4c, 0x65, 0x61,
	0x72, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6e, 0x6f, 0x5f,
	0x6c, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0f, 0x52, 0x0e, 0x73, 0x6e, 0x6f, 0x4c, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x73, 0x6e, 0x6f, 0x5f, 0x6c, 0x6f, 0x72, 0x65, 0x5f, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x16, 0x73, 0x6e, 0x6f, 0x4c, 0x6f, 0x72, 0x65, 0x4c, 0x65,
	0x61, 0x72, 0x6e, 0x65, 0x64, 0x42, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3d, 0x0a,
	0x1b, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x18, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6c, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x6a, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f, 0x6c,
	0x64, 0x6f, 0x77, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0f, 0x52, 0x0f,
	0x73, 0x6e, 0x6f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x12, 0x53, 0x61, 0x76,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x36, 0x0a, 0x17, 0x73, 0x6e, 0x6f, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0f,
	0x52, 0x15, 0x73, 0x6e, 0x6f, 0x53, 0x61, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x47, 0x0a, 0x20, 0x73, 0x6e, 0x6f, 0x5f, 0x73,
	0x61, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x1d, 0x73, 0x6e, 0x6f, 0x53, 0x61, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x3d, 0x0a, 0x1b, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4c,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6c, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x58, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x46, 0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x2e, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f,
	0x77, 0x6e, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x13, 0x53, 0x61,
	0x76, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1f, 0x0a, 0x09, 0x73, 0x6e, 0x6f, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0f, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x08, 0x73, 0x6e, 0x6f, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x12, 0x2d, 0x0a, 0x10, 0x73, 0x61, 0x76, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x11, 0x3a, 0x02, 0x2d, 0x31,
	0x52, 0x0f, 0x73, 0x61, 0x76, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0d, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x22, 0x28, 0x0a, 0x05, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x09, 0x73, 0x6e, 0x6f, 0x5f, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0f, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x08, 0x73, 0x6e, 0x6f,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x33, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x11, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x01, 0x78, 0x12, 0x10, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x11, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x01, 0x79, 0x22, 0x4e, 0x0a, 0x0a, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x12, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x08, 0x4e, 0x61,
	0x6d, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x08, 0x48, 0x65,
	0x72, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64,
	0x73, 0x22, 0x4c, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x61, 0x76, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46, 0x65, 0x6e, 0x72,
	0x69, 0x73, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0b, 0x73, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22,
	0xbc, 0x02, 0x0a, 0x19, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x65, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0f, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x6e, 0x67,
	0x65, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0f,
	0x52, 0x13, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x43, 0x0a, 0x1e, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xa7,
	0x02, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x65, 0x64, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x09, 0x73, 0x6e, 0x6f, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0f, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x08, 0x73, 0x6e, 0x6f, 0x57,
	0x6f, 0x72, 0x6c, 0x64, 0x12, 0x30, 0x0a, 0x12, 0x6b, 0x65, 0x79, 0x65, 0x64, 0x5f, 0x64, 0x75,
	0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11,
	0x3a, 0x02, 0x2d, 0x31, 0x52, 0x10, 0x6b, 0x65, 0x79, 0x65, 0x64, 0x44, 0x75, 0x6e, 0x67, 0x65,
	0x6f, 0x6e, 0x54, 0x69, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x76, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x3a, 0x02, 0x2d, 0x31,
	0x52, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4c, 0x0a,
	0x15, 0x6b, 0x65, 0x79, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x46,
	0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x12, 0x6b, 0x65, 0x79, 0x65, 0x64, 0x44, 0x75,
	0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73,
	0x6e, 0x6f, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x78,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x11, 0x73, 0x6e, 0x6f, 0x44, 0x75, 0x6e,
	0x67, 0x65, 0x6f, 0x6e, 0x41, 0x66, 0x66, 0x69, 0x78, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x62, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x08,
	0x67, 0x62, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xeb, 0x02, 0x0a, 0x0d, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x42, 0x6e, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x16, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6e, 0x6f, 0x5f, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x07, 0x52, 0x08, 0x73, 0x6e, 0x6f, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4b, 0x0a, 0x12, 0x6b, 0x65, 0x79, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x65,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x46, 0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x65,
	0x64, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x6b, 0x65,
	0x79, 0x65, 0x64, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x67,
	0x0a, 0x1c, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x46, 0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x48, 0x65,
	0x72, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x52, 0x19, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x5f, 0x74, 0x69, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x54, 0x69, 0x65, 0x72, 0x22, 0xcf, 0x01, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0b, 0x73, 0x6e, 0x6f,
	0x5f, 0x73, 0x75, 0x62, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0f, 0x3a, 0x02,
	0x2d, 0x31, 0x52, 0x0a, 0x73, 0x6e, 0x6f, 0x53, 0x75, 0x62, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x30,
	0x0a, 0x12, 0x73, 0x6e, 0x6f, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0f, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x10,
	0x73, 0x6e, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x09, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x11, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x08, 0x70, 0x68, 0x61, 0x73, 0x65, 0x55, 0x69,
	0x64, 0x12, 0x45, 0x0a, 0x1f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x2c, 0x0a, 0x09, 0x4d, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x09, 0x73, 0x6e, 0x6f, 0x5f, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0f, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x08, 0x73, 0x6e,
	0x6f, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x69, 0x0a, 0x0e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x06, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x46, 0x65, 0x6e, 0x72, 0x69,
	0x73, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x5f, 0x72, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x69, 0x64, 0x69, 0x6e,
	0x67, 0x22, 0xb5, 0x01, 0x0a, 0x13, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x57, 0x68, 0x65, 0x65,
	0x6c, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x68, 0x65,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x77, 0x68, 0x65,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6e, 0x6f, 0x5f, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x07, 0x52, 0x08, 0x73, 0x6e, 0x6f, 0x45, 0x6d, 0x6f,
	0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0d, 0x73, 0x6e, 0x6f, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x65, 0x0a, 0x18, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0f, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x5f, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x46, 0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x2e, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x52, 0x0e, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73,
	0x22, 0x7e, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x6f, 0x67, 0x53, 0x6c, 0x6f, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6e, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0f, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x53, 0x6e, 0x6f, 0x12, 0x1b, 0x0a, 0x07, 0x64, 0x79, 0x65, 0x5f, 0x73, 0x6e, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0f, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x06, 0x64, 0x79, 0x65, 0x53, 0x6e, 0x6f,
	0x12, 0x1e, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x22, 0x7b, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x6c, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6c, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x5f, 0x0a,
	0x19, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xfa,
	0x01, 0x0a, 0x24, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x44, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x46, 0x65,
	0x6e, 0x72, 0x69, 0x73, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x46, 0x65, 0x6e, 0x72, 0x69, 0x73, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x12, 0x47, 0x0a, 0x0b, 0x6c, 0x6f, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x46, 0x65, 0x6e, 0x72, 0x69, 0x73,
	0x2e, 0x48, 0x65, 0x72, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x0a, 0x6c, 0x6f, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x22, 0xad, 0x03, 0x0a, 0x15,
	0x50, 0x61, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x61, 0x76, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x18, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x16, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x39, 0x0a, 0x19, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x64, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x6c, 0x79, 0x70, 0x68, 0x5f, 0x73, 0x6e, 0x6f,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x11, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x65,
	0x64, 0x47, 0x6c, 0x79, 0x70, 0x68, 0x53, 0x6e, 0x6f, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x6e, 0x6f,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x11, 0x65, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65,
	0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x6f, 0x73, 0x12, 0x47, 0x0a, 0x20, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x1d, 0x65, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x74, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x46, 0x0a, 0x20, 0x65, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x1c, 0x65,
	0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x10, 0x50,
	0x61, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x47, 0x6c, 0x79, 0x70, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1f, 0x0a, 0x09, 0x73, 0x6e, 0x6f, 0x5f, 0x67, 0x6c, 0x79, 0x70, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0f, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x08, 0x73, 0x6e, 0x6f, 0x47, 0x6c, 0x79, 0x70, 0x68,
	0x12, 0x2c, 0x0a, 0x10, 0x67, 0x6c, 0x79, 0x70, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0f, 0x67,
	0x6c, 0x79, 0x70, 0x68, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x55,
	0x0a, 0x15, 0x50, 0x61, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x47, 0x6c, 0x79, 0x70, 0x68, 0x53, 0x61,
	0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0a, 0x67, 0x6c, 0x79, 0x70, 0x68,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x46, 0x65,
	0x6e, 0x72, 0x69, 0x73, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x67, 0x6f,
	0x6e, 0x47, 0x6c, 0x79, 0x70, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x67, 0x6c, 0x79, 0x70,
	0x68, 0x44, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0a, 0x73, 0x6e, 0x6f, 0x5f, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0f, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x09, 0x73, 0x6e,
	0x6f, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x21, 0x0a, 0x0a, 0x73, 0x6e, 0x6f, 0x5f, 0x73,
	0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0f, 0x3a, 0x02, 0x2d, 0x31, 0x52,
	0x09, 0x73, 0x6e, 0x6f, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x22, 0x6e, 0x0a, 0x0d, 0x42, 0x6c,
	0x6f, 0x6f, 0x64, 0x53, 0x65, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0d, 0x73,
	0x6e, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x73, 0x65, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0f, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0c, 0x73, 0x6e, 0x6f, 0x42, 0x6c, 0x6f, 0x6f, 0x64,
	0x73, 0x65, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x14, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x73, 0x65, 0x61,
	0x6c, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x13, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x73, 0x65, 0x61, 0x6c,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x12, 0x42,
	0x6c, 0x6f, 0x6f, 0x64, 0x53, 0x65, 0x61, 0x6c, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x45, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x64,
	0x73, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x46, 0x65,
	0x6e, 0x72, 0x69, 0x73, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x53,
	0x65, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x42, 0x6c,
	0x6f, 0x6f, 0x64, 0x73, 0x65, 0x61, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x6e, 0x6f, 0x5f,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x73, 0x65,
	0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x15, 0x73, 0x6e, 0x6f, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x73, 0x65, 0x61, 0x6c, 0x73,
	0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6a, 0x62, 0x72, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x64, 0x34, 0x2d, 0x62, 0x6e, 0x65, 0x74,
	0x2d, 0x6d, 0x69, 0x74, 0x6d, 0x2f, 0x62, 0x6e, 0x65, 0x74, 0x2f, 0x46, 0x65, 0x6e, 0x72, 0x69,
	0x73, 0x2f, 0x48, 0x65, 0x72, 0x6f,
}

var (
	file_HeroCommon_proto_rawDescOnce sync.Once
	file_HeroCommon_proto_rawDescData = file_HeroCommon_proto_rawDesc
)

func file_HeroCommon_proto_rawDescGZIP() []byte {
	file_HeroCommon_proto_rawDescOnce.Do(func() {
		file_HeroCommon_proto_rawDescData = protoimpl.X.CompressGZIP(file_HeroCommon_proto_rawDescData)
	})
	return file_HeroCommon_proto_rawDescData
}

var file_HeroCommon_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_HeroCommon_proto_goTypes = []interface{}{
	(*VisualItem)(nil),                           // 0: Fenris.Hero.VisualItem
	(*VisualEquipment)(nil),                      // 1: Fenris.Hero.VisualEquipment
	(*SavedQuest)(nil),                           // 2: Fenris.Hero.SavedQuest
	(*LearnedLore)(nil),                          // 3: Fenris.Hero.LearnedLore
	(*ConversationCooldown)(nil),                 // 4: Fenris.Hero.ConversationCooldown
	(*SavedConversations)(nil),                   // 5: Fenris.Hero.SavedConversations
	(*SavePointData_Proto)(nil),                  // 6: Fenris.Hero.SavePointData_Proto
	(*Skill)(nil),                                // 7: Fenris.Hero.Skill
	(*SavedItemLink)(nil),                        // 8: Fenris.Hero.SavedItemLink
	(*Timestamps)(nil),                           // 9: Fenris.Hero.Timestamps
	(*NameText)(nil),                             // 10: Fenris.Hero.NameText
	(*HeroList)(nil),                             // 11: Fenris.Hero.HeroList
	(*SavedQuestList)(nil),                       // 12: Fenris.Hero.SavedQuestList
	(*WorldCreateDebugOverrides)(nil),            // 13: Fenris.Hero.WorldCreateDebugOverrides
	(*KeyedDungeonData)(nil),                     // 14: Fenris.Hero.KeyedDungeonData
	(*CampaignState)(nil),                        // 15: Fenris.Hero.CampaignState
	(*GameQuestState)(nil),                       // 16: Fenris.Hero.GameQuestState
	(*MountData)(nil),                            // 17: Fenris.Hero.MountData
	(*MountSavedData)(nil),                       // 18: Fenris.Hero.MountSavedData
	(*SocialWheelOverride)(nil),                  // 19: Fenris.Hero.SocialWheelOverride
	(*SocialWheelConfiguration)(nil),             // 20: Fenris.Hero.SocialWheelConfiguration
	(*TransmogSlot)(nil),                         // 21: Fenris.Hero.TransmogSlot
	(*AssetListDataStore)(nil),                   // 22: Fenris.Hero.AssetListDataStore
	(*DesignerVariableDataStore)(nil),            // 23: Fenris.Hero.DesignerVariableDataStore
	(*AssetListExDesignerVariableDataStore)(nil), // 24: Fenris.Hero.AssetListExDesignerVariableDataStore
	(*ParagonBoardSavedData)(nil),                // 25: Fenris.Hero.ParagonBoardSavedData
	(*ParagonGlyphData)(nil),                     // 26: Fenris.Hero.ParagonGlyphData
	(*ParagonGlyphSavedData)(nil),                // 27: Fenris.Hero.ParagonGlyphSavedData
	(*PlayerTitle)(nil),                          // 28: Fenris.Hero.PlayerTitle
	(*BloodSealData)(nil),                        // 29: Fenris.Hero.BloodSealData
	(*BloodSealSavedData)(nil),                   // 30: Fenris.Hero.BloodSealSavedData
	(*Online.GameHandle)(nil),                    // 31: Fenris.Online.GameHandle
}
var file_HeroCommon_proto_depIdxs = []int32{
	0,  // 0: Fenris.Hero.VisualEquipment.visual_item:type_name -> Fenris.Hero.VisualItem
	4,  // 1: Fenris.Hero.SavedConversations.conversation_cooldowns:type_name -> Fenris.Hero.ConversationCooldown
	2,  // 2: Fenris.Hero.SavedQuestList.saved_quests:type_name -> Fenris.Hero.SavedQuest
	31, // 3: Fenris.Hero.KeyedDungeonData.keyed_dungeon_game_id:type_name -> Fenris.Online.GameHandle
	14, // 4: Fenris.Hero.CampaignState.keyed_dungeon_data:type_name -> Fenris.Hero.KeyedDungeonData
	13, // 5: Fenris.Hero.CampaignState.world_create_debug_overrides:type_name -> Fenris.Hero.WorldCreateDebugOverrides
	17, // 6: Fenris.Hero.MountSavedData.mounts:type_name -> Fenris.Hero.MountData
	19, // 7: Fenris.Hero.SocialWheelConfiguration.wheel_overrides:type_name -> Fenris.Hero.SocialWheelOverride
	22, // 8: Fenris.Hero.AssetListExDesignerVariableDataStore.asset_list:type_name -> Fenris.Hero.AssetListDataStore
	23, // 9: Fenris.Hero.AssetListExDesignerVariableDataStore.packed_datas:type_name -> Fenris.Hero.DesignerVariableDataStore
	23, // 10: Fenris.Hero.AssetListExDesignerVariableDataStore.loose_datas:type_name -> Fenris.Hero.DesignerVariableDataStore
	26, // 11: Fenris.Hero.ParagonGlyphSavedData.glyph_data:type_name -> Fenris.Hero.ParagonGlyphData
	29, // 12: Fenris.Hero.BloodSealSavedData.owned_bloodseals:type_name -> Fenris.Hero.BloodSealData
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_HeroCommon_proto_init() }
func file_HeroCommon_proto_init() {
	if File_HeroCommon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_HeroCommon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisualItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisualEquipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavedQuest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LearnedLore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationCooldown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavedConversations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavePointData_Proto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Skill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavedItemLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavedQuestList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldCreateDebugOverrides); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyedDungeonData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameQuestState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountSavedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialWheelOverride); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialWheelConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransmogSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetListDataStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesignerVariableDataStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetListExDesignerVariableDataStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParagonBoardSavedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParagonGlyphData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParagonGlyphSavedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BloodSealData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_HeroCommon_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BloodSealSavedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_HeroCommon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_HeroCommon_proto_goTypes,
		DependencyIndexes: file_HeroCommon_proto_depIdxs,
		MessageInfos:      file_HeroCommon_proto_msgTypes,
	}.Build()
	File_HeroCommon_proto = out.File
	file_HeroCommon_proto_rawDesc = nil
	file_HeroCommon_proto_goTypes = nil
	file_HeroCommon_proto_depIdxs = nil
}
